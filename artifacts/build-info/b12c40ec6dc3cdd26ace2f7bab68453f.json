{"id":"b12c40ec6dc3cdd26ace2f7bab68453f","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/**\n * @title Sapphire\n * @notice This library provides a number of convenient wrappers for\n * cryptographic operations such as the x25519 key derivation, Deoxys-II-based\n * encryption and decryption, signing key generation, message digest signing and\n * verification, gas padding and hashing.\n *\n * Most of the mentioned functions are implemented as Sapphire's precompiles and\n * are cheap to call.\n *\n * #### Calling Precompiles Manually\n *\n * You can override the wrappers and call Sapphire precompiles by dispatching\n * calls to specific well-known contract addresses, as described below. The\n * __Precompile address__ section of each function will show you the address\n * of the corresponding precompile.\n *\n * Input parameters should be packed into a contiguous memory region with each\n * chunk of data padded to 32 bytes as usual. The recommended way to construct\n * parameter byte sequences in Solidity is with `abi.encode` and `abi.decode`,\n * which will transparently handle things like putting `bytes` lengths in the\n * correct position.\n */\nlibrary Sapphire {\n    // Oasis-specific, confidential precompiles\n    address internal constant RANDOM_BYTES =\n        0x0100000000000000000000000000000000000001;\n    address internal constant DERIVE_KEY =\n        0x0100000000000000000000000000000000000002;\n    address internal constant ENCRYPT =\n        0x0100000000000000000000000000000000000003;\n    address internal constant DECRYPT =\n        0x0100000000000000000000000000000000000004;\n    address internal constant GENERATE_SIGNING_KEYPAIR =\n        0x0100000000000000000000000000000000000005;\n    address internal constant SIGN_DIGEST =\n        0x0100000000000000000000000000000000000006;\n    address internal constant VERIFY_DIGEST =\n        0x0100000000000000000000000000000000000007;\n    address internal constant CURVE25519_PUBLIC_KEY =\n        0x0100000000000000000000000000000000000008;\n    address internal constant GAS_USED =\n        0x0100000000000000000000000000000000000009;\n    address internal constant PAD_GAS =\n        0x010000000000000000000000000000000000000a;\n\n    // Oasis-specific, general precompiles\n    address internal constant SHA512_256 =\n        0x0100000000000000000000000000000000000101;\n    address internal constant SHA512 =\n        0x0100000000000000000000000000000000000102;\n    address internal constant SHA384 =\n        0x0100000000000000000000000000000000000104;\n\n    type Curve25519PublicKey is bytes32;\n    type Curve25519SecretKey is bytes32;\n\n    enum SigningAlg {\n        /// Ed25519 signature over the provided message using SHA-512/265 with a domain separator.\n        /// Can be used to sign transactions for the Oasis consensus layer and SDK paratimes.\n        Ed25519Oasis,\n        /// Ed25519 signature over the provided message.\n        Ed25519Pure,\n        /// Ed25519 signature over the provided prehashed SHA-512 digest.\n        Ed25519PrehashedSha512,\n        /// Secp256k1 signature over the provided message using SHA-512/256 with a domain separator.\n        /// Can be used to sign transactions for the Oasis consensus layer and SDK paratimes.\n        Secp256k1Oasis,\n        /// Secp256k1 over the provided Keccak256 digest.\n        /// Can be used to sign transactions for Ethereum-compatible networks.\n        Secp256k1PrehashedKeccak256,\n        /// Secp256k1 signature over the provided SHA-256 digest.\n        Secp256k1PrehashedSha256,\n        /// Sr25519 signature over the provided message.\n        Sr25519,\n        /// Secp256r1 signature over the provided SHA-256 digest.\n        Secp256r1PrehashedSha256,\n        /// Secp384r1 signature over the provided SHA-384 digest.\n        Secp384r1PrehashedSha384\n    }\n\n    /**\n     * @notice Generate `num_bytes` pseudo-random bytes, with an optional\n     * personalization string (`pers`) added into the hashing algorithm to\n     * increase domain separation when needed.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000001`\n     *\n     * #### Gas cost\n     *\n     * 10,000 minimum plus 240 per output word plus 60 per word of the\n     * personalization string.\n     *\n     * #### Implementation details\n     *\n     * The mode (e.g. simulation or \"view call\" vs transaction execution) is fed\n     * to TupleHash (among other block-dependent components) to derive the \"key\n     * id\", which is then used to derive a per-block VRF key from\n     * epoch-ephemeral entropy (using KMAC256 and cSHAKE) so a different key\n     * id will result in a unique per-block VRF key. This per-block VRF key is\n     * then used to create the per-block root RNG which is then used to derive\n     * domain-separated (using Merlin transcripts) per-transaction random RNGs\n     * which are then exposed via this precompile. The KMAC, cSHAKE and\n     * TupleHash algorithms are SHA-3 derived functions defined in [NIST\n     * Special Publication 800-185](https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-185.pdf).\n     *\n     * #### DANGER: Prior to Sapphire ParaTime 0.6.0\n     *\n     * All view queries and simulated transactions (via `eth_call`) would\n     * receive the same entropy in-between blocks if they use the same\n     * `num_bytes` and `pers` parameters. If your contract requires\n     * confidentiality you should generate a secret in the constructor to be\n     * used with view calls:\n     *\n     * ```solidity\n     * Sapphire.randomBytes(64, abi.encodePacked(msg.sender, this.perContactSecret));\n     * ```\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes memory randomPad = Sapphire.randomBytes(64, \"\");\n     * ```\n     *\n     * @param numBytes The number of bytes to return.\n     * @param pers An optional personalization string to increase domain\n     *        separation.\n     * @return The random bytes. If the number of bytes requested is too large\n     *         (over 1024), a smaller amount (1024) will be returned.\n     */\n    function randomBytes(uint256 numBytes, bytes memory pers)\n        internal\n        view\n        returns (bytes memory)\n    {\n        (bool success, bytes memory entropy) = RANDOM_BYTES.staticcall(\n            abi.encode(numBytes, pers)\n        );\n        require(success, \"randomBytes: failed\");\n        return entropy;\n    }\n\n    /**\n     * @notice Generates a Curve25519 keypair.\n     * @param pers An optional personalization string used to add domain\n     * separation.\n     * @return pk The Curve25519 public key. Useful for key exchange.\n     * @return sk The Curve25519 secret key. Pairs well with\n     * [deriveSymmetricKey](#derivesymmetrickey).\n     */\n    function generateCurve25519KeyPair(bytes memory pers)\n        internal\n        view\n        returns (Curve25519PublicKey pk, Curve25519SecretKey sk)\n    {\n        bytes memory scalar = randomBytes(32, pers);\n        // Twiddle some bits, as per RFC 7748 ยง5.\n        scalar[0] &= 0xf8; // Make it a multiple of 8 to avoid small subgroup attacks.\n        scalar[31] &= 0x7f; // Clamp to < 2^255 - 19\n        scalar[31] |= 0x40; // Clamp to >= 2^254\n        (bool success, bytes memory pkBytes) = CURVE25519_PUBLIC_KEY.staticcall(\n            scalar\n        );\n        require(success, \"gen curve25519 pk: failed\");\n        return (\n            Curve25519PublicKey.wrap(bytes32(pkBytes)),\n            Curve25519SecretKey.wrap(bytes32(scalar))\n        );\n    }\n\n    /**\n     * @notice Derive a symmetric key from a pair of keys using x25519.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000002`\n     *\n     * #### Gas cost\n     *\n     * 100,000\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes32 publicKey = ... ;\n     * bytes32 privateKey = ... ;\n     * bytes32 symmetric = Sapphire.deriveSymmetricKey(publicKey, privateKey);\n     * ```\n     *\n     * @param peerPublicKey The peer's public key.\n     * @param secretKey Your secret key.\n     * @return A derived symmetric key.\n     */\n    function deriveSymmetricKey(\n        Curve25519PublicKey peerPublicKey,\n        Curve25519SecretKey secretKey\n    ) internal view returns (bytes32) {\n        (bool success, bytes memory symmetric) = DERIVE_KEY.staticcall(\n            abi.encode(peerPublicKey, secretKey)\n        );\n        require(success, \"deriveSymmetricKey: failed\");\n        return bytes32(symmetric);\n    }\n\n    /**\n     * @notice Encrypt and authenticate the plaintext and additional data using\n     * DeoxysII.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000003`\n     *\n     * #### Gas cost\n     *\n     * 50,000 minimum plus 100 per word of input\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes32 key = ... ;\n     * bytes32 nonce = ... ;\n     * bytes memory text = \"plain text\";\n     * bytes memory ad = \"additional data\";\n     * bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n     * bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n     * ```\n     *\n     * @param key The key to use for encryption.\n     * @param nonce The nonce. Note that only the first 15 bytes of this\n     * parameter are used.\n     * @param plaintext The plaintext to encrypt and authenticate.\n     * @param additionalData The additional data to authenticate.\n     * @return The ciphertext with appended auth tag.\n     */\n    function encrypt(\n        bytes32 key,\n        bytes32 nonce,\n        bytes memory plaintext,\n        bytes memory additionalData\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory ciphertext) = ENCRYPT.staticcall(\n            abi.encode(key, nonce, plaintext, additionalData)\n        );\n        require(success, \"encrypt: failed\");\n        return ciphertext;\n    }\n\n    /**\n     * @notice Decrypt and authenticate the ciphertext and additional data using\n     * DeoxysII. Reverts if the auth tag is incorrect.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000004`\n     *\n     * #### Gas cost\n     *\n     * 50,000 minimum plus 100 per word of input\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes32 key = ... ;\n     * bytes32 nonce = ... ;\n     * bytes memory text = \"plain text\";\n     * bytes memory ad = \"additional data\";\n     * bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n     * bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n     * ```\n     *\n     * @param key The key to use for decryption.\n     * @param nonce The nonce. Note that only the first 15 bytes of this\n     * parameter are used.\n     * @param ciphertext The ciphertext with tag to decrypt and authenticate.\n     * @param additionalData The additional data to authenticate against the\n     * ciphertext.\n     * @return The original plaintext.\n     */\n    function decrypt(\n        bytes32 key,\n        bytes32 nonce,\n        bytes memory ciphertext,\n        bytes memory additionalData\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory plaintext) = DECRYPT.staticcall(\n            abi.encode(key, nonce, ciphertext, additionalData)\n        );\n        require(success, \"decrypt: failed\");\n        return plaintext;\n    }\n\n    /**\n     * @notice Generate a public/private key pair using the specified method and\n     * seed. The available methods are items in the\n     * [`Sapphire.SigningAlg`](#signingalg) enum. Note, however, that the\n     * generation method ignores subvariants, so all three Ed25519-based are\n     * equivalent, and all Secp256k1 & Secp256r1 based methods are equivalent.\n     * Sr25519 is not available and will return an error.\n     *\n     * #### Precompile address\n     * `0x0100000000000000000000000000000000000005`\n     *\n     * #### Gas Cost\n     *\n     * ##### Ed25519: 1,000 gas\n     *\n     * - `0` (`Ed25519Oasis`)\n     * - `1` (`Ed25519Pure`)\n     * - `2` (`Ed25519PrehashedSha512`)\n     *\n     * ##### Secp256k1: 1,500 gas.\n     * - `3` (`Secp256k1Oasis`)\n     * - `4` (`Secp256k1PrehashedKeccak256`)\n     * - `5` (`Secp256k1PrehashedSha256`)\n     *\n     * ##### Secp256r1: 4,000 gas\n     * - `7` (`Secp256r1PrehashedSha256`)\n     *\n     * #### Public Key Format\n     *\n     * ##### Ed25519\n     *\n     * 32 bytes\n     *\n     * ##### Secp256k1 & Secp256r1\n     *\n     * 33 bytes, compressed format (`0x02` or `0x03` prefix, then 32 byte X\n     * coordinate).\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes memory seed = hex\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\";\n     * bytes memory publicKey;\n     * bytes memory privateKey;\n     * (publicKey, privateKey) = Sapphire.generateSigningKeyPair(Sapphire.SigningAlg.Ed25519Pure, seed);\n     * ```\n     *\n     * @param alg The signing alg for which to generate a keypair.\n     * @param seed The seed to use for generating the key pair. You can use the\n     * `randomBytes` method if you don't already have a seed.\n     * @return publicKey The public half of the keypair.\n     * @return secretKey The secret half of the keypair.\n     */\n    function generateSigningKeyPair(SigningAlg alg, bytes memory seed)\n        internal\n        view\n        returns (bytes memory publicKey, bytes memory secretKey)\n    {\n        (bool success, bytes memory keypair) = GENERATE_SIGNING_KEYPAIR\n            .staticcall(abi.encode(alg, seed));\n        require(success, \"gen signing keypair: failed\");\n        return abi.decode(keypair, (bytes, bytes));\n    }\n\n    /**\n     * @notice Sign a message within the provided context using the specified\n     * algorithm, and return the signature. The `context_or_digest` and\n     * `messages` parameters change in meaning slightly depending on the method\n     * requested. For methods that take a context in addition to the message you\n     * must pass the context in the `context_or_digest` parameter and use\n     * `message` as expected. For methods that take a pre-existing hash of the\n     * message, pass that in `context_or_digest` and leave `message` empty.\n     * Specifically the `Ed25519Oasis` and `Secp256k1Oasis` variants take both a\n     * context and a message (each are variable length `bytes`), the context\n     * serves as a domain separator.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000006`\n     *\n     * #### Gas cost\n     *\n     * See below for the method-dependent base cost, plus 8 gas per 32 bytes of\n     * context and message except digest.\n     *\n     * #### Signing algorithms\n     *\n     * - `0` (`Ed25519Oasis`): 1,500 gas, variable length context and message.\n     * - `1` (`Ed25519Pure`): 1,500 gas, empty context, variable length message.\n     * - `2` (`Ed25519PrehashedSha512`): 1,500 gas, pre-existing SHA-512 hash\n     *   (64 bytes) as context, empty message.\n     * - `3` (`Secp256k1Oasis`): 3,000 gas, variable length context and message\n     * - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas, pre-existing hash\n     *   (32 bytes) as context, empty message.\n     * - `5` (`Secp256k1PrehashedSha256`): 3,000 gas, pre-existing hash (32\n     *   bytes) as context, empty message.\n     * - `7` (`Secp256r1PrehashedSha256`): 9,000 gas, pre-existing hash (32\n     *   bytes) as context, empty message.\n     *\n     * #### Example\n     *\n     * ```solidity\n     * Sapphire.SigningAlg alg = Sapphire.SigningAlg.Ed25519Pure;\n     * bytes memory pk;\n     * bytes memory sk;\n     * (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n     * bytes memory signature = Sapphire.sign(alg, sk, \"\", \"signed message\");\n     * ```\n     *\n     * @param alg The signing algorithm to use.\n     * @param secretKey The secret key to use for signing. The key must be valid\n     * for use with the requested algorithm.\n     * @param contextOrHash Domain-Separator Context, or precomputed hash bytes.\n     * @param message Message to sign, should be zero-length if precomputed hash\n     * given.\n     * @return signature The resulting signature.\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_sign\n     */\n    function sign(\n        SigningAlg alg,\n        bytes memory secretKey,\n        bytes memory contextOrHash,\n        bytes memory message\n    ) internal view returns (bytes memory signature) {\n        (bool success, bytes memory sig) = SIGN_DIGEST.staticcall(\n            abi.encode(alg, secretKey, contextOrHash, message)\n        );\n        require(success, \"sign: failed\");\n        return sig;\n    }\n\n    /**\n     * @notice Verifies that the provided digest was signed with using the\n     * secret key corresponding to the provided private key and the specified\n     * signing algorithm.\n     *\n     * The `method`, `context_or_digest` and `message` parameters have the same\n     * meaning as described above in the [sign()](#sign) function.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000007`\n     *\n     * #### Gas cost\n     *\n     * The algorithm-specific base cost below, with an additional **8 gas per\n     * 32 bytes** of `context` and `message` for the `Ed25519Oasis`,\n     * `Ed25519Pure` and `Secp256k1Oasis` algorithms.\n     *\n     * - `0` (`Ed25519Oasis`): 2,000 gas\n     * - `1` (`Ed25519Pure`): 2,000 gas\n     * - `2` (`Ed25519PrehashedSha512`): 2,000 gas\n     * - `3` (`Secp256k1Oasis`): 3,000 gas\n     * - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas\n     * - `5` (`Secp256k1PrehashedSha256`): 3,000 gas\n     * - `7` (`Secp256r1PrehashedSha256`): 7,900 gas\n     *\n     * #### Example\n     *\n     * ```solidity\n     * Sapphire.SigningAlg alg = Sapphire.SigningAlg.Secp256k1PrehashedKeccak256;\n     * bytes memory pk;\n     * bytes memory sk;\n     * bytes memory digest = abi.encodePacked(keccak256(\"signed message\"));\n     * (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n     * bytes memory signature = Sapphire.sign(alg, sk, digest, \"\");\n     * require( Sapphire.verify(alg, pk, digest, \"\", signature) );\n     * ```\n     *\n     * @param alg The signing algorithm by which the signature was generated.\n     * @param publicKey The public key against which to check the signature.\n     * @param contextOrHash Domain-Separator Context, or precomputed hash bytes\n     * @param message The hash of the message that was signed, should be\n     * zero-length if precomputed hash was given.\n     * @param signature The signature to check.\n     * @return verified Whether the signature is valid for the given parameters.\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_verify\n     */\n    function verify(\n        SigningAlg alg,\n        bytes memory publicKey,\n        bytes memory contextOrHash,\n        bytes memory message,\n        bytes memory signature\n    ) internal view returns (bool verified) {\n        (bool success, bytes memory v) = VERIFY_DIGEST.staticcall(\n            abi.encode(alg, publicKey, contextOrHash, message, signature)\n        );\n        require(success, \"verify: failed\");\n        return abi.decode(v, (bool));\n    }\n\n    /**\n     * @notice Set the current transactions gas usage to a specific amount\n     * @dev Will cause a reversion if the current usage is more than the amount.\n     * @param toAmount Gas usage will be set to this amount\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_pad_gas\n     *\n     */\n    function padGas(uint128 toAmount) internal view {\n        (bool success, ) = PAD_GAS.staticcall(abi.encode(toAmount));\n        require(success, \"verify: failed\");\n    }\n\n    /**\n     * @notice Returns the amount of gas currently used by the transaction\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_gas_used\n     */\n    function gasUsed() internal view returns (uint64) {\n        (bool success, bytes memory v) = GAS_USED.staticcall(\"\");\n        require(success, \"gasused: failed\");\n        return abi.decode(v, (uint64));\n    }\n}\n\n/**\n * @notice Hash the input data with SHA-512/256, according to\n * [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n *\n * #### Precompile address\n *\n * `0x0100000000000000000000000000000000000102`\n *\n * #### Gas cost\n *\n * 115 gas, then 13 gas per word\n *\n * #### Example\n *\n * ```solidity\n * bytes32 result = sha512_256(abi.encodePacked(\"input data\"));\n * ```\n *\n * #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n *\n * [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n * attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n * relevant if you are computing the hash of a secret message. The\n * [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n * vulnerable to length-extension attacks.\n *\n * @param input Bytes to hash.\n * @return result 32 byte digest.\n * @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n * @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512_256\n */\nfunction sha512_256(bytes memory input) view returns (bytes32 result) {\n    (bool success, bytes memory output) = Sapphire.SHA512_256.staticcall(input);\n\n    require(success, \"sha512_256\");\n\n    return bytes32(output);\n}\n\n/**\n * @notice Hash the input data with SHA-512, according to\n * [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf)\n *\n * #### Precompile address\n *\n * `0x0100000000000000000000000000000000000101`\n *\n * #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n *\n * [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n * attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n * relevant if you are computing the hash of a secret message. The\n * [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n * vulnerable to length-extension attacks.\n *\n * #### Gas Cost\n *\n * 115 gas, then 13 gas per word\n *\n * #### Example\n *\n * ```solidity\n * bytes memory result = sha512(abi.encodePacked(\"input data\"));\n * ```\n *\n * @param input Bytes to hash.\n * @return output 64 byte digest.\n * @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n * @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512\n */\nfunction sha512(bytes memory input) view returns (bytes memory output) {\n    bool success;\n\n    (success, output) = Sapphire.SHA512.staticcall(input);\n\n    require(success, \"sha512\");\n}\n\n/**\n * @notice Hash the input data with SHA-384.\n * @param input Bytes to hash.\n * @return output 48 byte digest.\n * @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n * @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha384\n */\nfunction sha384(bytes memory input) view returns (bytes memory output) {\n    bool success;\n\n    (success, output) = Sapphire.SHA384.staticcall(input);\n\n    require(success, \"sha384\");\n}\n"},"contracts/Cards.sol":{"content":"\nenum Suit {\n    Hearts,\n    Diamonds,\n    Clubs,\n    Spades\n}\n\nenum Rank {\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    Ten,\n    Jack,\n    Queen,\n    King,\n    Ace\n}\n\nstruct Card {\n    Suit suit;\n    Rank rank;\n}\n\nlibrary CardUtils {\n\n    function create(uint8 index) internal pure returns (Card memory) {\n        return Card({\n            suit: getSuit(index),\n            rank: getRank(index)\n        });\n    }\n\n    function getSuit(uint8 index) internal pure returns (Suit) {\n        return Suit(index / 13);\n    }\n\n    function getRank(uint8 index) internal pure returns (Rank) {\n        return Rank(index % 13);\n    }\n\n    function toString(Suit suit) internal pure returns (string memory) {\n        return \n            suit == Suit.Hearts ? \"Hearts\" : \n            suit == Suit.Diamonds ? \"Diamonds\" : \n            suit == Suit.Clubs ? \"Clubs\" : \n            \"Spades\";\n    }\n\n    function toString(Rank rank) internal pure returns (string memory) {\n        return \n            rank == Rank.Two ? \"Two\" : \n            rank == Rank.Three ? \"Three\" : \n            rank == Rank.Four ? \"Four\" : \n            rank == Rank.Five ? \"Five\" : \n            rank == Rank.Six ? \"Six\" : \n            rank == Rank.Seven ? \"Seven\" : \n            rank == Rank.Eight ? \"Eight\" : \n            rank == Rank.Nine ? \"Nine\" : \n            rank == Rank.Ten ? \"Ten\" : \n            rank == Rank.Jack ? \"Jack\" : \n            rank == Rank.Queen ? \"Queen\" : \n            rank == Rank.King ? \"King\" : \n            \"Ace\";\n    }\n\n    function toString(Card memory card) internal pure returns (string memory) {\n        return string(abi.encodePacked(toString(card.rank), \" of \", toString(card.suit)));\n    }\n}\n"},"contracts/Constants.sol":{"content":"bytes6 constant ONE_B6 = bytes6(bytes32(uint(1)));\nuint8 constant NCARDS = 52;"},"contracts/Game.sol":{"content":"pragma solidity ^0.8.9;\n\nimport \"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\";\nimport \"./Constants.sol\";\nimport \"./Cards.sol\";\n\n\nstruct Deck {\n    bytes indices;\n}\n\nlibrary DeckUtils {\n    \n    function create() internal view returns (Deck memory) {\n        bytes memory seed = Sapphire.randomBytes(NCARDS, \"\");\n        return Deck(seedIntoCardIndices(seed));\n    }\n\n    function seedIntoCardIndices(bytes memory randomBytes) public pure returns (bytes memory) {\n        require(randomBytes.length == NCARDS, \"Invalid random bytes length\");\n        bytes memory indices = new bytes(NCARDS);\n        bytes6 bloomFilter;\n        for (uint i=0; i<randomBytes.length; ++i) {\n            uint8 cardIdx = uint8(randomBytes[i]);\n            while (true) {\n                bool isInDeck = (bloomFilter & (ONE_B6 << cardIdx)) != 0;\n                if (isInDeck) {\n                    cardIdx = (cardIdx + 1) % NCARDS;\n                } else {\n                    bloomFilter |= ONE_B6 << cardIdx;\n                    break;\n                }\n            }\n            indices[i] = bytes1(cardIdx);\n        }\n    }\n\n}\n\nenum GameStatus {\n    Pending,\n    Open,\n    Closed\n}\n\nstruct Game {\n    Deck deck;\n    address[] players;\n    GameStatus status;\n}\n\n\nlibrary GameUtils {\n\n    modifier onlyPending(Game storage game) {\n        require(game.status == GameStatus.Pending, \"Game is not pending\");\n        _;\n    }\n\n    function create() internal view returns (Game memory) {\n        return Game({\n            deck: DeckUtils.create(),\n            players: new address[](0),\n            status: GameStatus.Pending\n        });\n    }\n\n    function join(Game storage game, address player) internal onlyPending(game) {\n        game.players.push(player);\n    }\n\n    \n\n}\n"},"contracts/Poker.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"./Game.sol\";\n\n// todo: add events\n// todo: add money handling\n\ncontract Poker {\n    using GameUtils for Game;\n\n    uint lastGameId = 0;\n    mapping(uint => Game) private gameToDeck;\n\n    function createGame() external {\n        gameToDeck[lastGameId++] = GameUtils.create();\n    }\n\n    function joinGame(uint gameId) external {\n        gameToDeck[gameId].join(msg.sender);\n    }\n\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Cards.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Cards.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Constants.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Constants.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Game.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Game.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.9;\"\n--> contracts/Cards.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.9;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Cards.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.9;\"\n--> contracts/Constants.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.9;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Constants.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/Game.sol:19:81:\n   |\n19 |     function seedIntoCardIndices(bytes memory randomBytes) public pure returns (bytes memory) {\n   |                                                                                 ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":472,"file":"contracts/Game.sol","start":460},"type":"Warning"}],"sources":{"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol":{"ast":{"absolutePath":"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol","exportedSymbols":{"Sapphire":[443],"sha384":[526],"sha512":[499],"sha512_256":[472]},"id":527,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Sapphire","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"64:1052:0","text":" @title Sapphire\n @notice This library provides a number of convenient wrappers for\n cryptographic operations such as the x25519 key derivation, Deoxys-II-based\n encryption and decryption, signing key generation, message digest signing and\n verification, gas padding and hashing.\n Most of the mentioned functions are implemented as Sapphire's precompiles and\n are cheap to call.\n #### Calling Precompiles Manually\n You can override the wrappers and call Sapphire precompiles by dispatching\n calls to specific well-known contract addresses, as described below. The\n __Precompile address__ section of each function will show you the address\n of the corresponding precompile.\n Input parameters should be packed into a contiguous memory region with each\n chunk of data padded to 32 bytes as usual. The recommended way to construct\n parameter byte sequences in Solidity is with `abi.encode` and `abi.decode`,\n which will transparently handle things like putting `bytes` lengths in the\n correct position."},"fullyImplemented":true,"id":443,"linearizedBaseContracts":[443],"name":"Sapphire","nameLocation":"1125:8:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"RANDOM_BYTES","nameLocation":"1214:12:0","nodeType":"VariableDeclaration","scope":443,"src":"1188:91:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"1188:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303031","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1237:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000001"},"visibility":"internal"},{"constant":true,"id":8,"mutability":"constant","name":"DERIVE_KEY","nameLocation":"1311:10:0","nodeType":"VariableDeclaration","scope":443,"src":"1285:89:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303032","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000002"},"visibility":"internal"},{"constant":true,"id":11,"mutability":"constant","name":"ENCRYPT","nameLocation":"1406:7:0","nodeType":"VariableDeclaration","scope":443,"src":"1380:86:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"1380:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303033","id":10,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1424:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000003"},"visibility":"internal"},{"constant":true,"id":14,"mutability":"constant","name":"DECRYPT","nameLocation":"1498:7:0","nodeType":"VariableDeclaration","scope":443,"src":"1472:86:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303034","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1516:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000004"},"visibility":"internal"},{"constant":true,"id":17,"mutability":"constant","name":"GENERATE_SIGNING_KEYPAIR","nameLocation":"1590:24:0","nodeType":"VariableDeclaration","scope":443,"src":"1564:103:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303035","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1625:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000005"},"visibility":"internal"},{"constant":true,"id":20,"mutability":"constant","name":"SIGN_DIGEST","nameLocation":"1699:11:0","nodeType":"VariableDeclaration","scope":443,"src":"1673:90:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1673:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303036","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000006"},"visibility":"internal"},{"constant":true,"id":23,"mutability":"constant","name":"VERIFY_DIGEST","nameLocation":"1795:13:0","nodeType":"VariableDeclaration","scope":443,"src":"1769:92:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303037","id":22,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1819:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000007"},"visibility":"internal"},{"constant":true,"id":26,"mutability":"constant","name":"CURVE25519_PUBLIC_KEY","nameLocation":"1893:21:0","nodeType":"VariableDeclaration","scope":443,"src":"1867:100:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303038","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1925:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000008"},"visibility":"internal"},{"constant":true,"id":29,"mutability":"constant","name":"GAS_USED","nameLocation":"1999:8:0","nodeType":"VariableDeclaration","scope":443,"src":"1973:87:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303039","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2018:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000009"},"visibility":"internal"},{"constant":true,"id":32,"mutability":"constant","name":"PAD_GAS","nameLocation":"2092:7:0","nodeType":"VariableDeclaration","scope":443,"src":"2066:86:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303061","id":31,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2110:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x010000000000000000000000000000000000000a"},"visibility":"internal"},{"constant":true,"id":35,"mutability":"constant","name":"SHA512_256","nameLocation":"2228:10:0","nodeType":"VariableDeclaration","scope":443,"src":"2202:89:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"2202:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030313031","id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2249:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000101"},"visibility":"internal"},{"constant":true,"id":38,"mutability":"constant","name":"SHA512","nameLocation":"2323:6:0","nodeType":"VariableDeclaration","scope":443,"src":"2297:85:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"2297:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030313032","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2340:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000102"},"visibility":"internal"},{"constant":true,"id":41,"mutability":"constant","name":"SHA384","nameLocation":"2414:6:0","nodeType":"VariableDeclaration","scope":443,"src":"2388:85:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"2388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030313034","id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2431:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000104"},"visibility":"internal"},{"canonicalName":"Sapphire.Curve25519PublicKey","id":43,"name":"Curve25519PublicKey","nameLocation":"2485:19:0","nodeType":"UserDefinedValueTypeDefinition","src":"2480:36:0","underlyingType":{"id":42,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2508:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"Sapphire.Curve25519SecretKey","id":45,"name":"Curve25519SecretKey","nameLocation":"2526:19:0","nodeType":"UserDefinedValueTypeDefinition","src":"2521:36:0","underlyingType":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2549:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"Sapphire.SigningAlg","id":55,"members":[{"id":46,"name":"Ed25519Oasis","nameLocation":"2782:12:0","nodeType":"EnumValue","src":"2782:12:0"},{"id":47,"name":"Ed25519Pure","nameLocation":"2861:11:0","nodeType":"EnumValue","src":"2861:11:0"},{"id":48,"name":"Ed25519PrehashedSha512","nameLocation":"2956:22:0","nodeType":"EnumValue","src":"2956:22:0"},{"id":49,"name":"Secp256k1Oasis","nameLocation":"3183:14:0","nodeType":"EnumValue","src":"3183:14:0"},{"id":50,"name":"Secp256k1PrehashedKeccak256","nameLocation":"3344:27:0","nodeType":"EnumValue","src":"3344:27:0"},{"id":51,"name":"Secp256k1PrehashedSha256","nameLocation":"3447:24:0","nodeType":"EnumValue","src":"3447:24:0"},{"id":52,"name":"Sr25519","nameLocation":"3538:7:0","nodeType":"EnumValue","src":"3538:7:0"},{"id":53,"name":"Secp256r1PrehashedSha256","nameLocation":"3621:24:0","nodeType":"EnumValue","src":"3621:24:0"},{"id":54,"name":"Secp384r1PrehashedSha384","nameLocation":"3721:24:0","nodeType":"EnumValue","src":"3721:24:0"}],"name":"SigningAlg","nameLocation":"2568:10:0","nodeType":"EnumDefinition","src":"2563:1188:0"},{"body":{"id":85,"nodeType":"Block","src":"6117:202:0","statements":[{"assignments":[66,68],"declarations":[{"constant":false,"id":66,"mutability":"mutable","name":"success","nameLocation":"6133:7:0","nodeType":"VariableDeclaration","scope":85,"src":"6128:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":65,"name":"bool","nodeType":"ElementaryTypeName","src":"6128:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"entropy","nameLocation":"6155:7:0","nodeType":"VariableDeclaration","scope":85,"src":"6142:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":67,"name":"bytes","nodeType":"ElementaryTypeName","src":"6142:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":77,"initialValue":{"arguments":[{"arguments":[{"id":73,"name":"numBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"6214:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":74,"name":"pers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"6224:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":71,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6203:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":72,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6203:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6203:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":69,"name":"RANDOM_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"6166:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6166:23:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6166:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6127:112:0"},{"expression":{"arguments":[{"id":79,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"6257:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72616e646f6d42797465733a206661696c6564","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6266:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac","typeString":"literal_string \"randomBytes: failed\""},"value":"randomBytes: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac","typeString":"literal_string \"randomBytes: failed\""}],"id":78,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6249:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6249:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":82,"nodeType":"ExpressionStatement","src":"6249:39:0"},{"expression":{"id":83,"name":"entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"6305:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":64,"id":84,"nodeType":"Return","src":"6298:14:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"3757:2232:0","text":" @notice Generate `num_bytes` pseudo-random bytes, with an optional\n personalization string (`pers`) added into the hashing algorithm to\n increase domain separation when needed.\n #### Precompile address\n `0x0100000000000000000000000000000000000001`\n #### Gas cost\n 10,000 minimum plus 240 per output word plus 60 per word of the\n personalization string.\n #### Implementation details\n The mode (e.g. simulation or \"view call\" vs transaction execution) is fed\n to TupleHash (among other block-dependent components) to derive the \"key\n id\", which is then used to derive a per-block VRF key from\n epoch-ephemeral entropy (using KMAC256 and cSHAKE) so a different key\n id will result in a unique per-block VRF key. This per-block VRF key is\n then used to create the per-block root RNG which is then used to derive\n domain-separated (using Merlin transcripts) per-transaction random RNGs\n which are then exposed via this precompile. The KMAC, cSHAKE and\n TupleHash algorithms are SHA-3 derived functions defined in [NIST\n Special Publication 800-185](https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-185.pdf).\n #### DANGER: Prior to Sapphire ParaTime 0.6.0\n All view queries and simulated transactions (via `eth_call`) would\n receive the same entropy in-between blocks if they use the same\n `num_bytes` and `pers` parameters. If your contract requires\n confidentiality you should generate a secret in the constructor to be\n used with view calls:\n ```solidity\n Sapphire.randomBytes(64, abi.encodePacked(msg.sender, this.perContactSecret));\n ```\n #### Example\n ```solidity\n bytes memory randomPad = Sapphire.randomBytes(64, \"\");\n ```\n @param numBytes The number of bytes to return.\n @param pers An optional personalization string to increase domain\n        separation.\n @return The random bytes. If the number of bytes requested is too large\n         (over 1024), a smaller amount (1024) will be returned."},"id":86,"implemented":true,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"6003:11:0","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"numBytes","nameLocation":"6023:8:0","nodeType":"VariableDeclaration","scope":86,"src":"6015:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"6015:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"pers","nameLocation":"6046:4:0","nodeType":"VariableDeclaration","scope":86,"src":"6033:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59,"name":"bytes","nodeType":"ElementaryTypeName","src":"6033:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6014:37:0"},"returnParameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":86,"src":"6099:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":62,"name":"bytes","nodeType":"ElementaryTypeName","src":"6099:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6098:14:0"},"scope":443,"src":"5994:325:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":153,"nodeType":"Block","src":"6814:604:0","statements":[{"assignments":[99],"declarations":[{"constant":false,"id":99,"mutability":"mutable","name":"scalar","nameLocation":"6837:6:0","nodeType":"VariableDeclaration","scope":153,"src":"6824:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":98,"name":"bytes","nodeType":"ElementaryTypeName","src":"6824:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":104,"initialValue":{"arguments":[{"hexValue":"3332","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6858:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":102,"name":"pers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"6862:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":100,"name":"randomBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"6846:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) view returns (bytes memory)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6846:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6824:43:0"},{"expression":{"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":105,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"6928:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":107,"indexExpression":{"hexValue":"30","id":106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6935:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"&=","rightHandSide":{"hexValue":"30786638","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6941:4:0","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"0xf8"},"src":"6928:17:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":110,"nodeType":"ExpressionStatement","src":"6928:17:0"},{"expression":{"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":111,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"7015:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":113,"indexExpression":{"hexValue":"3331","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7022:2:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"&=","rightHandSide":{"hexValue":"30783766","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7029:4:0","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"0x7f"},"src":"7015:18:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":116,"nodeType":"ExpressionStatement","src":"7015:18:0"},{"expression":{"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":117,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"7068:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":119,"indexExpression":{"hexValue":"3331","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7075:2:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7068:10:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"hexValue":"30783430","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7082:4:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"7068:18:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":122,"nodeType":"ExpressionStatement","src":"7068:18:0"},{"assignments":[124,126],"declarations":[{"constant":false,"id":124,"mutability":"mutable","name":"success","nameLocation":"7123:7:0","nodeType":"VariableDeclaration","scope":153,"src":"7118:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":123,"name":"bool","nodeType":"ElementaryTypeName","src":"7118:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"pkBytes","nameLocation":"7145:7:0","nodeType":"VariableDeclaration","scope":153,"src":"7132:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":125,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":131,"initialValue":{"arguments":[{"id":129,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"7202:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":127,"name":"CURVE25519_PUBLIC_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"7156:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"7156:32:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7156:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7117:101:0"},{"expression":{"arguments":[{"id":133,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"7236:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"67656e206375727665323535313920706b3a206661696c6564","id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7245:27:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a9a56956fb564bd7fa7e5455f2d50e37d7cff16ebd3280d11122562b576157d","typeString":"literal_string \"gen curve25519 pk: failed\""},"value":"gen curve25519 pk: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a9a56956fb564bd7fa7e5455f2d50e37d7cff16ebd3280d11122562b576157d","typeString":"literal_string \"gen curve25519 pk: failed\""}],"id":132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7228:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7228:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"7228:45:0"},{"expression":{"components":[{"arguments":[{"arguments":[{"id":141,"name":"pkBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"7337:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7329:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7329:7:0","typeDescriptions":{}}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7329:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":137,"name":"Curve25519PublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"7304:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Curve25519PublicKey_$43_$","typeString":"type(Sapphire.Curve25519PublicKey)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"wrap","nodeType":"MemberAccess","src":"7304:24:0","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Curve25519PublicKey_$43_$","typeString":"function (bytes32) pure returns (Sapphire.Curve25519PublicKey)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7304:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"}},{"arguments":[{"arguments":[{"id":148,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"7393:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7385:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7385:7:0","typeDescriptions":{}}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7385:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":144,"name":"Curve25519SecretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"7360:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Curve25519SecretKey_$45_$","typeString":"type(Sapphire.Curve25519SecretKey)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"wrap","nodeType":"MemberAccess","src":"7360:24:0","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Curve25519SecretKey_$45_$","typeString":"function (bytes32) pure returns (Sapphire.Curve25519SecretKey)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7360:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"}}],"id":151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7290:121:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Curve25519PublicKey_$43_$_t_userDefinedValueType$_Curve25519SecretKey_$45_$","typeString":"tuple(Sapphire.Curve25519PublicKey,Sapphire.Curve25519SecretKey)"}},"functionReturnParameters":97,"id":152,"nodeType":"Return","src":"7283:128:0"}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"6325:331:0","text":" @notice Generates a Curve25519 keypair.\n @param pers An optional personalization string used to add domain\n separation.\n @return pk The Curve25519 public key. Useful for key exchange.\n @return sk The Curve25519 secret key. Pairs well with\n [deriveSymmetricKey](#derivesymmetrickey)."},"id":154,"implemented":true,"kind":"function","modifiers":[],"name":"generateCurve25519KeyPair","nameLocation":"6670:25:0","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"pers","nameLocation":"6709:4:0","nodeType":"VariableDeclaration","scope":154,"src":"6696:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":88,"name":"bytes","nodeType":"ElementaryTypeName","src":"6696:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6695:19:0"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"pk","nameLocation":"6782:2:0","nodeType":"VariableDeclaration","scope":154,"src":"6762:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"},"typeName":{"id":92,"nodeType":"UserDefinedTypeName","pathNode":{"id":91,"name":"Curve25519PublicKey","nodeType":"IdentifierPath","referencedDeclaration":43,"src":"6762:19:0"},"referencedDeclaration":43,"src":"6762:19:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"sk","nameLocation":"6806:2:0","nodeType":"VariableDeclaration","scope":154,"src":"6786:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"},"typeName":{"id":95,"nodeType":"UserDefinedTypeName","pathNode":{"id":94,"name":"Curve25519SecretKey","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"6786:19:0"},"referencedDeclaration":45,"src":"6786:19:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"}},"visibility":"internal"}],"src":"6761:48:0"},"scope":443,"src":"6661:757:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":189,"nodeType":"Block","src":"8156:230:0","statements":[{"assignments":[167,169],"declarations":[{"constant":false,"id":167,"mutability":"mutable","name":"success","nameLocation":"8172:7:0","nodeType":"VariableDeclaration","scope":189,"src":"8167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":166,"name":"bool","nodeType":"ElementaryTypeName","src":"8167:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"symmetric","nameLocation":"8194:9:0","nodeType":"VariableDeclaration","scope":189,"src":"8181:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":168,"name":"bytes","nodeType":"ElementaryTypeName","src":"8181:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":178,"initialValue":{"arguments":[{"arguments":[{"id":174,"name":"peerPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"8253:13:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"}},{"id":175,"name":"secretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"8268:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"},{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"}],"expression":{"id":172,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8242:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"8242:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8242:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":170,"name":"DERIVE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"8207:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"8207:21:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8207:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8166:122:0"},{"expression":{"arguments":[{"id":180,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"8306:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64657269766553796d6d65747269634b65793a206661696c6564","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8315:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_987d340c438896174a2eb0db3a73ef80f720679a81bbb0b9ea3aa4467ab72d02","typeString":"literal_string \"deriveSymmetricKey: failed\""},"value":"deriveSymmetricKey: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_987d340c438896174a2eb0db3a73ef80f720679a81bbb0b9ea3aa4467ab72d02","typeString":"literal_string \"deriveSymmetricKey: failed\""}],"id":179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8298:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8298:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":183,"nodeType":"ExpressionStatement","src":"8298:46:0"},{"expression":{"arguments":[{"id":186,"name":"symmetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"8369:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8361:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:0","typeDescriptions":{}}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8361:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":165,"id":188,"nodeType":"Return","src":"8354:25:0"}]},"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"7424:579:0","text":" @notice Derive a symmetric key from a pair of keys using x25519.\n #### Precompile address\n `0x0100000000000000000000000000000000000002`\n #### Gas cost\n 100,000\n #### Example\n ```solidity\n bytes32 publicKey = ... ;\n bytes32 privateKey = ... ;\n bytes32 symmetric = Sapphire.deriveSymmetricKey(publicKey, privateKey);\n ```\n @param peerPublicKey The peer's public key.\n @param secretKey Your secret key.\n @return A derived symmetric key."},"id":190,"implemented":true,"kind":"function","modifiers":[],"name":"deriveSymmetricKey","nameLocation":"8017:18:0","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"peerPublicKey","nameLocation":"8065:13:0","nodeType":"VariableDeclaration","scope":190,"src":"8045:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"},"typeName":{"id":157,"nodeType":"UserDefinedTypeName","pathNode":{"id":156,"name":"Curve25519PublicKey","nodeType":"IdentifierPath","referencedDeclaration":43,"src":"8045:19:0"},"referencedDeclaration":43,"src":"8045:19:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"secretKey","nameLocation":"8108:9:0","nodeType":"VariableDeclaration","scope":190,"src":"8088:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"},"typeName":{"id":160,"nodeType":"UserDefinedTypeName","pathNode":{"id":159,"name":"Curve25519SecretKey","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"8088:19:0"},"referencedDeclaration":45,"src":"8088:19:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"}},"visibility":"internal"}],"src":"8035:88:0"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":190,"src":"8147:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8147:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8146:9:0"},"scope":443,"src":"8008:378:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"9556:222:0","statements":[{"assignments":[205,207],"declarations":[{"constant":false,"id":205,"mutability":"mutable","name":"success","nameLocation":"9572:7:0","nodeType":"VariableDeclaration","scope":226,"src":"9567:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":204,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"ciphertext","nameLocation":"9594:10:0","nodeType":"VariableDeclaration","scope":226,"src":"9581:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":206,"name":"bytes","nodeType":"ElementaryTypeName","src":"9581:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":218,"initialValue":{"arguments":[{"arguments":[{"id":212,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"9651:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"9656:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"plaintext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"9663:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":215,"name":"additionalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"9674:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":210,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9640:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"9640:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9640:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":208,"name":"ENCRYPT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"9608:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"9608:18:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9608:91:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9566:133:0"},{"expression":{"arguments":[{"id":220,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"9717:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"656e63727970743a206661696c6564","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9726:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5614603d541e467d6f35299b6c494d6d7c96318fd9033e95f551373c3052a781","typeString":"literal_string \"encrypt: failed\""},"value":"encrypt: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5614603d541e467d6f35299b6c494d6d7c96318fd9033e95f551373c3052a781","typeString":"literal_string \"encrypt: failed\""}],"id":219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9709:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9709:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"ExpressionStatement","src":"9709:35:0"},{"expression":{"id":224,"name":"ciphertext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"9761:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":203,"id":225,"nodeType":"Return","src":"9754:17:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"8392:986:0","text":" @notice Encrypt and authenticate the plaintext and additional data using\n DeoxysII.\n #### Precompile address\n `0x0100000000000000000000000000000000000003`\n #### Gas cost\n 50,000 minimum plus 100 per word of input\n #### Example\n ```solidity\n bytes32 key = ... ;\n bytes32 nonce = ... ;\n bytes memory text = \"plain text\";\n bytes memory ad = \"additional data\";\n bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n ```\n @param key The key to use for encryption.\n @param nonce The nonce. Note that only the first 15 bytes of this\n parameter are used.\n @param plaintext The plaintext to encrypt and authenticate.\n @param additionalData The additional data to authenticate.\n @return The ciphertext with appended auth tag."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"encrypt","nameLocation":"9392:7:0","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"key","nameLocation":"9417:3:0","nodeType":"VariableDeclaration","scope":227,"src":"9409:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9409:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"nonce","nameLocation":"9438:5:0","nodeType":"VariableDeclaration","scope":227,"src":"9430:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9430:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"plaintext","nameLocation":"9466:9:0","nodeType":"VariableDeclaration","scope":227,"src":"9453:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":196,"name":"bytes","nodeType":"ElementaryTypeName","src":"9453:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"additionalData","nameLocation":"9498:14:0","nodeType":"VariableDeclaration","scope":227,"src":"9485:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":198,"name":"bytes","nodeType":"ElementaryTypeName","src":"9485:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9399:119:0"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"9542:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":201,"name":"bytes","nodeType":"ElementaryTypeName","src":"9542:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9541:14:0"},"scope":443,"src":"9383:395:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":263,"nodeType":"Block","src":"11014:221:0","statements":[{"assignments":[242,244],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"success","nameLocation":"11030:7:0","nodeType":"VariableDeclaration","scope":263,"src":"11025:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":241,"name":"bool","nodeType":"ElementaryTypeName","src":"11025:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"plaintext","nameLocation":"11052:9:0","nodeType":"VariableDeclaration","scope":263,"src":"11039:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":243,"name":"bytes","nodeType":"ElementaryTypeName","src":"11039:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":255,"initialValue":{"arguments":[{"arguments":[{"id":249,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"11108:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":250,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"11113:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":251,"name":"ciphertext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"11120:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":252,"name":"additionalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"11132:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":247,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11097:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"11097:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11097:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":245,"name":"DECRYPT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"11065:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"11065:18:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:92:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11024:133:0"},{"expression":{"arguments":[{"id":257,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"11175:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"646563727970743a206661696c6564","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11184:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_903e0471dcbfc795d05065e8a540355c389c64753c3dd674c3f3e786b2d3807c","typeString":"literal_string \"decrypt: failed\""},"value":"decrypt: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_903e0471dcbfc795d05065e8a540355c389c64753c3dd674c3f3e786b2d3807c","typeString":"literal_string \"decrypt: failed\""}],"id":256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11167:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11167:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"ExpressionStatement","src":"11167:35:0"},{"expression":{"id":261,"name":"plaintext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"11219:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":240,"id":262,"nodeType":"Return","src":"11212:16:0"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"9784:1051:0","text":" @notice Decrypt and authenticate the ciphertext and additional data using\n DeoxysII. Reverts if the auth tag is incorrect.\n #### Precompile address\n `0x0100000000000000000000000000000000000004`\n #### Gas cost\n 50,000 minimum plus 100 per word of input\n #### Example\n ```solidity\n bytes32 key = ... ;\n bytes32 nonce = ... ;\n bytes memory text = \"plain text\";\n bytes memory ad = \"additional data\";\n bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n ```\n @param key The key to use for decryption.\n @param nonce The nonce. Note that only the first 15 bytes of this\n parameter are used.\n @param ciphertext The ciphertext with tag to decrypt and authenticate.\n @param additionalData The additional data to authenticate against the\n ciphertext.\n @return The original plaintext."},"id":264,"implemented":true,"kind":"function","modifiers":[],"name":"decrypt","nameLocation":"10849:7:0","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"key","nameLocation":"10874:3:0","nodeType":"VariableDeclaration","scope":264,"src":"10866:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10866:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"nonce","nameLocation":"10895:5:0","nodeType":"VariableDeclaration","scope":264,"src":"10887:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10887:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"ciphertext","nameLocation":"10923:10:0","nodeType":"VariableDeclaration","scope":264,"src":"10910:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":233,"name":"bytes","nodeType":"ElementaryTypeName","src":"10910:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"additionalData","nameLocation":"10956:14:0","nodeType":"VariableDeclaration","scope":264,"src":"10943:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":235,"name":"bytes","nodeType":"ElementaryTypeName","src":"10943:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10856:120:0"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"11000:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":238,"name":"bytes","nodeType":"ElementaryTypeName","src":"11000:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10999:14:0"},"scope":443,"src":"10840:395:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"13244:236:0","statements":[{"assignments":[278,280],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"success","nameLocation":"13260:7:0","nodeType":"VariableDeclaration","scope":305,"src":"13255:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":277,"name":"bool","nodeType":"ElementaryTypeName","src":"13255:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"keypair","nameLocation":"13282:7:0","nodeType":"VariableDeclaration","scope":305,"src":"13269:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":279,"name":"bytes","nodeType":"ElementaryTypeName","src":"13269:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":289,"initialValue":{"arguments":[{"arguments":[{"id":285,"name":"alg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"13353:3:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},{"id":286,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"13358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":283,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13342:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"13342:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13342:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":281,"name":"GENERATE_SIGNING_KEYPAIR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"13293:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"13293:48:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13293:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13254:110:0"},{"expression":{"arguments":[{"id":291,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"13382:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"67656e207369676e696e67206b6579706169723a206661696c6564","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13391:29:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b9267465e161c284a8a39384fdde2f97aa1902373695a1437fb9bfd91d7de20","typeString":"literal_string \"gen signing keypair: failed\""},"value":"gen signing keypair: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b9267465e161c284a8a39384fdde2f97aa1902373695a1437fb9bfd91d7de20","typeString":"literal_string \"gen signing keypair: failed\""}],"id":290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13374:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13374:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"ExpressionStatement","src":"13374:47:0"},{"expression":{"arguments":[{"id":297,"name":"keypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"13449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13459:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":298,"name":"bytes","nodeType":"ElementaryTypeName","src":"13459:5:0","typeDescriptions":{}}},{"id":301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13466:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":300,"name":"bytes","nodeType":"ElementaryTypeName","src":"13466:5:0","typeDescriptions":{}}}],"id":302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:14:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(bytes storage pointer),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(bytes storage pointer),type(bytes storage pointer))"}],"expression":{"id":295,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13438:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"13438:10:0","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13438:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,bytes memory)"}},"functionReturnParameters":276,"id":304,"nodeType":"Return","src":"13431:42:0"}]},"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"11241:1832:0","text":" @notice Generate a public/private key pair using the specified method and\n seed. The available methods are items in the\n [`Sapphire.SigningAlg`](#signingalg) enum. Note, however, that the\n generation method ignores subvariants, so all three Ed25519-based are\n equivalent, and all Secp256k1 & Secp256r1 based methods are equivalent.\n Sr25519 is not available and will return an error.\n #### Precompile address\n `0x0100000000000000000000000000000000000005`\n #### Gas Cost\n ##### Ed25519: 1,000 gas\n - `0` (`Ed25519Oasis`)\n - `1` (`Ed25519Pure`)\n - `2` (`Ed25519PrehashedSha512`)\n ##### Secp256k1: 1,500 gas.\n - `3` (`Secp256k1Oasis`)\n - `4` (`Secp256k1PrehashedKeccak256`)\n - `5` (`Secp256k1PrehashedSha256`)\n ##### Secp256r1: 4,000 gas\n - `7` (`Secp256r1PrehashedSha256`)\n #### Public Key Format\n ##### Ed25519\n 32 bytes\n ##### Secp256k1 & Secp256r1\n 33 bytes, compressed format (`0x02` or `0x03` prefix, then 32 byte X\n coordinate).\n #### Example\n ```solidity\n bytes memory seed = hex\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\";\n bytes memory publicKey;\n bytes memory privateKey;\n (publicKey, privateKey) = Sapphire.generateSigningKeyPair(Sapphire.SigningAlg.Ed25519Pure, seed);\n ```\n @param alg The signing alg for which to generate a keypair.\n @param seed The seed to use for generating the key pair. You can use the\n `randomBytes` method if you don't already have a seed.\n @return publicKey The public half of the keypair.\n @return secretKey The secret half of the keypair."},"id":306,"implemented":true,"kind":"function","modifiers":[],"name":"generateSigningKeyPair","nameLocation":"13087:22:0","nodeType":"FunctionDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"alg","nameLocation":"13121:3:0","nodeType":"VariableDeclaration","scope":306,"src":"13110:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},"typeName":{"id":267,"nodeType":"UserDefinedTypeName","pathNode":{"id":266,"name":"SigningAlg","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"13110:10:0"},"referencedDeclaration":55,"src":"13110:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"seed","nameLocation":"13139:4:0","nodeType":"VariableDeclaration","scope":306,"src":"13126:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":269,"name":"bytes","nodeType":"ElementaryTypeName","src":"13126:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13109:35:0"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"publicKey","nameLocation":"13205:9:0","nodeType":"VariableDeclaration","scope":306,"src":"13192:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":272,"name":"bytes","nodeType":"ElementaryTypeName","src":"13192:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"secretKey","nameLocation":"13229:9:0","nodeType":"VariableDeclaration","scope":306,"src":"13216:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":274,"name":"bytes","nodeType":"ElementaryTypeName","src":"13216:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13191:48:0"},"scope":443,"src":"13078:402:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":343,"nodeType":"Block","src":"16286:210:0","statements":[{"assignments":[322,324],"declarations":[{"constant":false,"id":322,"mutability":"mutable","name":"success","nameLocation":"16302:7:0","nodeType":"VariableDeclaration","scope":343,"src":"16297:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":321,"name":"bool","nodeType":"ElementaryTypeName","src":"16297:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"sig","nameLocation":"16324:3:0","nodeType":"VariableDeclaration","scope":343,"src":"16311:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":323,"name":"bytes","nodeType":"ElementaryTypeName","src":"16311:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":335,"initialValue":{"arguments":[{"arguments":[{"id":329,"name":"alg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"16378:3:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},{"id":330,"name":"secretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"16383:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":331,"name":"contextOrHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"16394:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":332,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"16409:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":327,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16367:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"16367:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16367:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":325,"name":"SIGN_DIGEST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"16331:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"16331:22:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16331:96:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16296:131:0"},{"expression":{"arguments":[{"id":337,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"16445:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7369676e3a206661696c6564","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16454:14:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_30424c91df67870892b008f1299c54dc8a7ff30cbedf2b16aaa52c514b69b2af","typeString":"literal_string \"sign: failed\""},"value":"sign: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30424c91df67870892b008f1299c54dc8a7ff30cbedf2b16aaa52c514b69b2af","typeString":"literal_string \"sign: failed\""}],"id":336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16437:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16437:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":340,"nodeType":"ExpressionStatement","src":"16437:32:0"},{"expression":{"id":341,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"16486:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":320,"id":342,"nodeType":"Return","src":"16479:10:0"}]},"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"13486:2606:0","text":" @notice Sign a message within the provided context using the specified\n algorithm, and return the signature. The `context_or_digest` and\n `messages` parameters change in meaning slightly depending on the method\n requested. For methods that take a context in addition to the message you\n must pass the context in the `context_or_digest` parameter and use\n `message` as expected. For methods that take a pre-existing hash of the\n message, pass that in `context_or_digest` and leave `message` empty.\n Specifically the `Ed25519Oasis` and `Secp256k1Oasis` variants take both a\n context and a message (each are variable length `bytes`), the context\n serves as a domain separator.\n #### Precompile address\n `0x0100000000000000000000000000000000000006`\n #### Gas cost\n See below for the method-dependent base cost, plus 8 gas per 32 bytes of\n context and message except digest.\n #### Signing algorithms\n - `0` (`Ed25519Oasis`): 1,500 gas, variable length context and message.\n - `1` (`Ed25519Pure`): 1,500 gas, empty context, variable length message.\n - `2` (`Ed25519PrehashedSha512`): 1,500 gas, pre-existing SHA-512 hash\n   (64 bytes) as context, empty message.\n - `3` (`Secp256k1Oasis`): 3,000 gas, variable length context and message\n - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas, pre-existing hash\n   (32 bytes) as context, empty message.\n - `5` (`Secp256k1PrehashedSha256`): 3,000 gas, pre-existing hash (32\n   bytes) as context, empty message.\n - `7` (`Secp256r1PrehashedSha256`): 9,000 gas, pre-existing hash (32\n   bytes) as context, empty message.\n #### Example\n ```solidity\n Sapphire.SigningAlg alg = Sapphire.SigningAlg.Ed25519Pure;\n bytes memory pk;\n bytes memory sk;\n (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n bytes memory signature = Sapphire.sign(alg, sk, \"\", \"signed message\");\n ```\n @param alg The signing algorithm to use.\n @param secretKey The secret key to use for signing. The key must be valid\n for use with the requested algorithm.\n @param contextOrHash Domain-Separator Context, or precomputed hash bytes.\n @param message Message to sign, should be zero-length if precomputed hash\n given.\n @return signature The resulting signature.\n @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_sign"},"id":344,"implemented":true,"kind":"function","modifiers":[],"name":"sign","nameLocation":"16106:4:0","nodeType":"FunctionDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"alg","nameLocation":"16131:3:0","nodeType":"VariableDeclaration","scope":344,"src":"16120:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},"typeName":{"id":309,"nodeType":"UserDefinedTypeName","pathNode":{"id":308,"name":"SigningAlg","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"16120:10:0"},"referencedDeclaration":55,"src":"16120:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"secretKey","nameLocation":"16157:9:0","nodeType":"VariableDeclaration","scope":344,"src":"16144:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":311,"name":"bytes","nodeType":"ElementaryTypeName","src":"16144:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"contextOrHash","nameLocation":"16189:13:0","nodeType":"VariableDeclaration","scope":344,"src":"16176:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":313,"name":"bytes","nodeType":"ElementaryTypeName","src":"16176:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"message","nameLocation":"16225:7:0","nodeType":"VariableDeclaration","scope":344,"src":"16212:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":315,"name":"bytes","nodeType":"ElementaryTypeName","src":"16212:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16110:128:0"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"signature","nameLocation":"16275:9:0","nodeType":"VariableDeclaration","scope":344,"src":"16262:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":318,"name":"bytes","nodeType":"ElementaryTypeName","src":"16262:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16261:24:0"},"scope":443,"src":"16097:399:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":390,"nodeType":"Block","src":"18816:241:0","statements":[{"assignments":[362,364],"declarations":[{"constant":false,"id":362,"mutability":"mutable","name":"success","nameLocation":"18832:7:0","nodeType":"VariableDeclaration","scope":390,"src":"18827:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":361,"name":"bool","nodeType":"ElementaryTypeName","src":"18827:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"v","nameLocation":"18854:1:0","nodeType":"VariableDeclaration","scope":390,"src":"18841:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":363,"name":"bytes","nodeType":"ElementaryTypeName","src":"18841:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":376,"initialValue":{"arguments":[{"arguments":[{"id":369,"name":"alg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"18908:3:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},{"id":370,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"18913:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":371,"name":"contextOrHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"18924:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":372,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"18939:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":373,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"18948:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":367,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18897:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"18897:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18897:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":365,"name":"VERIFY_DIGEST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"18859:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"18859:24:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18859:109:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18826:142:0"},{"expression":{"arguments":[{"id":378,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"18986:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7665726966793a206661696c6564","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18995:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""},"value":"verify: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""}],"id":377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18978:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18978:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"18978:34:0"},{"expression":{"arguments":[{"id":384,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"19040:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19044:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":385,"name":"bool","nodeType":"ElementaryTypeName","src":"19044:4:0","typeDescriptions":{}}}],"id":387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19043:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":382,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19029:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"19029:10:0","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19029:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":360,"id":389,"nodeType":"Return","src":"19022:28:0"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"16502:2095:0","text":" @notice Verifies that the provided digest was signed with using the\n secret key corresponding to the provided private key and the specified\n signing algorithm.\n The `method`, `context_or_digest` and `message` parameters have the same\n meaning as described above in the [sign()](#sign) function.\n #### Precompile address\n `0x0100000000000000000000000000000000000007`\n #### Gas cost\n The algorithm-specific base cost below, with an additional **8 gas per\n 32 bytes** of `context` and `message` for the `Ed25519Oasis`,\n `Ed25519Pure` and `Secp256k1Oasis` algorithms.\n - `0` (`Ed25519Oasis`): 2,000 gas\n - `1` (`Ed25519Pure`): 2,000 gas\n - `2` (`Ed25519PrehashedSha512`): 2,000 gas\n - `3` (`Secp256k1Oasis`): 3,000 gas\n - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas\n - `5` (`Secp256k1PrehashedSha256`): 3,000 gas\n - `7` (`Secp256r1PrehashedSha256`): 7,900 gas\n #### Example\n ```solidity\n Sapphire.SigningAlg alg = Sapphire.SigningAlg.Secp256k1PrehashedKeccak256;\n bytes memory pk;\n bytes memory sk;\n bytes memory digest = abi.encodePacked(keccak256(\"signed message\"));\n (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n bytes memory signature = Sapphire.sign(alg, sk, digest, \"\");\n require( Sapphire.verify(alg, pk, digest, \"\", signature) );\n ```\n @param alg The signing algorithm by which the signature was generated.\n @param publicKey The public key against which to check the signature.\n @param contextOrHash Domain-Separator Context, or precomputed hash bytes\n @param message The hash of the message that was signed, should be\n zero-length if precomputed hash was given.\n @param signature The signature to check.\n @return verified Whether the signature is valid for the given parameters.\n @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_verify"},"id":391,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"18611:6:0","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"alg","nameLocation":"18638:3:0","nodeType":"VariableDeclaration","scope":391,"src":"18627:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},"typeName":{"id":347,"nodeType":"UserDefinedTypeName","pathNode":{"id":346,"name":"SigningAlg","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"18627:10:0"},"referencedDeclaration":55,"src":"18627:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"publicKey","nameLocation":"18664:9:0","nodeType":"VariableDeclaration","scope":391,"src":"18651:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":349,"name":"bytes","nodeType":"ElementaryTypeName","src":"18651:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"contextOrHash","nameLocation":"18696:13:0","nodeType":"VariableDeclaration","scope":391,"src":"18683:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":351,"name":"bytes","nodeType":"ElementaryTypeName","src":"18683:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"message","nameLocation":"18732:7:0","nodeType":"VariableDeclaration","scope":391,"src":"18719:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":353,"name":"bytes","nodeType":"ElementaryTypeName","src":"18719:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"signature","nameLocation":"18762:9:0","nodeType":"VariableDeclaration","scope":391,"src":"18749:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"18749:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18617:160:0"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"verified","nameLocation":"18806:8:0","nodeType":"VariableDeclaration","scope":391,"src":"18801:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":358,"name":"bool","nodeType":"ElementaryTypeName","src":"18801:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18800:15:0"},"scope":443,"src":"18602:455:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"19431:120:0","statements":[{"assignments":[398,null],"declarations":[{"constant":false,"id":398,"mutability":"mutable","name":"success","nameLocation":"19447:7:0","nodeType":"VariableDeclaration","scope":412,"src":"19442:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"19442:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":406,"initialValue":{"arguments":[{"arguments":[{"id":403,"name":"toAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"19490:8:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":401,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19479:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"19479:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19479:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":399,"name":"PAD_GAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"19460:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"19460:18:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19460:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19441:59:0"},{"expression":{"arguments":[{"id":408,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"19518:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7665726966793a206661696c6564","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19527:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""},"value":"verify: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""}],"id":407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19510:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19510:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"ExpressionStatement","src":"19510:34:0"}]},"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"19063:315:0","text":" @notice Set the current transactions gas usage to a specific amount\n @dev Will cause a reversion if the current usage is more than the amount.\n @param toAmount Gas usage will be set to this amount\n @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_pad_gas"},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"padGas","nameLocation":"19392:6:0","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"toAmount","nameLocation":"19407:8:0","nodeType":"VariableDeclaration","scope":413,"src":"19399:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":393,"name":"uint128","nodeType":"ElementaryTypeName","src":"19399:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"19398:18:0"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"19431:0:0"},"scope":443,"src":"19383:168:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"19780:158:0","statements":[{"assignments":[420,422],"declarations":[{"constant":false,"id":420,"mutability":"mutable","name":"success","nameLocation":"19796:7:0","nodeType":"VariableDeclaration","scope":441,"src":"19791:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"19791:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"v","nameLocation":"19818:1:0","nodeType":"VariableDeclaration","scope":441,"src":"19805:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":421,"name":"bytes","nodeType":"ElementaryTypeName","src":"19805:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":427,"initialValue":{"arguments":[{"hexValue":"","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19843:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":423,"name":"GAS_USED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"19823:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"19823:19:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19823:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19790:56:0"},{"expression":{"arguments":[{"id":429,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"19864:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"676173757365643a206661696c6564","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19873:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e653402a1869061703cc1f5117b0dbd597348261905e9f4272ef2962baf4e02","typeString":"literal_string \"gasused: failed\""},"value":"gasused: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e653402a1869061703cc1f5117b0dbd597348261905e9f4272ef2962baf4e02","typeString":"literal_string \"gasused: failed\""}],"id":428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19856:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19856:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":432,"nodeType":"ExpressionStatement","src":"19856:35:0"},{"expression":{"arguments":[{"id":435,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"19919:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19923:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":436,"name":"uint64","nodeType":"ElementaryTypeName","src":"19923:6:0","typeDescriptions":{}}}],"id":438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19922:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"expression":{"id":433,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19908:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"19908:10:0","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19908:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":418,"id":440,"nodeType":"Return","src":"19901:30:0"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"19557:168:0","text":" @notice Returns the amount of gas currently used by the transaction\n @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_gas_used"},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"gasUsed","nameLocation":"19739:7:0","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"19746:2:0"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"19772:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":416,"name":"uint64","nodeType":"ElementaryTypeName","src":"19772:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"19771:8:0"},"scope":443,"src":"19730:208:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":527,"src":"1117:18823:0","usedErrors":[]},{"body":{"id":471,"nodeType":"Block","src":"21042:150:0","statements":[{"assignments":[452,454],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"success","nameLocation":"21054:7:0","nodeType":"VariableDeclaration","scope":471,"src":"21049:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":451,"name":"bool","nodeType":"ElementaryTypeName","src":"21049:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"output","nameLocation":"21076:6:0","nodeType":"VariableDeclaration","scope":471,"src":"21063:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"21063:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":460,"initialValue":{"arguments":[{"id":458,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"21117:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":455,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"21086:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$443_$","typeString":"type(library Sapphire)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SHA512_256","nodeType":"MemberAccess","referencedDeclaration":35,"src":"21086:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"21086:30:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21086:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"21048:75:0"},{"expression":{"arguments":[{"id":462,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"21138:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7368613531325f323536","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21147:12:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f75c2d6150bf32cccbc5bf7d89da5f677facb56533342da88f5e98d14214b528","typeString":"literal_string \"sha512_256\""},"value":"sha512_256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f75c2d6150bf32cccbc5bf7d89da5f677facb56533342da88f5e98d14214b528","typeString":"literal_string \"sha512_256\""}],"id":461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21130:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21130:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"21130:30:0"},{"expression":{"arguments":[{"id":468,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"21182:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21174:7:0","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21174:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":450,"id":470,"nodeType":"Return","src":"21167:22:0"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"19942:1029:0","text":" @notice Hash the input data with SHA-512/256, according to\n [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n #### Precompile address\n `0x0100000000000000000000000000000000000102`\n #### Gas cost\n 115 gas, then 13 gas per word\n #### Example\n ```solidity\n bytes32 result = sha512_256(abi.encodePacked(\"input data\"));\n ```\n #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n relevant if you are computing the hash of a secret message. The\n [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n vulnerable to length-extension attacks.\n @param input Bytes to hash.\n @return result 32 byte digest.\n @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512_256"},"id":472,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"sha512_256","nameLocation":"20981:10:0","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"input","nameLocation":"21005:5:0","nodeType":"VariableDeclaration","scope":472,"src":"20992:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":445,"name":"bytes","nodeType":"ElementaryTypeName","src":"20992:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20991:20:0"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"result","nameLocation":"21034:6:0","nodeType":"VariableDeclaration","scope":472,"src":"21026:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21026:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21025:16:0"},"scope":527,"src":"20972:220:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":498,"nodeType":"Block","src":"22287:114:0","statements":[{"assignments":[481],"declarations":[{"constant":false,"id":481,"mutability":"mutable","name":"success","nameLocation":"22298:7:0","nodeType":"VariableDeclaration","scope":498,"src":"22293:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":480,"name":"bool","nodeType":"ElementaryTypeName","src":"22293:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":482,"nodeType":"VariableDeclarationStatement","src":"22293:12:0"},{"expression":{"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":483,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"22313:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":484,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"22322:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":485,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"22312:17:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":489,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"22359:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":486,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"22332:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$443_$","typeString":"type(library Sapphire)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SHA512","nodeType":"MemberAccess","referencedDeclaration":38,"src":"22332:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"22332:26:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22332:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"22312:53:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"ExpressionStatement","src":"22312:53:0"},{"expression":{"arguments":[{"id":494,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"22380:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736861353132","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22389:8:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c0b70e157f7134bd6b024ec9293ed6f48b7e87b8f08a110da3cb9d2624b426a","typeString":"literal_string \"sha512\""},"value":"sha512"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c0b70e157f7134bd6b024ec9293ed6f48b7e87b8f08a110da3cb9d2624b426a","typeString":"literal_string \"sha512\""}],"id":493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22372:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22372:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"22372:26:0"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"21194:1021:0","text":" @notice Hash the input data with SHA-512, according to\n [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf)\n #### Precompile address\n `0x0100000000000000000000000000000000000101`\n #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n relevant if you are computing the hash of a secret message. The\n [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n vulnerable to length-extension attacks.\n #### Gas Cost\n 115 gas, then 13 gas per word\n #### Example\n ```solidity\n bytes memory result = sha512(abi.encodePacked(\"input data\"));\n ```\n @param input Bytes to hash.\n @return output 64 byte digest.\n @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512"},"id":499,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"sha512","nameLocation":"22225:6:0","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"input","nameLocation":"22245:5:0","nodeType":"VariableDeclaration","scope":499,"src":"22232:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":474,"name":"bytes","nodeType":"ElementaryTypeName","src":"22232:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22231:20:0"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"output","nameLocation":"22279:6:0","nodeType":"VariableDeclaration","scope":499,"src":"22266:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":477,"name":"bytes","nodeType":"ElementaryTypeName","src":"22266:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22265:21:0"},"scope":527,"src":"22216:185:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":525,"nodeType":"Block","src":"22748:114:0","statements":[{"assignments":[508],"declarations":[{"constant":false,"id":508,"mutability":"mutable","name":"success","nameLocation":"22759:7:0","nodeType":"VariableDeclaration","scope":525,"src":"22754:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":507,"name":"bool","nodeType":"ElementaryTypeName","src":"22754:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":509,"nodeType":"VariableDeclarationStatement","src":"22754:12:0"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":510,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"22774:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":511,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"22783:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":512,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"22773:17:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":516,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"22820:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":513,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"22793:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$443_$","typeString":"type(library Sapphire)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SHA384","nodeType":"MemberAccess","referencedDeclaration":41,"src":"22793:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"22793:26:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22793:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"22773:53:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"ExpressionStatement","src":"22773:53:0"},{"expression":{"arguments":[{"id":521,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"22841:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736861333834","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22850:8:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec6ff49708e722818e70930a24e1ab730a40b63a2d8cfc1f9445eec73ca5b6a9","typeString":"literal_string \"sha384\""},"value":"sha384"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec6ff49708e722818e70930a24e1ab730a40b63a2d8cfc1f9445eec73ca5b6a9","typeString":"literal_string \"sha384\""}],"id":520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22833:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22833:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"22833:26:0"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"22403:273:0","text":" @notice Hash the input data with SHA-384.\n @param input Bytes to hash.\n @return output 48 byte digest.\n @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha384"},"id":526,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"sha384","nameLocation":"22686:6:0","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"input","nameLocation":"22706:5:0","nodeType":"VariableDeclaration","scope":526,"src":"22693:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":501,"name":"bytes","nodeType":"ElementaryTypeName","src":"22693:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22692:20:0"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"output","nameLocation":"22740:6:0","nodeType":"VariableDeclaration","scope":526,"src":"22727:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":504,"name":"bytes","nodeType":"ElementaryTypeName","src":"22727:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22726:21:0"},"scope":527,"src":"22677:185:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"src":"39:22824:0"},"id":0},"contracts/Cards.sol":{"ast":{"absolutePath":"contracts/Cards.sol","exportedSymbols":{"Card":[553],"CardUtils":[739],"Rank":[546],"Suit":[532]},"id":740,"nodeType":"SourceUnit","nodes":[{"canonicalName":"Suit","id":532,"members":[{"id":528,"name":"Hearts","nameLocation":"17:6:1","nodeType":"EnumValue","src":"17:6:1"},{"id":529,"name":"Diamonds","nameLocation":"29:8:1","nodeType":"EnumValue","src":"29:8:1"},{"id":530,"name":"Clubs","nameLocation":"43:5:1","nodeType":"EnumValue","src":"43:5:1"},{"id":531,"name":"Spades","nameLocation":"54:6:1","nodeType":"EnumValue","src":"54:6:1"}],"name":"Suit","nameLocation":"6:4:1","nodeType":"EnumDefinition","src":"1:61:1"},{"canonicalName":"Rank","id":546,"members":[{"id":533,"name":"Two","nameLocation":"80:3:1","nodeType":"EnumValue","src":"80:3:1"},{"id":534,"name":"Three","nameLocation":"89:5:1","nodeType":"EnumValue","src":"89:5:1"},{"id":535,"name":"Four","nameLocation":"100:4:1","nodeType":"EnumValue","src":"100:4:1"},{"id":536,"name":"Five","nameLocation":"110:4:1","nodeType":"EnumValue","src":"110:4:1"},{"id":537,"name":"Six","nameLocation":"120:3:1","nodeType":"EnumValue","src":"120:3:1"},{"id":538,"name":"Seven","nameLocation":"129:5:1","nodeType":"EnumValue","src":"129:5:1"},{"id":539,"name":"Eight","nameLocation":"140:5:1","nodeType":"EnumValue","src":"140:5:1"},{"id":540,"name":"Nine","nameLocation":"151:4:1","nodeType":"EnumValue","src":"151:4:1"},{"id":541,"name":"Ten","nameLocation":"161:3:1","nodeType":"EnumValue","src":"161:3:1"},{"id":542,"name":"Jack","nameLocation":"170:4:1","nodeType":"EnumValue","src":"170:4:1"},{"id":543,"name":"Queen","nameLocation":"180:5:1","nodeType":"EnumValue","src":"180:5:1"},{"id":544,"name":"King","nameLocation":"191:4:1","nodeType":"EnumValue","src":"191:4:1"},{"id":545,"name":"Ace","nameLocation":"201:3:1","nodeType":"EnumValue","src":"201:3:1"}],"name":"Rank","nameLocation":"69:4:1","nodeType":"EnumDefinition","src":"64:142:1"},{"canonicalName":"Card","id":553,"members":[{"constant":false,"id":549,"mutability":"mutable","name":"suit","nameLocation":"231:4:1","nodeType":"VariableDeclaration","scope":553,"src":"226:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"},"typeName":{"id":548,"nodeType":"UserDefinedTypeName","pathNode":{"id":547,"name":"Suit","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"226:4:1"},"referencedDeclaration":532,"src":"226:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"rank","nameLocation":"246:4:1","nodeType":"VariableDeclaration","scope":553,"src":"241:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"typeName":{"id":551,"nodeType":"UserDefinedTypeName","pathNode":{"id":550,"name":"Rank","nodeType":"IdentifierPath","referencedDeclaration":546,"src":"241:4:1"},"referencedDeclaration":546,"src":"241:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"visibility":"internal"}],"name":"Card","nameLocation":"215:4:1","nodeType":"StructDefinition","scope":740,"src":"208:45:1","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"CardUtils","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":739,"linearizedBaseContracts":[739],"name":"CardUtils","nameLocation":"263:9:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":570,"nodeType":"Block","src":"345:108:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":563,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"395:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":562,"name":"getSuit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"387:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_enum$_Suit_$532_$","typeString":"function (uint8) pure returns (enum Suit)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"387:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},{"arguments":[{"id":566,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"429:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":565,"name":"getRank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"421:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_enum$_Rank_$546_$","typeString":"function (uint8) pure returns (enum Rank)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"421:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"},{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}],"id":561,"name":"Card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"362:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Card_$553_storage_ptr_$","typeString":"type(struct Card storage pointer)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["suit","rank"],"nodeType":"FunctionCall","src":"362:84:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Card_$553_memory_ptr","typeString":"struct Card memory"}},"functionReturnParameters":560,"id":569,"nodeType":"Return","src":"355:91:1"}]},"id":571,"implemented":true,"kind":"function","modifiers":[],"name":"create","nameLocation":"289:6:1","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"index","nameLocation":"302:5:1","nodeType":"VariableDeclaration","scope":571,"src":"296:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":554,"name":"uint8","nodeType":"ElementaryTypeName","src":"296:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"295:13:1"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":571,"src":"332:11:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$553_memory_ptr","typeString":"struct Card"},"typeName":{"id":558,"nodeType":"UserDefinedTypeName","pathNode":{"id":557,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":553,"src":"332:4:1"},"referencedDeclaration":553,"src":"332:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$553_storage_ptr","typeString":"struct Card"}},"visibility":"internal"}],"src":"331:13:1"},"scope":739,"src":"280:173:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"518:40:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":580,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"540:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3133","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"548:2:1","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"540:10:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":579,"name":"Suit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"535:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Suit_$532_$","typeString":"type(enum Suit)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"535:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},"functionReturnParameters":578,"id":584,"nodeType":"Return","src":"528:23:1"}]},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"getSuit","nameLocation":"468:7:1","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"index","nameLocation":"482:5:1","nodeType":"VariableDeclaration","scope":586,"src":"476:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":572,"name":"uint8","nodeType":"ElementaryTypeName","src":"476:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"475:13:1"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":586,"src":"512:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"},"typeName":{"id":576,"nodeType":"UserDefinedTypeName","pathNode":{"id":575,"name":"Suit","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"512:4:1"},"referencedDeclaration":532,"src":"512:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},"visibility":"internal"}],"src":"511:6:1"},"scope":739,"src":"459:99:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":600,"nodeType":"Block","src":"623:40:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"645:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3133","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"653:2:1","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"645:10:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":594,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"640:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"640:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"functionReturnParameters":593,"id":599,"nodeType":"Return","src":"633:23:1"}]},"id":601,"implemented":true,"kind":"function","modifiers":[],"name":"getRank","nameLocation":"573:7:1","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"index","nameLocation":"587:5:1","nodeType":"VariableDeclaration","scope":601,"src":"581:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":587,"name":"uint8","nodeType":"ElementaryTypeName","src":"581:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"580:13:1"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"617:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"typeName":{"id":591,"nodeType":"UserDefinedTypeName","pathNode":{"id":590,"name":"Rank","nodeType":"IdentifierPath","referencedDeclaration":546,"src":"617:4:1"},"referencedDeclaration":546,"src":"617:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"visibility":"internal"}],"src":"616:6:1"},"scope":739,"src":"564:99:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":629,"nodeType":"Block","src":"736:185:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"suit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"766:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":610,"name":"Suit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"774:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Suit_$532_$","typeString":"type(enum Suit)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Hearts","nodeType":"MemberAccess","referencedDeclaration":528,"src":"774:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},"src":"766:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"suit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"812:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":615,"name":"Suit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"820:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Suit_$532_$","typeString":"type(enum Suit)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Diamonds","nodeType":"MemberAccess","referencedDeclaration":529,"src":"820:13:1","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},"src":"812:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"suit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"862:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":620,"name":"Suit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"870:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Suit_$532_$","typeString":"type(enum Suit)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Clubs","nodeType":"MemberAccess","referencedDeclaration":530,"src":"870:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},"src":"862:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"537061646573","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"906:8:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b38b47fcb9f90cf510c093ed90a0ab505e9e5a2a244f25d8a49d8875b00ea9e4","typeString":"literal_string \"Spades\""},"value":"Spades"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"862:52:1","trueExpression":{"hexValue":"436c756273","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"883:7:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8eefcccfb69902317c9ec921238fc7a5f1baeeb73f0911ff7052e65d10d2dda8","typeString":"literal_string \"Clubs\""},"value":"Clubs"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"812:102:1","trueExpression":{"hexValue":"4469616d6f6e6473","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"836:10:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1f38ad5102cd82ef938a6a6a50856424e894d1eb08124957c281aac04fef0c6","typeString":"literal_string \"Diamonds\""},"value":"Diamonds"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"766:148:1","trueExpression":{"hexValue":"486561727473","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"788:8:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a85e547b97aab859f595289ed696af7bac526199b8eeed47cfa98ba9294f849","typeString":"literal_string \"Hearts\""},"value":"Hearts"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":608,"id":628,"nodeType":"Return","src":"746:168:1"}]},"id":630,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"678:8:1","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"suit","nameLocation":"692:4:1","nodeType":"VariableDeclaration","scope":630,"src":"687:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"},"typeName":{"id":603,"nodeType":"UserDefinedTypeName","pathNode":{"id":602,"name":"Suit","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"687:4:1"},"referencedDeclaration":532,"src":"687:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}},"visibility":"internal"}],"src":"686:11:1"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":630,"src":"721:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":606,"name":"string","nodeType":"ElementaryTypeName","src":"721:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"720:15:1"},"scope":739,"src":"669:252:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":712,"nodeType":"Block","src":"994:548:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":638,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1024:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":639,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1032:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Two","nodeType":"MemberAccess","referencedDeclaration":533,"src":"1032:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1024:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":643,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1064:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":644,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1072:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Three","nodeType":"MemberAccess","referencedDeclaration":534,"src":"1072:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1064:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1108:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":649,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1116:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Four","nodeType":"MemberAccess","referencedDeclaration":535,"src":"1116:9:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1108:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":653,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1150:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":654,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1158:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Five","nodeType":"MemberAccess","referencedDeclaration":536,"src":"1158:9:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1150:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1192:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":659,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1200:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Six","nodeType":"MemberAccess","referencedDeclaration":537,"src":"1200:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1192:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":663,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1232:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":664,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1240:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Seven","nodeType":"MemberAccess","referencedDeclaration":538,"src":"1240:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1232:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":668,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1276:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":669,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1284:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Eight","nodeType":"MemberAccess","referencedDeclaration":539,"src":"1284:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1276:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":673,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1320:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":674,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1328:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Nine","nodeType":"MemberAccess","referencedDeclaration":540,"src":"1328:9:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1320:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":678,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1362:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":679,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1370:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Ten","nodeType":"MemberAccess","referencedDeclaration":541,"src":"1370:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1362:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":683,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1402:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":684,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1410:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Jack","nodeType":"MemberAccess","referencedDeclaration":542,"src":"1410:9:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1402:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":688,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1444:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":689,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1452:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Queen","nodeType":"MemberAccess","referencedDeclaration":543,"src":"1452:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1444:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1488:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":694,"name":"Rank","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1496:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rank_$546_$","typeString":"type(enum Rank)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"King","nodeType":"MemberAccess","referencedDeclaration":544,"src":"1496:9:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"src":"1488:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"416365","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1530:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_59b14411d70ebf60a4f788fbe5752c05ee06fe897712451b4b8b1755c92ab7b5","typeString":"literal_string \"Ace\""},"value":"Ace"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1488:47:1","trueExpression":{"hexValue":"4b696e67","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1508:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5bae99b750447a0001dc582a3661e26d1ff0338f074d54b49b28b9157fd7db63","typeString":"literal_string \"King\""},"value":"King"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1444:91:1","trueExpression":{"hexValue":"517565656e","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1465:7:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a074de4f05fb0f6af7b4aa33f28413b38f65ab78085e2590083ee85d3c0965b","typeString":"literal_string \"Queen\""},"value":"Queen"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1402:133:1","trueExpression":{"hexValue":"4a61636b","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1422:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_56c5869b15e6a5975c7ac0c06b767e308c4c922e32456a15b4b09e44cb2f0a55","typeString":"literal_string \"Jack\""},"value":"Jack"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1362:173:1","trueExpression":{"hexValue":"54656e","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1381:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_489a3bd3a48357ea5f2cbb3b0f93dd7ed77c0a35dc72566801b03aef99ca5a13","typeString":"literal_string \"Ten\""},"value":"Ten"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1320:215:1","trueExpression":{"hexValue":"4e696e65","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1340:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ff67e49fe0210704f88b1df37c706787fcde9b70a2ceb116327b456a1d22c79","typeString":"literal_string \"Nine\""},"value":"Nine"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1276:259:1","trueExpression":{"hexValue":"4569676874","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1297:7:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_99a7785e28d6f2ddc1b84f07be965d8499af630c34f8678345db97e55221e2d5","typeString":"literal_string \"Eight\""},"value":"Eight"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1232:303:1","trueExpression":{"hexValue":"536576656e","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1253:7:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_360984140508c8d30cf3e5a354625a50a6f9414604bc2c26db9e5328134581a0","typeString":"literal_string \"Seven\""},"value":"Seven"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1192:343:1","trueExpression":{"hexValue":"536978","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1211:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a46a4c4a1af5af13777907cd2ad6454d2ac532e81ef7cfc645d1735d075cffda","typeString":"literal_string \"Six\""},"value":"Six"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1150:385:1","trueExpression":{"hexValue":"46697665","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1170:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec56b2c65c9902ef89e5a890129ed9fb7cd06ad3e6fb9269c65a0b9574b18de0","typeString":"literal_string \"Five\""},"value":"Five"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1108:427:1","trueExpression":{"hexValue":"466f7572","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1128:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fae3e1262df6a76b5264b9d4166a5e6091b6b71d48e83583b2221b15d01023a","typeString":"literal_string \"Four\""},"value":"Four"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1064:471:1","trueExpression":{"hexValue":"5468726565","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1085:7:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f5166e905e8b1b2000651b3d5254f5a93e1ae1a689ce8930cd41a6d56ac00f","typeString":"literal_string \"Three\""},"value":"Three"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1024:511:1","trueExpression":{"hexValue":"54776f","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1043:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8949da3c034f0b83aa0321fb24c1592012b9d020d63c9360c64a4b7d7038bcf3","typeString":"literal_string \"Two\""},"value":"Two"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":637,"id":711,"nodeType":"Return","src":"1004:531:1"}]},"id":713,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"936:8:1","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"rank","nameLocation":"950:4:1","nodeType":"VariableDeclaration","scope":713,"src":"945:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"},"typeName":{"id":632,"nodeType":"UserDefinedTypeName","pathNode":{"id":631,"name":"Rank","nodeType":"IdentifierPath","referencedDeclaration":546,"src":"945:4:1"},"referencedDeclaration":546,"src":"945:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}},"visibility":"internal"}],"src":"944:11:1"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"979:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":635,"name":"string","nodeType":"ElementaryTypeName","src":"979:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"978:15:1"},"scope":739,"src":"927:615:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":737,"nodeType":"Block","src":"1622:98:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":726,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"1672:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$553_memory_ptr","typeString":"struct Card memory"}},"id":727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rank","nodeType":"MemberAccess","referencedDeclaration":552,"src":"1672:9:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rank_$546","typeString":"enum Rank"}],"id":725,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[630,713,738],"referencedDeclaration":713,"src":"1663:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rank_$546_$returns$_t_string_memory_ptr_$","typeString":"function (enum Rank) pure returns (string memory)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1663:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206f6620","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1684:6:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fa7d063cfba575d850c18efee4a1dd67d386f7dc903b2d9a0ca929c851e62cb","typeString":"literal_string \" of \""},"value":" of "},{"arguments":[{"expression":{"id":731,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"1701:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$553_memory_ptr","typeString":"struct Card memory"}},"id":732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"suit","nodeType":"MemberAccess","referencedDeclaration":549,"src":"1701:9:1","typeDescriptions":{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Suit_$532","typeString":"enum Suit"}],"id":730,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[630,713,738],"referencedDeclaration":630,"src":"1692:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Suit_$532_$returns$_t_string_memory_ptr_$","typeString":"function (enum Suit) pure returns (string memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1692:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_7fa7d063cfba575d850c18efee4a1dd67d386f7dc903b2d9a0ca929c851e62cb","typeString":"literal_string \" of \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":723,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1646:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1646:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1646:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1639:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":721,"name":"string","nodeType":"ElementaryTypeName","src":"1639:6:1","typeDescriptions":{}}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1639:74:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":720,"id":736,"nodeType":"Return","src":"1632:81:1"}]},"id":738,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1557:8:1","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"card","nameLocation":"1578:4:1","nodeType":"VariableDeclaration","scope":738,"src":"1566:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$553_memory_ptr","typeString":"struct Card"},"typeName":{"id":715,"nodeType":"UserDefinedTypeName","pathNode":{"id":714,"name":"Card","nodeType":"IdentifierPath","referencedDeclaration":553,"src":"1566:4:1"},"referencedDeclaration":553,"src":"1566:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Card_$553_storage_ptr","typeString":"struct Card"}},"visibility":"internal"}],"src":"1565:18:1"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"1607:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":718,"name":"string","nodeType":"ElementaryTypeName","src":"1607:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1606:15:1"},"scope":739,"src":"1548:172:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":740,"src":"255:1467:1","usedErrors":[]}],"src":"1:1722:1"},"id":1},"contracts/Constants.sol":{"ast":{"absolutePath":"contracts/Constants.sol","exportedSymbols":{"NCARDS":[755],"ONE_B6":[752]},"id":756,"nodeType":"SourceUnit","nodes":[{"constant":true,"id":752,"mutability":"constant","name":"ONE_B6","nameLocation":"16:6:2","nodeType":"VariableDeclaration","scope":756,"src":"0:49:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"typeName":{"id":741,"name":"bytes6","nodeType":"ElementaryTypeName","src":"0:6:2","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"value":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"31","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":746,"name":"uint","nodeType":"ElementaryTypeName","src":"40:4:2","typeDescriptions":{}}},"id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"40:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32:7:2","typeDescriptions":{}}},"id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes6_$","typeString":"type(bytes6)"},"typeName":{"id":742,"name":"bytes6","nodeType":"ElementaryTypeName","src":"25:6:2","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"visibility":"internal"},{"constant":true,"id":755,"mutability":"constant","name":"NCARDS","nameLocation":"66:6:2","nodeType":"VariableDeclaration","scope":756,"src":"51:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":753,"name":"uint8","nodeType":"ElementaryTypeName","src":"51:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3532","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"75:2:2","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"internal"}],"src":"0:78:2"},"id":2},"contracts/Game.sol":{"ast":{"absolutePath":"contracts/Game.sol","exportedSymbols":{"Card":[553],"CardUtils":[739],"Deck":[763],"DeckUtils":[877],"Game":[891],"GameStatus":[881],"GameUtils":[948],"NCARDS":[755],"ONE_B6":[752],"Rank":[546],"Sapphire":[443],"Suit":[532],"sha384":[526],"sha512":[499],"sha512_256":[472]},"id":949,"nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"0:23:3"},{"absolutePath":"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol","file":"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol","id":758,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":527,"src":"25:66:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Constants.sol","file":"./Constants.sol","id":759,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":756,"src":"92:25:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Cards.sol","file":"./Cards.sol","id":760,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":740,"src":"118:21:3","symbolAliases":[],"unitAlias":""},{"canonicalName":"Deck","id":763,"members":[{"constant":false,"id":762,"mutability":"mutable","name":"indices","nameLocation":"166:7:3","nodeType":"VariableDeclaration","scope":763,"src":"160:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":761,"name":"bytes","nodeType":"ElementaryTypeName","src":"160:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Deck","nameLocation":"149:4:3","nodeType":"StructDefinition","scope":949,"src":"142:34:3","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"DeckUtils","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":877,"linearizedBaseContracts":[877],"name":"DeckUtils","nameLocation":"186:9:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":783,"nodeType":"Block","src":"261:117:3","statements":[{"assignments":[770],"declarations":[{"constant":false,"id":770,"mutability":"mutable","name":"seed","nameLocation":"284:4:3","nodeType":"VariableDeclaration","scope":783,"src":"271:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"271:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":776,"initialValue":{"arguments":[{"id":773,"name":"NCARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"312:6:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"320:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":771,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"291:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$443_$","typeString":"type(library Sapphire)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"randomBytes","nodeType":"MemberAccess","referencedDeclaration":86,"src":"291:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) view returns (bytes memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"291:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"271:52:3"},{"expression":{"arguments":[{"arguments":[{"id":779,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"365:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":778,"name":"seedIntoCardIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"345:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"345:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":777,"name":"Deck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"340:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Deck_$763_storage_ptr_$","typeString":"type(struct Deck storage pointer)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"340:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deck_$763_memory_ptr","typeString":"struct Deck memory"}},"functionReturnParameters":768,"id":782,"nodeType":"Return","src":"333:38:3"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"create","nameLocation":"216:6:3","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"222:2:3"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"248:11:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deck_$763_memory_ptr","typeString":"struct Deck"},"typeName":{"id":766,"nodeType":"UserDefinedTypeName","pathNode":{"id":765,"name":"Deck","nodeType":"IdentifierPath","referencedDeclaration":763,"src":"248:4:3"},"referencedDeclaration":763,"src":"248:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Deck_$763_storage_ptr","typeString":"struct Deck"}},"visibility":"internal"}],"src":"247:13:3"},"scope":877,"src":"207:171:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":875,"nodeType":"Block","src":"474:643:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":792,"name":"randomBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"492:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"492:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":794,"name":"NCARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"514:6:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"492:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072616e646f6d206279746573206c656e677468","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"522:29:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd","typeString":"literal_string \"Invalid random bytes length\""},"value":"Invalid random bytes length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd","typeString":"literal_string \"Invalid random bytes length\""}],"id":791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"484:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"484:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":798,"nodeType":"ExpressionStatement","src":"484:68:3"},{"assignments":[800],"declarations":[{"constant":false,"id":800,"mutability":"mutable","name":"indices","nameLocation":"575:7:3","nodeType":"VariableDeclaration","scope":875,"src":"562:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":799,"name":"bytes","nodeType":"ElementaryTypeName","src":"562:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":805,"initialValue":{"arguments":[{"id":803,"name":"NCARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"595:6:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"585:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":801,"name":"bytes","nodeType":"ElementaryTypeName","src":"589:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"585:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"562:40:3"},{"assignments":[807],"declarations":[{"constant":false,"id":807,"mutability":"mutable","name":"bloomFilter","nameLocation":"619:11:3","nodeType":"VariableDeclaration","scope":875,"src":"612:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"typeName":{"id":806,"name":"bytes6","nodeType":"ElementaryTypeName","src":"612:6:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"visibility":"internal"}],"id":808,"nodeType":"VariableDeclarationStatement","src":"612:18:3"},{"body":{"id":873,"nodeType":"Block","src":"682:429:3","statements":[{"assignments":[821],"declarations":[{"constant":false,"id":821,"mutability":"mutable","name":"cardIdx","nameLocation":"702:7:3","nodeType":"VariableDeclaration","scope":873,"src":"696:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":820,"name":"uint8","nodeType":"ElementaryTypeName","src":"696:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":828,"initialValue":{"arguments":[{"baseExpression":{"id":824,"name":"randomBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"718:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":826,"indexExpression":{"id":825,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"730:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"718:14:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"712:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":822,"name":"uint8","nodeType":"ElementaryTypeName","src":"712:5:3","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"712:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"696:37:3"},{"body":{"id":862,"nodeType":"Block","src":"760:299:3","statements":[{"assignments":[831],"declarations":[{"constant":false,"id":831,"mutability":"mutable","name":"isInDeck","nameLocation":"783:8:3","nodeType":"VariableDeclaration","scope":862,"src":"778:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":830,"name":"bool","nodeType":"ElementaryTypeName","src":"778:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":841,"initialValue":{"commonType":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":832,"name":"bloomFilter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"795:11:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":833,"name":"ONE_B6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"810:6:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":834,"name":"cardIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"810:17:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}}],"id":836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"809:19:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"src":"795:33:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}}],"id":838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"794:35:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"833:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"794:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"778:56:3"},{"condition":{"id":842,"name":"isInDeck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"856:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":860,"nodeType":"Block","src":"945:100:3","statements":[{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":853,"name":"bloomFilter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"967:11:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":854,"name":"ONE_B6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"982:6:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":855,"name":"cardIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"992:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"982:17:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"src":"967:32:3","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"id":858,"nodeType":"ExpressionStatement","src":"967:32:3"},{"id":859,"nodeType":"Break","src":"1021:5:3"}]},"id":861,"nodeType":"IfStatement","src":"852:193:3","trueBody":{"id":852,"nodeType":"Block","src":"866:73:3","statements":[{"expression":{"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":843,"name":"cardIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"888:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"cardIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"899:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"909:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"899:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:13:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":848,"name":"NCARDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"914:6:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"898:22:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"888:32:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":851,"nodeType":"ExpressionStatement","src":"888:32:3"}]}}]},"condition":{"hexValue":"74727565","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"754:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":863,"nodeType":"WhileStatement","src":"747:312:3"},{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":864,"name":"indices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1072:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":866,"indexExpression":{"id":865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"1080:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1072:10:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":869,"name":"cardIdx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"1092:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1085:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":867,"name":"bytes1","nodeType":"ElementaryTypeName","src":"1085:6:3","typeDescriptions":{}}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1085:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1072:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":872,"nodeType":"ExpressionStatement","src":"1072:28:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"655:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":814,"name":"randomBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"657:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"657:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"655:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":874,"initializationExpression":{"assignments":[810],"declarations":[{"constant":false,"id":810,"mutability":"mutable","name":"i","nameLocation":"650:1:3","nodeType":"VariableDeclaration","scope":874,"src":"645:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint","nodeType":"ElementaryTypeName","src":"645:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":812,"initialValue":{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"652:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"645:8:3"},"loopExpression":{"expression":{"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"677:3:3","subExpression":{"id":817,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"679:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":819,"nodeType":"ExpressionStatement","src":"677:3:3"},"nodeType":"ForStatement","src":"640:471:3"}]},"functionSelector":"b153b56e","id":876,"implemented":true,"kind":"function","modifiers":[],"name":"seedIntoCardIndices","nameLocation":"393:19:3","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"randomBytes","nameLocation":"426:11:3","nodeType":"VariableDeclaration","scope":876,"src":"413:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":785,"name":"bytes","nodeType":"ElementaryTypeName","src":"413:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"412:26:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"460:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"460:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"459:14:3"},"scope":877,"src":"384:733:3","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":949,"src":"178:942:3","usedErrors":[]},{"canonicalName":"GameStatus","id":881,"members":[{"id":878,"name":"Pending","nameLocation":"1144:7:3","nodeType":"EnumValue","src":"1144:7:3"},{"id":879,"name":"Open","nameLocation":"1157:4:3","nodeType":"EnumValue","src":"1157:4:3"},{"id":880,"name":"Closed","nameLocation":"1167:6:3","nodeType":"EnumValue","src":"1167:6:3"}],"name":"GameStatus","nameLocation":"1127:10:3","nodeType":"EnumDefinition","src":"1122:53:3"},{"canonicalName":"Game","id":891,"members":[{"constant":false,"id":884,"mutability":"mutable","name":"deck","nameLocation":"1200:4:3","nodeType":"VariableDeclaration","scope":891,"src":"1195:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Deck_$763_storage_ptr","typeString":"struct Deck"},"typeName":{"id":883,"nodeType":"UserDefinedTypeName","pathNode":{"id":882,"name":"Deck","nodeType":"IdentifierPath","referencedDeclaration":763,"src":"1195:4:3"},"referencedDeclaration":763,"src":"1195:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Deck_$763_storage_ptr","typeString":"struct Deck"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"players","nameLocation":"1220:7:3","nodeType":"VariableDeclaration","scope":891,"src":"1210:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"1210:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":886,"nodeType":"ArrayTypeName","src":"1210:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"status","nameLocation":"1244:6:3","nodeType":"VariableDeclaration","scope":891,"src":"1233:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$881","typeString":"enum GameStatus"},"typeName":{"id":889,"nodeType":"UserDefinedTypeName","pathNode":{"id":888,"name":"GameStatus","nodeType":"IdentifierPath","referencedDeclaration":881,"src":"1233:10:3"},"referencedDeclaration":881,"src":"1233:10:3","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$881","typeString":"enum GameStatus"}},"visibility":"internal"}],"name":"Game","nameLocation":"1184:4:3","nodeType":"StructDefinition","scope":949,"src":"1177:76:3","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"GameUtils","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":948,"linearizedBaseContracts":[948],"name":"GameUtils","nameLocation":"1264:9:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":906,"nodeType":"Block","src":"1321:93:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$881","typeString":"enum GameStatus"},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":897,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1339:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage_ptr","typeString":"struct Game storage pointer"}},"id":898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":890,"src":"1339:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$881","typeString":"enum GameStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":899,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"1354:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$881_$","typeString":"type(enum GameStatus)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":878,"src":"1354:18:3","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$881","typeString":"enum GameStatus"}},"src":"1339:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d65206973206e6f742070656e64696e67","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1374:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036","typeString":"literal_string \"Game is not pending\""},"value":"Game is not pending"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036","typeString":"literal_string \"Game is not pending\""}],"id":896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1331:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":904,"nodeType":"ExpressionStatement","src":"1331:65:3"},{"id":905,"nodeType":"PlaceholderStatement","src":"1406:1:3"}]},"id":907,"name":"onlyPending","nameLocation":"1290:11:3","nodeType":"ModifierDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"game","nameLocation":"1315:4:3","nodeType":"VariableDeclaration","scope":907,"src":"1302:17:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage_ptr","typeString":"struct Game"},"typeName":{"id":893,"nodeType":"UserDefinedTypeName","pathNode":{"id":892,"name":"Game","nodeType":"IdentifierPath","referencedDeclaration":891,"src":"1302:4:3"},"referencedDeclaration":891,"src":"1302:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage_ptr","typeString":"struct Game"}},"visibility":"internal"}],"src":"1301:19:3"},"src":"1281:133:3","virtual":false,"visibility":"internal"},{"body":{"id":926,"nodeType":"Block","src":"1474:157:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":914,"name":"DeckUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"1516:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DeckUtils_$877_$","typeString":"type(library DeckUtils)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"create","nodeType":"MemberAccess","referencedDeclaration":784,"src":"1516:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_struct$_Deck_$763_memory_ptr_$","typeString":"function () view returns (struct Deck memory)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1516:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deck_$763_memory_ptr","typeString":"struct Deck memory"}},{"arguments":[{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1571:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1557:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"1561:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":918,"nodeType":"ArrayTypeName","src":"1561:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1557:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":922,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"1595:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$881_$","typeString":"type(enum GameStatus)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":878,"src":"1595:18:3","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$881","typeString":"enum GameStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Deck_$763_memory_ptr","typeString":"struct Deck memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_enum$_GameStatus_$881","typeString":"enum GameStatus"}],"id":913,"name":"Game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"1491:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Game_$891_storage_ptr_$","typeString":"type(struct Game storage pointer)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["deck","players","status"],"nodeType":"FunctionCall","src":"1491:133:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_memory_ptr","typeString":"struct Game memory"}},"functionReturnParameters":912,"id":925,"nodeType":"Return","src":"1484:140:3"}]},"id":927,"implemented":true,"kind":"function","modifiers":[],"name":"create","nameLocation":"1429:6:3","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"1435:2:3"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":927,"src":"1461:11:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_memory_ptr","typeString":"struct Game"},"typeName":{"id":910,"nodeType":"UserDefinedTypeName","pathNode":{"id":909,"name":"Game","nodeType":"IdentifierPath","referencedDeclaration":891,"src":"1461:4:3"},"referencedDeclaration":891,"src":"1461:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage_ptr","typeString":"struct Game"}},"visibility":"internal"}],"src":"1460:13:3"},"scope":948,"src":"1420:211:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"1713:42:3","statements":[{"expression":{"arguments":[{"id":943,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"1741:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":938,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"1723:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage_ptr","typeString":"struct Game storage pointer"}},"id":941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"players","nodeType":"MemberAccess","referencedDeclaration":887,"src":"1723:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1723:17:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1723:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"1723:25:3"}]},"id":947,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":935,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"1707:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage_ptr","typeString":"struct Game storage pointer"}}],"id":936,"kind":"modifierInvocation","modifierName":{"id":934,"name":"onlyPending","nodeType":"IdentifierPath","referencedDeclaration":907,"src":"1695:11:3"},"nodeType":"ModifierInvocation","src":"1695:17:3"}],"name":"join","nameLocation":"1646:4:3","nodeType":"FunctionDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"game","nameLocation":"1664:4:3","nodeType":"VariableDeclaration","scope":947,"src":"1651:17:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage_ptr","typeString":"struct Game"},"typeName":{"id":929,"nodeType":"UserDefinedTypeName","pathNode":{"id":928,"name":"Game","nodeType":"IdentifierPath","referencedDeclaration":891,"src":"1651:4:3"},"referencedDeclaration":891,"src":"1651:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage_ptr","typeString":"struct Game"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"player","nameLocation":"1678:6:3","nodeType":"VariableDeclaration","scope":947,"src":"1670:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"1670:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1650:35:3"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"1713:0:3"},"scope":948,"src":"1637:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":949,"src":"1256:508:3","usedErrors":[]}],"src":"0:1765:3"},"id":3},"contracts/Poker.sol":{"ast":{"absolutePath":"contracts/Poker.sol","exportedSymbols":{"Card":[553],"CardUtils":[739],"Deck":[763],"DeckUtils":[877],"Game":[891],"GameStatus":[881],"GameUtils":[948],"NCARDS":[755],"ONE_B6":[752],"Poker":[991],"Rank":[546],"Sapphire":[443],"Suit":[532],"sha384":[526],"sha512":[499],"sha512_256":[472]},"id":992,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":950,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:4"},{"absolutePath":"contracts/Game.sol","file":"./Game.sol","id":951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":949,"src":"57:20:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Poker","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":991,"linearizedBaseContracts":[991],"name":"Poker","nameLocation":"137:5:4","nodeType":"ContractDefinition","nodes":[{"id":955,"libraryName":{"id":952,"name":"GameUtils","nodeType":"IdentifierPath","referencedDeclaration":948,"src":"155:9:4"},"nodeType":"UsingForDirective","src":"149:25:4","typeName":{"id":954,"nodeType":"UserDefinedTypeName","pathNode":{"id":953,"name":"Game","nodeType":"IdentifierPath","referencedDeclaration":891,"src":"169:4:4"},"referencedDeclaration":891,"src":"169:4:4","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage_ptr","typeString":"struct Game"}}},{"constant":false,"id":958,"mutability":"mutable","name":"lastGameId","nameLocation":"185:10:4","nodeType":"VariableDeclaration","scope":991,"src":"180:19:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint","nodeType":"ElementaryTypeName","src":"180:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"198:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"gameToDeck","nameLocation":"235:10:4","nodeType":"VariableDeclaration","scope":991,"src":"205:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$891_storage_$","typeString":"mapping(uint256 => struct Game)"},"typeName":{"id":962,"keyType":{"id":959,"name":"uint","nodeType":"ElementaryTypeName","src":"213:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"205:21:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$891_storage_$","typeString":"mapping(uint256 => struct Game)"},"valueType":{"id":961,"nodeType":"UserDefinedTypeName","pathNode":{"id":960,"name":"Game","nodeType":"IdentifierPath","referencedDeclaration":891,"src":"221:4:4"},"referencedDeclaration":891,"src":"221:4:4","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage_ptr","typeString":"struct Game"}}},"visibility":"private"},{"body":{"id":975,"nodeType":"Block","src":"283:62:4","statements":[{"expression":{"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":966,"name":"gameToDeck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"293:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$891_storage_$","typeString":"mapping(uint256 => struct Game storage ref)"}},"id":969,"indexExpression":{"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"304:12:4","subExpression":{"id":967,"name":"lastGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"304:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"293:24:4","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage","typeString":"struct Game storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":970,"name":"GameUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"320:9:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GameUtils_$948_$","typeString":"type(library GameUtils)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"create","nodeType":"MemberAccess","referencedDeclaration":927,"src":"320:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_struct$_Game_$891_memory_ptr_$","typeString":"function () view returns (struct Game memory)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"320:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_memory_ptr","typeString":"struct Game memory"}},"src":"293:45:4","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage","typeString":"struct Game storage ref"}},"id":974,"nodeType":"ExpressionStatement","src":"293:45:4"}]},"functionSelector":"7255d729","id":976,"implemented":true,"kind":"function","modifiers":[],"name":"createGame","nameLocation":"261:10:4","nodeType":"FunctionDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[],"src":"271:2:4"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"283:0:4"},"scope":991,"src":"252:93:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":989,"nodeType":"Block","src":"391:52:4","statements":[{"expression":{"arguments":[{"expression":{"id":985,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"425:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"425:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":981,"name":"gameToDeck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"401:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$891_storage_$","typeString":"mapping(uint256 => struct Game storage ref)"}},"id":983,"indexExpression":{"id":982,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"412:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"401:18:4","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$891_storage","typeString":"struct Game storage ref"}},"id":984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"join","nodeType":"MemberAccess","referencedDeclaration":947,"src":"401:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Game_$891_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Game_$891_storage_ptr_$","typeString":"function (struct Game storage pointer,address)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"401:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"ExpressionStatement","src":"401:35:4"}]},"functionSelector":"efaa55a0","id":990,"implemented":true,"kind":"function","modifiers":[],"name":"joinGame","nameLocation":"360:8:4","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"gameId","nameLocation":"374:6:4","nodeType":"VariableDeclaration","scope":990,"src":"369:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint","nodeType":"ElementaryTypeName","src":"369:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"368:13:4"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"391:0:4"},"scope":991,"src":"351:92:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":992,"src":"128:318:4","usedErrors":[]}],"src":"32:414:4"},"id":4}},"contracts":{"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol":{"Sapphire":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fbd5d72a853ec20ee166935381d5fd2a5d098fbcf25c6ffdc772e6020a6cb4a064736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xD5 0xD7 0x2A DUP6 RETURNDATACOPY 0xC2 0xE 0xE1 PUSH7 0x935381D5FD2A5D MULMOD DUP16 0xBC CALLCODE 0x5C PUSH16 0xFDC772E6020A6CB4A064736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"1117:18823:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fbd5d72a853ec20ee166935381d5fd2a5d098fbcf25c6ffdc772e6020a6cb4a064736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xD5 0xD7 0x2A DUP6 RETURNDATACOPY 0xC2 0xE 0xE1 PUSH7 0x935381D5FD2A5D MULMOD DUP16 0xBC CALLCODE 0x5C PUSH16 0xFDC772E6020A6CB4A064736F6C634300 ADDMOD MULMOD STOP CALLER ","sourceMap":"1117:18823:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Sapphire\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library provides a number of convenient wrappers for cryptographic operations such as the x25519 key derivation, Deoxys-II-based encryption and decryption, signing key generation, message digest signing and verification, gas padding and hashing. Most of the mentioned functions are implemented as Sapphire's precompiles and are cheap to call. #### Calling Precompiles Manually You can override the wrappers and call Sapphire precompiles by dispatching calls to specific well-known contract addresses, as described below. The __Precompile address__ section of each function will show you the address of the corresponding precompile. Input parameters should be packed into a contiguous memory region with each chunk of data padded to 32 bytes as usual. The recommended way to construct parameter byte sequences in Solidity is with `abi.encode` and `abi.decode`, which will transparently handle things like putting `bytes` lengths in the correct position.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":\"Sapphire\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x81a0aa5766f7c48ea799114f44e902b2eb11f21808db23d56b6ca9edd48b8f59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94bd0c5263e98788d38bf7b6c24781dac3df4d5cb14045f70d14e208719c292\",\"dweb:/ipfs/QmZKEwnG9a9uPbgWCPVcbW7WGTy53Su6P1DTV95goPs4yU\"]}},\"version\":1}"}},"contracts/Cards.sol":{"CardUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204b14ec8a57040b039ed4b30cea5a512d96ade2aa164011df5172871140208a1664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B EQ 0xEC DUP11 JUMPI DIV SIGNEXTEND SUB SWAP15 0xD4 0xB3 0xC 0xEA GAS MLOAD 0x2D SWAP7 0xAD 0xE2 0xAA AND BLOCKHASH GT 0xDF MLOAD PUSH19 0x871140208A1664736F6C634300080900330000 ","sourceMap":"255:1467:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204b14ec8a57040b039ed4b30cea5a512d96ade2aa164011df5172871140208a1664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B EQ 0xEC DUP11 JUMPI DIV SIGNEXTEND SUB SWAP15 0xD4 0xB3 0xC 0xEA GAS MLOAD 0x2D SWAP7 0xAD 0xE2 0xAA AND BLOCKHASH GT 0xDF MLOAD PUSH19 0x871140208A1664736F6C634300080900330000 ","sourceMap":"255:1467:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cards.sol\":\"CardUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cards.sol\":{\"keccak256\":\"0xf863e0444d04cc8b7e162a1a80fab317fed8602603cad84e93d77a6f541f09d0\",\"urls\":[\"bzz-raw://6d4b77aa41c4e392f1b29d2cfb00558fdf085f442b1dd94a241103495c16588d\",\"dweb:/ipfs/QmYExZC82peCofUQXZGVoP3EDcQJU6MEfRKpfcy3en4EKy\"]}},\"version\":1}"}},"contracts/Game.sol":{"DeckUtils":{"abi":[{"inputs":[{"internalType":"bytes","name":"randomBytes","type":"bytes"}],"name":"seedIntoCardIndices","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6106aa610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063b153b56e1461003a575b600080fd5b610054600480360381019061004f91906103af565b61006a565b6040516100619190610480565b60405180910390f35b6060603460ff168251146100b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100aa906104ff565b60405180910390fd5b6000603460ff1667ffffffffffffffff8111156100d3576100d2610284565b5b6040519080825280601f01601f1916602001820160405280156101055781602001600182028036833780820191505090505b509050600080600090505b845181101561024d57600085828151811061012e5761012d61051f565b5b602001015160f81c60f81b60f81c90505b6001156101f55760008060d01b8260ff16600160001b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1916901b851679ffffffffffffffffffffffffffffffffffffffffffffffffffff19161415905080156101bd5760346001836101ac919061058a565b6101b691906105f0565b91506101ef565b8160ff16600160001b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1916901b84179350506101f5565b5061013f565b8060f81b84838151811061020c5761020b61051f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535050806102469061062b565b9050610110565b505050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102bc82610273565b810181811067ffffffffffffffff821117156102db576102da610284565b5b80604052505050565b60006102ee610255565b90506102fa82826102b3565b919050565b600067ffffffffffffffff82111561031a57610319610284565b5b61032382610273565b9050602081019050919050565b82818337600083830152505050565b600061035261034d846102ff565b6102e4565b90508281526020810184848401111561036e5761036d61026e565b5b610379848285610330565b509392505050565b600082601f83011261039657610395610269565b5b81356103a684826020860161033f565b91505092915050565b6000602082840312156103c5576103c461025f565b5b600082013567ffffffffffffffff8111156103e3576103e2610264565b5b6103ef84828501610381565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610432578082015181840152602081019050610417565b83811115610441576000848401525b50505050565b6000610452826103f8565b61045c8185610403565b935061046c818560208601610414565b61047581610273565b840191505092915050565b6000602082019050818103600083015261049a8184610447565b905092915050565b600082825260208201905092915050565b7f496e76616c69642072616e646f6d206279746573206c656e6774680000000000600082015250565b60006104e9601b836104a2565b91506104f4826104b3565b602082019050919050565b60006020820190508181036000830152610518816104dc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105958261054e565b91506105a08361054e565b92508260ff038211156105b6576105b561055b565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006105fb8261054e565b91506106068361054e565b925082610616576106156105c1565b5b828206905092915050565b6000819050919050565b600061063682610621565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106695761066861055b565b5b60018201905091905056fea2646970667358221220e2766b0a59d44987ab930dc70781b8b965f13a0e4f249d96c7989518242f06bd64736f6c63430008090033","opcodes":"PUSH2 0x6AA PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB153B56E EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x34 PUSH1 0xFF AND DUP3 MLOAD EQ PUSH2 0xB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA SWAP1 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD3 JUMPI PUSH2 0xD2 PUSH2 0x284 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x105 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12E JUMPI PUSH2 0x12D PUSH2 0x51F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 PUSH1 0xD0 SHL DUP3 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x0 SHL PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL DUP6 AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x34 PUSH1 0x1 DUP4 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x0 SHL PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL DUP5 OR SWAP4 POP POP PUSH2 0x1F5 JUMP JUMPDEST POP PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH1 0xF8 SHL DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x20C JUMPI PUSH2 0x20B PUSH2 0x51F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP POP DUP1 PUSH2 0x246 SWAP1 PUSH2 0x62B JUMP JUMPDEST SWAP1 POP PUSH2 0x110 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2BC DUP3 PUSH2 0x273 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2DB JUMPI PUSH2 0x2DA PUSH2 0x284 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE PUSH2 0x255 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FA DUP3 DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x284 JUMP JUMPDEST JUMPDEST PUSH2 0x323 DUP3 PUSH2 0x273 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 PUSH2 0x34D DUP5 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x36E JUMPI PUSH2 0x36D PUSH2 0x26E JUMP JUMPDEST JUMPDEST PUSH2 0x379 DUP5 DUP3 DUP6 PUSH2 0x330 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x396 JUMPI PUSH2 0x395 PUSH2 0x269 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C5 JUMPI PUSH2 0x3C4 PUSH2 0x25F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E3 JUMPI PUSH2 0x3E2 PUSH2 0x264 JUMP JUMPDEST JUMPDEST PUSH2 0x3EF DUP5 DUP3 DUP6 ADD PUSH2 0x381 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x432 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x417 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP3 PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x45C DUP2 DUP6 PUSH2 0x403 JUMP JUMPDEST SWAP4 POP PUSH2 0x46C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x414 JUMP JUMPDEST PUSH2 0x475 DUP2 PUSH2 0x273 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49A DUP2 DUP5 PUSH2 0x447 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642072616E646F6D206279746573206C656E6774680000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E9 PUSH1 0x1B DUP4 PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F4 DUP3 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x518 DUP2 PUSH2 0x4DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x595 DUP3 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x5A0 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0x55B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FB DUP3 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x606 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x616 JUMPI PUSH2 0x615 PUSH2 0x5C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x636 DUP3 PUSH2 0x621 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x669 JUMPI PUSH2 0x668 PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH23 0x6B0A59D44987AB930DC70781B8B965F13A0E4F249D96C7 SWAP9 SWAP6 XOR 0x24 0x2F MOD 0xBD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"178:942:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@seedIntoCardIndices_876":{"entryPoint":106,"id":876,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":831,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":897,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":943,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack_library":{"entryPoint":1095,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd_to_t_string_memory_ptr_fromStack":{"entryPoint":1244,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed":{"entryPoint":1152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1279,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":740,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":597,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1016,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack_library":{"entryPoint":1027,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1186,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":1418,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1569,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1358,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":816,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":1044,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":691,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":1579,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint8":{"entryPoint":1520,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1371,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":1473,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1311,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":644,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":617,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":622,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":612,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":607,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":627,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd":{"entryPoint":1203,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6910:5","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:5","statements":[{"nodeType":"YulAssignment","src":"57:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:5"},"nodeType":"YulFunctionCall","src":"67:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:5","type":""}],"src":"7:75:5"},{"body":{"nodeType":"YulBlock","src":"177:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:5"},"nodeType":"YulFunctionCall","src":"187:12:5"},"nodeType":"YulExpressionStatement","src":"187:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:5"},{"body":{"nodeType":"YulBlock","src":"300:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:5"},"nodeType":"YulFunctionCall","src":"310:12:5"},"nodeType":"YulExpressionStatement","src":"310:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:5"},{"body":{"nodeType":"YulBlock","src":"423:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:5"},"nodeType":"YulFunctionCall","src":"433:12:5"},"nodeType":"YulExpressionStatement","src":"433:12:5"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:5"},{"body":{"nodeType":"YulBlock","src":"546:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:5"},"nodeType":"YulFunctionCall","src":"556:12:5"},"nodeType":"YulExpressionStatement","src":"556:12:5"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:5"},{"body":{"nodeType":"YulBlock","src":"628:54:5","statements":[{"nodeType":"YulAssignment","src":"638:38:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:5"},"nodeType":"YulFunctionCall","src":"652:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:5"},"nodeType":"YulFunctionCall","src":"668:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:5"},"nodeType":"YulFunctionCall","src":"648:28:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:5"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:5","type":""}],"src":"580:102:5"},{"body":{"nodeType":"YulBlock","src":"716:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:5"},"nodeType":"YulFunctionCall","src":"726:88:5"},"nodeType":"YulExpressionStatement","src":"726:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:5"},"nodeType":"YulFunctionCall","src":"823:15:5"},"nodeType":"YulExpressionStatement","src":"823:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:5"},"nodeType":"YulFunctionCall","src":"847:15:5"},"nodeType":"YulExpressionStatement","src":"847:15:5"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:5"},{"body":{"nodeType":"YulBlock","src":"917:238:5","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:5","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:5"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:5"},"nodeType":"YulFunctionCall","src":"957:27:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:5"},"nodeType":"YulFunctionCall","src":"945:40:5"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:5"},"nodeType":"YulFunctionCall","src":"1098:18:5"},"nodeType":"YulExpressionStatement","src":"1098:18:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:5"},"nodeType":"YulFunctionCall","src":"1036:34:5"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:5"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:5"},"nodeType":"YulFunctionCall","src":"1072:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:5"},"nodeType":"YulFunctionCall","src":"1033:62:5"},"nodeType":"YulIf","src":"1030:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:5","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:5"},"nodeType":"YulFunctionCall","src":"1127:22:5"},"nodeType":"YulExpressionStatement","src":"1127:22:5"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:5","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:5","type":""}],"src":"874:281:5"},{"body":{"nodeType":"YulBlock","src":"1202:88:5","statements":[{"nodeType":"YulAssignment","src":"1212:30:5","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:5"},"nodeType":"YulFunctionCall","src":"1222:20:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:5"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:5"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:5"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:5"},"nodeType":"YulFunctionCall","src":"1251:33:5"},"nodeType":"YulExpressionStatement","src":"1251:33:5"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:5","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:5","type":""}],"src":"1161:129:5"},{"body":{"nodeType":"YulBlock","src":"1362:241:5","statements":[{"body":{"nodeType":"YulBlock","src":"1467:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1469:16:5"},"nodeType":"YulFunctionCall","src":"1469:18:5"},"nodeType":"YulExpressionStatement","src":"1469:18:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1439:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1447:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1436:2:5"},"nodeType":"YulFunctionCall","src":"1436:30:5"},"nodeType":"YulIf","src":"1433:56:5"},{"nodeType":"YulAssignment","src":"1499:37:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1529:6:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1507:21:5"},"nodeType":"YulFunctionCall","src":"1507:29:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1499:4:5"}]},{"nodeType":"YulAssignment","src":"1573:23:5","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1585:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"1591:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1581:3:5"},"nodeType":"YulFunctionCall","src":"1581:15:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1573:4:5"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1346:6:5","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1357:4:5","type":""}],"src":"1296:307:5"},{"body":{"nodeType":"YulBlock","src":"1660:103:5","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1683:3:5"},{"name":"src","nodeType":"YulIdentifier","src":"1688:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"1693:6:5"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1670:12:5"},"nodeType":"YulFunctionCall","src":"1670:30:5"},"nodeType":"YulExpressionStatement","src":"1670:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1741:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"1746:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1737:3:5"},"nodeType":"YulFunctionCall","src":"1737:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"1755:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1730:6:5"},"nodeType":"YulFunctionCall","src":"1730:27:5"},"nodeType":"YulExpressionStatement","src":"1730:27:5"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1642:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1647:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1652:6:5","type":""}],"src":"1609:154:5"},{"body":{"nodeType":"YulBlock","src":"1852:327:5","statements":[{"nodeType":"YulAssignment","src":"1862:74:5","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1928:6:5"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1887:40:5"},"nodeType":"YulFunctionCall","src":"1887:48:5"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1871:15:5"},"nodeType":"YulFunctionCall","src":"1871:65:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1862:5:5"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1952:5:5"},{"name":"length","nodeType":"YulIdentifier","src":"1959:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1945:6:5"},"nodeType":"YulFunctionCall","src":"1945:21:5"},"nodeType":"YulExpressionStatement","src":"1945:21:5"},{"nodeType":"YulVariableDeclaration","src":"1975:27:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1990:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1997:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1986:3:5"},"nodeType":"YulFunctionCall","src":"1986:16:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1979:3:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"2040:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2042:77:5"},"nodeType":"YulFunctionCall","src":"2042:79:5"},"nodeType":"YulExpressionStatement","src":"2042:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2021:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"2026:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2017:3:5"},"nodeType":"YulFunctionCall","src":"2017:16:5"},{"name":"end","nodeType":"YulIdentifier","src":"2035:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2014:2:5"},"nodeType":"YulFunctionCall","src":"2014:25:5"},"nodeType":"YulIf","src":"2011:112:5"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2156:3:5"},{"name":"dst","nodeType":"YulIdentifier","src":"2161:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"2166:6:5"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"2132:23:5"},"nodeType":"YulFunctionCall","src":"2132:41:5"},"nodeType":"YulExpressionStatement","src":"2132:41:5"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1825:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1830:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1838:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1846:5:5","type":""}],"src":"1769:410:5"},{"body":{"nodeType":"YulBlock","src":"2259:277:5","statements":[{"body":{"nodeType":"YulBlock","src":"2308:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2310:77:5"},"nodeType":"YulFunctionCall","src":"2310:79:5"},"nodeType":"YulExpressionStatement","src":"2310:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2287:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2295:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2283:3:5"},"nodeType":"YulFunctionCall","src":"2283:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"2302:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2279:3:5"},"nodeType":"YulFunctionCall","src":"2279:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2272:6:5"},"nodeType":"YulFunctionCall","src":"2272:35:5"},"nodeType":"YulIf","src":"2269:122:5"},{"nodeType":"YulVariableDeclaration","src":"2400:34:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2427:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2414:12:5"},"nodeType":"YulFunctionCall","src":"2414:20:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2404:6:5","type":""}]},{"nodeType":"YulAssignment","src":"2443:87:5","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2503:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2511:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2499:3:5"},"nodeType":"YulFunctionCall","src":"2499:17:5"},{"name":"length","nodeType":"YulIdentifier","src":"2518:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"2526:3:5"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2452:46:5"},"nodeType":"YulFunctionCall","src":"2452:78:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2443:5:5"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2237:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"2245:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2253:5:5","type":""}],"src":"2198:338:5"},{"body":{"nodeType":"YulBlock","src":"2617:432:5","statements":[{"body":{"nodeType":"YulBlock","src":"2663:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2665:77:5"},"nodeType":"YulFunctionCall","src":"2665:79:5"},"nodeType":"YulExpressionStatement","src":"2665:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2638:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"2647:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2634:3:5"},"nodeType":"YulFunctionCall","src":"2634:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"2659:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2630:3:5"},"nodeType":"YulFunctionCall","src":"2630:32:5"},"nodeType":"YulIf","src":"2627:119:5"},{"nodeType":"YulBlock","src":"2756:286:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2771:45:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2802:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2813:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2798:3:5"},"nodeType":"YulFunctionCall","src":"2798:17:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2785:12:5"},"nodeType":"YulFunctionCall","src":"2785:31:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2775:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"2863:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2865:77:5"},"nodeType":"YulFunctionCall","src":"2865:79:5"},"nodeType":"YulExpressionStatement","src":"2865:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2835:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2843:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2832:2:5"},"nodeType":"YulFunctionCall","src":"2832:30:5"},"nodeType":"YulIf","src":"2829:117:5"},{"nodeType":"YulAssignment","src":"2960:72:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3004:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"3015:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:5"},"nodeType":"YulFunctionCall","src":"3000:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3024:7:5"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2970:29:5"},"nodeType":"YulFunctionCall","src":"2970:62:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2960:6:5"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2587:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2598:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2610:6:5","type":""}],"src":"2542:507:5"},{"body":{"nodeType":"YulBlock","src":"3113:40:5","statements":[{"nodeType":"YulAssignment","src":"3124:22:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3140:5:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3134:5:5"},"nodeType":"YulFunctionCall","src":"3134:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3124:6:5"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3096:5:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3106:6:5","type":""}],"src":"3055:98:5"},{"body":{"nodeType":"YulBlock","src":"3262:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3279:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"3284:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3272:6:5"},"nodeType":"YulFunctionCall","src":"3272:19:5"},"nodeType":"YulExpressionStatement","src":"3272:19:5"},{"nodeType":"YulAssignment","src":"3300:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3319:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3324:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3315:3:5"},"nodeType":"YulFunctionCall","src":"3315:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3300:11:5"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack_library","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3234:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"3239:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3250:11:5","type":""}],"src":"3159:176:5"},{"body":{"nodeType":"YulBlock","src":"3390:258:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3400:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"3409:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3404:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"3469:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3494:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"3499:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3490:3:5"},"nodeType":"YulFunctionCall","src":"3490:11:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3513:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"3518:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3509:3:5"},"nodeType":"YulFunctionCall","src":"3509:11:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3503:5:5"},"nodeType":"YulFunctionCall","src":"3503:18:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3483:6:5"},"nodeType":"YulFunctionCall","src":"3483:39:5"},"nodeType":"YulExpressionStatement","src":"3483:39:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3430:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"3433:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3427:2:5"},"nodeType":"YulFunctionCall","src":"3427:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3441:19:5","statements":[{"nodeType":"YulAssignment","src":"3443:15:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3452:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"3455:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3448:3:5"},"nodeType":"YulFunctionCall","src":"3448:10:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3443:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"3423:3:5","statements":[]},"src":"3419:113:5"},{"body":{"nodeType":"YulBlock","src":"3566:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3616:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"3621:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3612:3:5"},"nodeType":"YulFunctionCall","src":"3612:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"3630:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3605:6:5"},"nodeType":"YulFunctionCall","src":"3605:27:5"},"nodeType":"YulExpressionStatement","src":"3605:27:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3547:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"3550:6:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3544:2:5"},"nodeType":"YulFunctionCall","src":"3544:13:5"},"nodeType":"YulIf","src":"3541:101:5"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3372:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3377:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"3382:6:5","type":""}],"src":"3341:307:5"},{"body":{"nodeType":"YulBlock","src":"3752:278:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3762:52:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3808:5:5"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3776:31:5"},"nodeType":"YulFunctionCall","src":"3776:38:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3766:6:5","type":""}]},{"nodeType":"YulAssignment","src":"3823:85:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3896:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"3901:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack_library","nodeType":"YulIdentifier","src":"3830:65:5"},"nodeType":"YulFunctionCall","src":"3830:78:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3823:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3943:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3950:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:5"},"nodeType":"YulFunctionCall","src":"3939:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"3957:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"3962:6:5"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3917:21:5"},"nodeType":"YulFunctionCall","src":"3917:52:5"},"nodeType":"YulExpressionStatement","src":"3917:52:5"},{"nodeType":"YulAssignment","src":"3978:46:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3989:3:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4016:6:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3994:21:5"},"nodeType":"YulFunctionCall","src":"3994:29:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3985:3:5"},"nodeType":"YulFunctionCall","src":"3985:39:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3978:3:5"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack_library","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3733:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3740:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3748:3:5","type":""}],"src":"3654:376:5"},{"body":{"nodeType":"YulBlock","src":"4160:201:5","statements":[{"nodeType":"YulAssignment","src":"4170:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4182:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4193:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4178:3:5"},"nodeType":"YulFunctionCall","src":"4178:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4170:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4217:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4228:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4213:3:5"},"nodeType":"YulFunctionCall","src":"4213:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4236:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"4242:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4232:3:5"},"nodeType":"YulFunctionCall","src":"4232:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4206:6:5"},"nodeType":"YulFunctionCall","src":"4206:47:5"},"nodeType":"YulExpressionStatement","src":"4206:47:5"},{"nodeType":"YulAssignment","src":"4262:92:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4340:6:5"},{"name":"tail","nodeType":"YulIdentifier","src":"4349:4:5"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack_library","nodeType":"YulIdentifier","src":"4270:69:5"},"nodeType":"YulFunctionCall","src":"4270:84:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4262:4:5"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4132:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4144:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4155:4:5","type":""}],"src":"4036:325:5"},{"body":{"nodeType":"YulBlock","src":"4463:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4480:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"4485:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4473:6:5"},"nodeType":"YulFunctionCall","src":"4473:19:5"},"nodeType":"YulExpressionStatement","src":"4473:19:5"},{"nodeType":"YulAssignment","src":"4501:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4520:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"4525:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4516:3:5"},"nodeType":"YulFunctionCall","src":"4516:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4501:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4435:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"4440:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4451:11:5","type":""}],"src":"4367:169:5"},{"body":{"nodeType":"YulBlock","src":"4648:71:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4670:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"4678:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4666:3:5"},"nodeType":"YulFunctionCall","src":"4666:14:5"},{"hexValue":"496e76616c69642072616e646f6d206279746573206c656e677468","kind":"string","nodeType":"YulLiteral","src":"4682:29:5","type":"","value":"Invalid random bytes length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4659:6:5"},"nodeType":"YulFunctionCall","src":"4659:53:5"},"nodeType":"YulExpressionStatement","src":"4659:53:5"}]},"name":"store_literal_in_memory_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4640:6:5","type":""}],"src":"4542:177:5"},{"body":{"nodeType":"YulBlock","src":"4871:220:5","statements":[{"nodeType":"YulAssignment","src":"4881:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4947:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"4952:2:5","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4888:58:5"},"nodeType":"YulFunctionCall","src":"4888:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4881:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5053:3:5"}],"functionName":{"name":"store_literal_in_memory_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd","nodeType":"YulIdentifier","src":"4964:88:5"},"nodeType":"YulFunctionCall","src":"4964:93:5"},"nodeType":"YulExpressionStatement","src":"4964:93:5"},{"nodeType":"YulAssignment","src":"5066:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5077:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5082:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5073:3:5"},"nodeType":"YulFunctionCall","src":"5073:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5066:3:5"}]}]},"name":"abi_encode_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4859:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4867:3:5","type":""}],"src":"4725:366:5"},{"body":{"nodeType":"YulBlock","src":"5268:248:5","statements":[{"nodeType":"YulAssignment","src":"5278:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5290:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5301:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:5"},"nodeType":"YulFunctionCall","src":"5286:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5278:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5325:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5336:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5321:3:5"},"nodeType":"YulFunctionCall","src":"5321:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5344:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"5350:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5340:3:5"},"nodeType":"YulFunctionCall","src":"5340:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5314:6:5"},"nodeType":"YulFunctionCall","src":"5314:47:5"},"nodeType":"YulExpressionStatement","src":"5314:47:5"},{"nodeType":"YulAssignment","src":"5370:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5504:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5378:124:5"},"nodeType":"YulFunctionCall","src":"5378:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5370:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5248:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5263:4:5","type":""}],"src":"5097:419:5"},{"body":{"nodeType":"YulBlock","src":"5550:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5567:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5570:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5560:6:5"},"nodeType":"YulFunctionCall","src":"5560:88:5"},"nodeType":"YulExpressionStatement","src":"5560:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5664:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5667:4:5","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5657:6:5"},"nodeType":"YulFunctionCall","src":"5657:15:5"},"nodeType":"YulExpressionStatement","src":"5657:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5688:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5691:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5681:6:5"},"nodeType":"YulFunctionCall","src":"5681:15:5"},"nodeType":"YulExpressionStatement","src":"5681:15:5"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5522:180:5"},{"body":{"nodeType":"YulBlock","src":"5751:43:5","statements":[{"nodeType":"YulAssignment","src":"5761:27:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5776:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5783:4:5","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5772:3:5"},"nodeType":"YulFunctionCall","src":"5772:16:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5761:7:5"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5733:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5743:7:5","type":""}],"src":"5708:86:5"},{"body":{"nodeType":"YulBlock","src":"5828:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5845:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5848:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5838:6:5"},"nodeType":"YulFunctionCall","src":"5838:88:5"},"nodeType":"YulExpressionStatement","src":"5838:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5942:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5945:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5935:6:5"},"nodeType":"YulFunctionCall","src":"5935:15:5"},"nodeType":"YulExpressionStatement","src":"5935:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5966:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5969:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5959:6:5"},"nodeType":"YulFunctionCall","src":"5959:15:5"},"nodeType":"YulExpressionStatement","src":"5959:15:5"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5800:180:5"},{"body":{"nodeType":"YulBlock","src":"6028:195:5","statements":[{"nodeType":"YulAssignment","src":"6038:23:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6059:1:5"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6043:15:5"},"nodeType":"YulFunctionCall","src":"6043:18:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6038:1:5"}]},{"nodeType":"YulAssignment","src":"6070:23:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6091:1:5"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6075:15:5"},"nodeType":"YulFunctionCall","src":"6075:18:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6070:1:5"}]},{"body":{"nodeType":"YulBlock","src":"6169:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6171:16:5"},"nodeType":"YulFunctionCall","src":"6171:18:5"},"nodeType":"YulExpressionStatement","src":"6171:18:5"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6152:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6159:4:5","type":"","value":"0xff"},{"name":"y","nodeType":"YulIdentifier","src":"6165:1:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6155:3:5"},"nodeType":"YulFunctionCall","src":"6155:12:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6149:2:5"},"nodeType":"YulFunctionCall","src":"6149:19:5"},"nodeType":"YulIf","src":"6146:45:5"},{"nodeType":"YulAssignment","src":"6201:16:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6212:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"6215:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6208:3:5"},"nodeType":"YulFunctionCall","src":"6208:9:5"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6201:3:5"}]}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6015:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"6018:1:5","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6024:3:5","type":""}],"src":"5986:237:5"},{"body":{"nodeType":"YulBlock","src":"6257:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6274:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6277:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6267:6:5"},"nodeType":"YulFunctionCall","src":"6267:88:5"},"nodeType":"YulExpressionStatement","src":"6267:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6371:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6374:4:5","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6364:6:5"},"nodeType":"YulFunctionCall","src":"6364:15:5"},"nodeType":"YulExpressionStatement","src":"6364:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6395:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6398:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6388:6:5"},"nodeType":"YulFunctionCall","src":"6388:15:5"},"nodeType":"YulExpressionStatement","src":"6388:15:5"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6229:180:5"},{"body":{"nodeType":"YulBlock","src":"6447:138:5","statements":[{"nodeType":"YulAssignment","src":"6457:23:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6478:1:5"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6462:15:5"},"nodeType":"YulFunctionCall","src":"6462:18:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6457:1:5"}]},{"nodeType":"YulAssignment","src":"6489:23:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6510:1:5"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6494:15:5"},"nodeType":"YulFunctionCall","src":"6494:18:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6489:1:5"}]},{"body":{"nodeType":"YulBlock","src":"6534:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6536:16:5"},"nodeType":"YulFunctionCall","src":"6536:18:5"},"nodeType":"YulExpressionStatement","src":"6536:18:5"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6531:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6524:6:5"},"nodeType":"YulFunctionCall","src":"6524:9:5"},"nodeType":"YulIf","src":"6521:35:5"},{"nodeType":"YulAssignment","src":"6565:14:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6574:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"6577:1:5"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"6570:3:5"},"nodeType":"YulFunctionCall","src":"6570:9:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6565:1:5"}]}]},"name":"mod_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6436:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"6439:1:5","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6445:1:5","type":""}],"src":"6415:170:5"},{"body":{"nodeType":"YulBlock","src":"6636:32:5","statements":[{"nodeType":"YulAssignment","src":"6646:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"6657:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6646:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6618:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6628:7:5","type":""}],"src":"6591:77:5"},{"body":{"nodeType":"YulBlock","src":"6717:190:5","statements":[{"nodeType":"YulAssignment","src":"6727:33:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6754:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6736:17:5"},"nodeType":"YulFunctionCall","src":"6736:24:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6727:5:5"}]},{"body":{"nodeType":"YulBlock","src":"6850:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6852:16:5"},"nodeType":"YulFunctionCall","src":"6852:18:5"},"nodeType":"YulExpressionStatement","src":"6852:18:5"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6775:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"6782:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6772:2:5"},"nodeType":"YulFunctionCall","src":"6772:77:5"},"nodeType":"YulIf","src":"6769:103:5"},{"nodeType":"YulAssignment","src":"6881:20:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6892:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"6899:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6888:3:5"},"nodeType":"YulFunctionCall","src":"6888:13:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6881:3:5"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6703:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6713:3:5","type":""}],"src":"6674:233:5"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack_library(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack_library(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack_library(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack_library(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid random bytes length\")\n\n    }\n\n    function abi_encode_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint8(x, y) -> r {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063b153b56e1461003a575b600080fd5b610054600480360381019061004f91906103af565b61006a565b6040516100619190610480565b60405180910390f35b6060603460ff168251146100b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100aa906104ff565b60405180910390fd5b6000603460ff1667ffffffffffffffff8111156100d3576100d2610284565b5b6040519080825280601f01601f1916602001820160405280156101055781602001600182028036833780820191505090505b509050600080600090505b845181101561024d57600085828151811061012e5761012d61051f565b5b602001015160f81c60f81b60f81c90505b6001156101f55760008060d01b8260ff16600160001b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1916901b851679ffffffffffffffffffffffffffffffffffffffffffffffffffff19161415905080156101bd5760346001836101ac919061058a565b6101b691906105f0565b91506101ef565b8160ff16600160001b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1916901b84179350506101f5565b5061013f565b8060f81b84838151811061020c5761020b61051f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535050806102469061062b565b9050610110565b505050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102bc82610273565b810181811067ffffffffffffffff821117156102db576102da610284565b5b80604052505050565b60006102ee610255565b90506102fa82826102b3565b919050565b600067ffffffffffffffff82111561031a57610319610284565b5b61032382610273565b9050602081019050919050565b82818337600083830152505050565b600061035261034d846102ff565b6102e4565b90508281526020810184848401111561036e5761036d61026e565b5b610379848285610330565b509392505050565b600082601f83011261039657610395610269565b5b81356103a684826020860161033f565b91505092915050565b6000602082840312156103c5576103c461025f565b5b600082013567ffffffffffffffff8111156103e3576103e2610264565b5b6103ef84828501610381565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610432578082015181840152602081019050610417565b83811115610441576000848401525b50505050565b6000610452826103f8565b61045c8185610403565b935061046c818560208601610414565b61047581610273565b840191505092915050565b6000602082019050818103600083015261049a8184610447565b905092915050565b600082825260208201905092915050565b7f496e76616c69642072616e646f6d206279746573206c656e6774680000000000600082015250565b60006104e9601b836104a2565b91506104f4826104b3565b602082019050919050565b60006020820190508181036000830152610518816104dc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105958261054e565b91506105a08361054e565b92508260ff038211156105b6576105b561055b565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006105fb8261054e565b91506106068361054e565b925082610616576106156105c1565b5b828206905092915050565b6000819050919050565b600061063682610621565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106695761066861055b565b5b60018201905091905056fea2646970667358221220e2766b0a59d44987ab930dc70781b8b965f13a0e4f249d96c7989518242f06bd64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB153B56E EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x34 PUSH1 0xFF AND DUP3 MLOAD EQ PUSH2 0xB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA SWAP1 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD3 JUMPI PUSH2 0xD2 PUSH2 0x284 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x105 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12E JUMPI PUSH2 0x12D PUSH2 0x51F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 PUSH1 0xD0 SHL DUP3 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x0 SHL PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL DUP6 AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x34 PUSH1 0x1 DUP4 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x0 SHL PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL DUP5 OR SWAP4 POP POP PUSH2 0x1F5 JUMP JUMPDEST POP PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH1 0xF8 SHL DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x20C JUMPI PUSH2 0x20B PUSH2 0x51F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP POP DUP1 PUSH2 0x246 SWAP1 PUSH2 0x62B JUMP JUMPDEST SWAP1 POP PUSH2 0x110 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2BC DUP3 PUSH2 0x273 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2DB JUMPI PUSH2 0x2DA PUSH2 0x284 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE PUSH2 0x255 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FA DUP3 DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x284 JUMP JUMPDEST JUMPDEST PUSH2 0x323 DUP3 PUSH2 0x273 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x352 PUSH2 0x34D DUP5 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x36E JUMPI PUSH2 0x36D PUSH2 0x26E JUMP JUMPDEST JUMPDEST PUSH2 0x379 DUP5 DUP3 DUP6 PUSH2 0x330 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x396 JUMPI PUSH2 0x395 PUSH2 0x269 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C5 JUMPI PUSH2 0x3C4 PUSH2 0x25F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E3 JUMPI PUSH2 0x3E2 PUSH2 0x264 JUMP JUMPDEST JUMPDEST PUSH2 0x3EF DUP5 DUP3 DUP6 ADD PUSH2 0x381 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x432 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x417 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP3 PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x45C DUP2 DUP6 PUSH2 0x403 JUMP JUMPDEST SWAP4 POP PUSH2 0x46C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x414 JUMP JUMPDEST PUSH2 0x475 DUP2 PUSH2 0x273 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49A DUP2 DUP5 PUSH2 0x447 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642072616E646F6D206279746573206C656E6774680000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E9 PUSH1 0x1B DUP4 PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F4 DUP3 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x518 DUP2 PUSH2 0x4DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x595 DUP3 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x5A0 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0x55B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FB DUP3 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x606 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x616 JUMPI PUSH2 0x615 PUSH2 0x5C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x636 DUP3 PUSH2 0x621 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x669 JUMPI PUSH2 0x668 PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH23 0x6B0A59D44987AB930DC70781B8B965F13A0E4F249D96C7 SWAP9 SWAP6 XOR 0x24 0x2F MOD 0xBD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"178:942:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;384:733;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;460:12;75:2:2;492:28:3;;:11;:18;:28;484:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;562:20;75:2:2;585:17:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:40;;612:18;645:6;652:1;645:8;;640:471;657:11;:18;655:1;:20;640:471;;;696:13;718:11;730:1;718:14;;;;;;;;:::i;:::-;;;;;;;;;;712:21;;696:37;;747:312;754:4;747:312;;;778:13;833:1;794:40;;820:7;810:17;;45:1:2;32:16;;810:17:3;;;;;795:11;:33;794:40;;;;;778:56;;856:8;852:193;;;75:2:2;909:1:3;899:7;:11;;;;:::i;:::-;898:22;;;;:::i;:::-;888:32;;852:193;;;992:7;982:17;;45:1:2;32:16;;982:17:3;;;;;967:32;;;;1021:5;;;852:193;760:299;747:312;;;1092:7;1085:15;;1072:7;1080:1;1072:10;;;;;;;;:::i;:::-;;;;;:28;;;;;;;;;;;682:429;677:3;;;;:::i;:::-;;;640:471;;;;474:643;;384:733;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:307::-;1357:4;1447:18;1439:6;1436:30;1433:56;;;1469:18;;:::i;:::-;1433:56;1507:29;1529:6;1507:29;:::i;:::-;1499:37;;1591:4;1585;1581:15;1573:23;;1296:307;;;:::o;1609:154::-;1693:6;1688:3;1683;1670:30;1755:1;1746:6;1741:3;1737:16;1730:27;1609:154;;;:::o;1769:410::-;1846:5;1871:65;1887:48;1928:6;1887:48;:::i;:::-;1871:65;:::i;:::-;1862:74;;1959:6;1952:5;1945:21;1997:4;1990:5;1986:16;2035:3;2026:6;2021:3;2017:16;2014:25;2011:112;;;2042:79;;:::i;:::-;2011:112;2132:41;2166:6;2161:3;2156;2132:41;:::i;:::-;1852:327;1769:410;;;;;:::o;2198:338::-;2253:5;2302:3;2295:4;2287:6;2283:17;2279:27;2269:122;;2310:79;;:::i;:::-;2269:122;2427:6;2414:20;2452:78;2526:3;2518:6;2511:4;2503:6;2499:17;2452:78;:::i;:::-;2443:87;;2259:277;2198:338;;;;:::o;2542:507::-;2610:6;2659:2;2647:9;2638:7;2634:23;2630:32;2627:119;;;2665:79;;:::i;:::-;2627:119;2813:1;2802:9;2798:17;2785:31;2843:18;2835:6;2832:30;2829:117;;;2865:79;;:::i;:::-;2829:117;2970:62;3024:7;3015:6;3004:9;3000:22;2970:62;:::i;:::-;2960:72;;2756:286;2542:507;;;;:::o;3055:98::-;3106:6;3140:5;3134:12;3124:22;;3055:98;;;:::o;3159:176::-;3250:11;3284:6;3279:3;3272:19;3324:4;3319:3;3315:14;3300:29;;3159:176;;;;:::o;3341:307::-;3409:1;3419:113;3433:6;3430:1;3427:13;3419:113;;;3518:1;3513:3;3509:11;3503:18;3499:1;3494:3;3490:11;3483:39;3455:2;3452:1;3448:10;3443:15;;3419:113;;;3550:6;3547:1;3544:13;3541:101;;;3630:1;3621:6;3616:3;3612:16;3605:27;3541:101;3390:258;3341:307;;;:::o;3654:376::-;3748:3;3776:38;3808:5;3776:38;:::i;:::-;3830:78;3901:6;3896:3;3830:78;:::i;:::-;3823:85;;3917:52;3962:6;3957:3;3950:4;3943:5;3939:16;3917:52;:::i;:::-;3994:29;4016:6;3994:29;:::i;:::-;3989:3;3985:39;3978:46;;3752:278;3654:376;;;;:::o;4036:325::-;4155:4;4193:2;4182:9;4178:18;4170:26;;4242:9;4236:4;4232:20;4228:1;4217:9;4213:17;4206:47;4270:84;4349:4;4340:6;4270:84;:::i;:::-;4262:92;;4036:325;;;;:::o;4367:169::-;4451:11;4485:6;4480:3;4473:19;4525:4;4520:3;4516:14;4501:29;;4367:169;;;;:::o;4542:177::-;4682:29;4678:1;4670:6;4666:14;4659:53;4542:177;:::o;4725:366::-;4867:3;4888:67;4952:2;4947:3;4888:67;:::i;:::-;4881:74;;4964:93;5053:3;4964:93;:::i;:::-;5082:2;5077:3;5073:12;5066:19;;4725:366;;;:::o;5097:419::-;5263:4;5301:2;5290:9;5286:18;5278:26;;5350:9;5344:4;5340:20;5336:1;5325:9;5321:17;5314:47;5378:131;5504:4;5378:131;:::i;:::-;5370:139;;5097:419;;;:::o;5522:180::-;5570:77;5567:1;5560:88;5667:4;5664:1;5657:15;5691:4;5688:1;5681:15;5708:86;5743:7;5783:4;5776:5;5772:16;5761:27;;5708:86;;;:::o;5800:180::-;5848:77;5845:1;5838:88;5945:4;5942:1;5935:15;5969:4;5966:1;5959:15;5986:237;6024:3;6043:18;6059:1;6043:18;:::i;:::-;6038:23;;6075:18;6091:1;6075:18;:::i;:::-;6070:23;;6165:1;6159:4;6155:12;6152:1;6149:19;6146:45;;;6171:18;;:::i;:::-;6146:45;6215:1;6212;6208:9;6201:16;;5986:237;;;;:::o;6229:180::-;6277:77;6274:1;6267:88;6374:4;6371:1;6364:15;6398:4;6395:1;6388:15;6415:170;6445:1;6462:18;6478:1;6462:18;:::i;:::-;6457:23;;6494:18;6510:1;6494:18;:::i;:::-;6489:23;;6531:1;6521:35;;6536:18;;:::i;:::-;6521:35;6577:1;6574;6570:9;6565:14;;6415:170;;;;:::o;6591:77::-;6628:7;6657:5;6646:16;;6591:77;;;:::o;6674:233::-;6713:3;6736:24;6754:5;6736:24;:::i;:::-;6727:33;;6782:66;6775:5;6772:77;6769:103;;;6852:18;;:::i;:::-;6769:103;6899:1;6892:5;6888:13;6881:20;;6674:233;;;:::o"},"methodIdentifiers":{"seedIntoCardIndices(bytes)":"b153b56e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"randomBytes\",\"type\":\"bytes\"}],\"name\":\"seedIntoCardIndices\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Game.sol\":\"DeckUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x81a0aa5766f7c48ea799114f44e902b2eb11f21808db23d56b6ca9edd48b8f59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94bd0c5263e98788d38bf7b6c24781dac3df4d5cb14045f70d14e208719c292\",\"dweb:/ipfs/QmZKEwnG9a9uPbgWCPVcbW7WGTy53Su6P1DTV95goPs4yU\"]},\"contracts/Cards.sol\":{\"keccak256\":\"0xf863e0444d04cc8b7e162a1a80fab317fed8602603cad84e93d77a6f541f09d0\",\"urls\":[\"bzz-raw://6d4b77aa41c4e392f1b29d2cfb00558fdf085f442b1dd94a241103495c16588d\",\"dweb:/ipfs/QmYExZC82peCofUQXZGVoP3EDcQJU6MEfRKpfcy3en4EKy\"]},\"contracts/Constants.sol\":{\"keccak256\":\"0x31f6cd9c223f4b06b59ed4e7d1235225de5bf8f8c7f66a9431b6990aeaa9e34a\",\"urls\":[\"bzz-raw://c468367e97df1e542ff35e38ba1c394ccf6ebb385c1d058e28dbb6da767025b2\",\"dweb:/ipfs/QmevR2ZNdgLFwvVd4Fci3xDsbfjjjLz9RwnhjssJyenVoF\"]},\"contracts/Game.sol\":{\"keccak256\":\"0x20284433c6f871e38eb5d7d6a0aafad3947945a62fa8148d6f3d5f80ac683f29\",\"urls\":[\"bzz-raw://0fbd55bb9868623ac1279a0d5dbafce971214a9ec62f9556a744ad7b0d532d32\",\"dweb:/ipfs/QmSUJCBV2peNVsCJL89HaeFggqeKPtfciejh17iVRuWJpY\"]}},\"version\":1}"},"GameUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208730705daa6aa312ab4a0fcd8b6a26a5701426a4f64c7c3dc68727d48975e5b564736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 ADDRESS PUSH17 0x5DAA6AA312AB4A0FCD8B6A26A5701426A4 0xF6 0x4C PUSH29 0x3DC68727D48975E5B564736F6C63430008090033000000000000000000 ","sourceMap":"1256:508:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208730705daa6aa312ab4a0fcd8b6a26a5701426a4f64c7c3dc68727d48975e5b564736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 ADDRESS PUSH17 0x5DAA6AA312AB4A0FCD8B6A26A5701426A4 0xF6 0x4C PUSH29 0x3DC68727D48975E5B564736F6C63430008090033000000000000000000 ","sourceMap":"1256:508:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Game.sol\":\"GameUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x81a0aa5766f7c48ea799114f44e902b2eb11f21808db23d56b6ca9edd48b8f59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94bd0c5263e98788d38bf7b6c24781dac3df4d5cb14045f70d14e208719c292\",\"dweb:/ipfs/QmZKEwnG9a9uPbgWCPVcbW7WGTy53Su6P1DTV95goPs4yU\"]},\"contracts/Cards.sol\":{\"keccak256\":\"0xf863e0444d04cc8b7e162a1a80fab317fed8602603cad84e93d77a6f541f09d0\",\"urls\":[\"bzz-raw://6d4b77aa41c4e392f1b29d2cfb00558fdf085f442b1dd94a241103495c16588d\",\"dweb:/ipfs/QmYExZC82peCofUQXZGVoP3EDcQJU6MEfRKpfcy3en4EKy\"]},\"contracts/Constants.sol\":{\"keccak256\":\"0x31f6cd9c223f4b06b59ed4e7d1235225de5bf8f8c7f66a9431b6990aeaa9e34a\",\"urls\":[\"bzz-raw://c468367e97df1e542ff35e38ba1c394ccf6ebb385c1d058e28dbb6da767025b2\",\"dweb:/ipfs/QmevR2ZNdgLFwvVd4Fci3xDsbfjjjLz9RwnhjssJyenVoF\"]},\"contracts/Game.sol\":{\"keccak256\":\"0x20284433c6f871e38eb5d7d6a0aafad3947945a62fa8148d6f3d5f80ac683f29\",\"urls\":[\"bzz-raw://0fbd55bb9868623ac1279a0d5dbafce971214a9ec62f9556a744ad7b0d532d32\",\"dweb:/ipfs/QmSUJCBV2peNVsCJL89HaeFggqeKPtfciejh17iVRuWJpY\"]}},\"version\":1}"}},"contracts/Poker.sol":{"Poker":{"abi":[{"inputs":[],"name":"createGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"joinGame","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60806040526000805534801561001457600080fd5b50610c62806100246000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637255d7291461003b578063efaa55a014610045575b600080fd5b610043610061565b005b61005f600480360381019061005a9190610775565b61010b565b005b610069610133565b6001600080600081548092919061007f906107d1565b91905055815260200190815260200160002060008201518160000160008201518160000190805190602001906100b69291906105c1565b50505060208201518160010190805190602001906100d5929190610647565b5060408201518160020160006101000a81548160ff021916908360028111156101015761010061081a565b5b0217905550905050565b61013033600160008481526020019081526020016000206101be90919063ffffffff16565b50565b61013b6106d1565b604051806060016040528061014e6102a1565b8152602001600067ffffffffffffffff81111561016e5761016d610849565b5b60405190808252806020026020018201604052801561019c5781602001602082028036833780820191505090505b508152602001600060028111156101b6576101b561081a565b5b815250905090565b81600060028111156101d3576101d261081a565b5b8160020160009054906101000a900460ff1660028111156101f7576101f661081a565b5b14610237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022e906108d5565b60405180910390fd5b82600101829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6102a961070a565b60006102c8603460ff16604051806020016040528060008152506102e7565b905060405180602001604052806102de836103d6565b81525091505090565b606060008073010000000000000000000000000000000000000173ffffffffffffffffffffffffffffffffffffffff16858560405160200161032a92919061099d565b6040516020818303038152906040526040516103469190610a09565b600060405180830381855afa9150503d8060008114610381576040519150601f19603f3d011682016040523d82523d6000602084013e610386565b606091505b5091509150816103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c290610a6c565b60405180910390fd5b809250505092915050565b6060603460ff1682511461041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610ad8565b60405180910390fd5b6000603460ff1667ffffffffffffffff81111561043f5761043e610849565b5b6040519080825280601f01601f1916602001820160405280156104715781602001600182028036833780820191505090505b509050600080600090505b84518110156105b957600085828151811061049a57610499610af8565b5b602001015160f81c60f81b60f81c90505b6001156105615760008060d01b8260ff16600160001b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1916901b851679ffffffffffffffffffffffffffffffffffffffffffffffffffff19161415905080156105295760346001836105189190610b34565b6105229190610b9a565b915061055b565b8160ff16600160001b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1916901b8417935050610561565b506104ab565b8060f81b84838151811061057857610577610af8565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535050806105b2906107d1565b905061047c565b505050919050565b8280546105cd90610bfa565b90600052602060002090601f0160209004810192826105ef5760008555610636565b82601f1061060857805160ff1916838001178555610636565b82800160010185558215610636579182015b8281111561063557825182559160200191906001019061061a565b5b509050610643919061071d565b5090565b8280548282559060005260206000209081019282156106c0579160200282015b828111156106bf5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610667565b5b5090506106cd919061071d565b5090565b60405180606001604052806106e461070a565b815260200160608152602001600060028111156107045761070361081a565b5b81525090565b6040518060200160405280606081525090565b5b8082111561073657600081600090555060010161071e565b5090565b600080fd5b6000819050919050565b6107528161073f565b811461075d57600080fd5b50565b60008135905061076f81610749565b92915050565b60006020828403121561078b5761078a61073a565b5b600061079984828501610760565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107dc8261073f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561080f5761080e6107a2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f47616d65206973206e6f742070656e64696e6700000000000000000000000000600082015250565b60006108bf601383610878565b91506108ca82610889565b602082019050919050565b600060208201905081810360008301526108ee816108b2565b9050919050565b6108fe8161073f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561093e578082015181840152602081019050610923565b8381111561094d576000848401525b50505050565b6000601f19601f8301169050919050565b600061096f82610904565b610979818561090f565b9350610989818560208601610920565b61099281610953565b840191505092915050565b60006040820190506109b260008301856108f5565b81810360208301526109c48184610964565b90509392505050565b600081905092915050565b60006109e382610904565b6109ed81856109cd565b93506109fd818560208601610920565b80840191505092915050565b6000610a1582846109d8565b915081905092915050565b7f72616e646f6d42797465733a206661696c656400000000000000000000000000600082015250565b6000610a56601383610878565b9150610a6182610a20565b602082019050919050565b60006020820190508181036000830152610a8581610a49565b9050919050565b7f496e76616c69642072616e646f6d206279746573206c656e6774680000000000600082015250565b6000610ac2601b83610878565b9150610acd82610a8c565b602082019050919050565b60006020820190508181036000830152610af181610ab5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b6000610b3f82610b27565b9150610b4a83610b27565b92508260ff03821115610b6057610b5f6107a2565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ba582610b27565b9150610bb083610b27565b925082610bc057610bbf610b6b565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c1257607f821691505b60208210811415610c2657610c25610bcb565b5b5091905056fea264697066735822122009bf4507d58f36ca9b249accb971a0b03629c50444feea6388df4a4e6a06fce464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC62 DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7255D729 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEFAA55A0 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x10B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7F SWAP1 PUSH2 0x7D1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xB6 SWAP3 SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xD5 SWAP3 SWAP2 SWAP1 PUSH2 0x647 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x101 JUMPI PUSH2 0x100 PUSH2 0x81A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP JUMP JUMPDEST PUSH2 0x130 CALLER PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13B PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x14E PUSH2 0x2A1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E JUMPI PUSH2 0x16D PUSH2 0x849 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x1B5 PUSH2 0x81A JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D3 JUMPI PUSH2 0x1D2 PUSH2 0x81A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F7 JUMPI PUSH2 0x1F6 PUSH2 0x81A JUMP JUMPDEST JUMPDEST EQ PUSH2 0x237 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22E SWAP1 PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8 PUSH1 0x34 PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2DE DUP4 PUSH2 0x3D6 JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH20 0x100000000000000000000000000000000000001 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x32A SWAP3 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x381 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x386 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x34 PUSH1 0xFF AND DUP3 MLOAD EQ PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x849 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x471 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0xAF8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 PUSH1 0xD0 SHL DUP3 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x0 SHL PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL DUP6 AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x34 PUSH1 0x1 DUP4 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x522 SWAP2 SWAP1 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0x55B JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x0 SHL PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL DUP5 OR SWAP4 POP POP PUSH2 0x561 JUMP JUMPDEST POP PUSH2 0x4AB JUMP JUMPDEST DUP1 PUSH1 0xF8 SHL DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x578 JUMPI PUSH2 0x577 PUSH2 0xAF8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP POP DUP1 PUSH2 0x5B2 SWAP1 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x47C JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x5CD SWAP1 PUSH2 0xBFA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x5EF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x636 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x608 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x636 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x636 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x635 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x61A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x6C0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x6BF JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x667 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x6E4 PUSH2 0x70A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x704 JUMPI PUSH2 0x703 PUSH2 0x81A JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x736 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x71E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x752 DUP2 PUSH2 0x73F JUMP JUMPDEST DUP2 EQ PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x76F DUP2 PUSH2 0x749 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78B JUMPI PUSH2 0x78A PUSH2 0x73A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x799 DUP5 DUP3 DUP6 ADD PUSH2 0x760 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7DC DUP3 PUSH2 0x73F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x80F JUMPI PUSH2 0x80E PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D65206973206E6F742070656E64696E6700000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BF PUSH1 0x13 DUP4 PUSH2 0x878 JUMP JUMPDEST SWAP2 POP PUSH2 0x8CA DUP3 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8EE DUP2 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FE DUP2 PUSH2 0x73F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x93E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x923 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96F DUP3 PUSH2 0x904 JUMP JUMPDEST PUSH2 0x979 DUP2 DUP6 PUSH2 0x90F JUMP JUMPDEST SWAP4 POP PUSH2 0x989 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x920 JUMP JUMPDEST PUSH2 0x992 DUP2 PUSH2 0x953 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9B2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8F5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x9C4 DUP2 DUP5 PUSH2 0x964 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E3 DUP3 PUSH2 0x904 JUMP JUMPDEST PUSH2 0x9ED DUP2 DUP6 PUSH2 0x9CD JUMP JUMPDEST SWAP4 POP PUSH2 0x9FD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x920 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA15 DUP3 DUP5 PUSH2 0x9D8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x72616E646F6D42797465733A206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 PUSH1 0x13 DUP4 PUSH2 0x878 JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP3 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA85 DUP2 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072616E646F6D206279746573206C656E6774680000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 PUSH1 0x1B DUP4 PUSH2 0x878 JUMP JUMPDEST SWAP2 POP PUSH2 0xACD DUP3 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAF1 DUP2 PUSH2 0xAB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3F DUP3 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xB4A DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0xB60 JUMPI PUSH2 0xB5F PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBA5 DUP3 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB0 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xBC0 JUMPI PUSH2 0xBBF PUSH2 0xB6B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC26 JUMPI PUSH2 0xC25 PUSH2 0xBCB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xBF GASLIMIT SMOD 0xD5 DUP16 CALLDATASIZE 0xCA SWAP12 0x24 SWAP11 0xCC 0xB9 PUSH18 0xA0B03629C50444FEEA6388DF4A4E6A06FCE4 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"128:318:4:-:0;;;198:1;180:19;;128:318;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@createGame_976":{"entryPoint":97,"id":976,"parameterSlots":0,"returnSlots":0},"@create_784":{"entryPoint":673,"id":784,"parameterSlots":0,"returnSlots":1},"@create_927":{"entryPoint":307,"id":927,"parameterSlots":0,"returnSlots":1},"@joinGame_990":{"entryPoint":267,"id":990,"parameterSlots":1,"returnSlots":0},"@join_947":{"entryPoint":446,"id":947,"parameterSlots":2,"returnSlots":0},"@randomBytes_86":{"entryPoint":743,"id":86,"parameterSlots":2,"returnSlots":1},"@seedIntoCardIndices_876":{"entryPoint":982,"id":876,"parameterSlots":1,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1888,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac_to_t_string_memory_ptr_fromStack":{"entryPoint":2633,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd_to_t_string_memory_ptr_fromStack":{"entryPoint":2741,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036_to_t_string_memory_ptr_fromStack":{"entryPoint":2226,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2293,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2668,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2776,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2461,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2308,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2319,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2509,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2168,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":2868,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1855,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":2855,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2336,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3066,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":2001,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint8":{"entryPoint":2970,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1954,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2923,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":2074,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3019,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2808,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2121,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1850,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2387,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac":{"entryPoint":2592,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd":{"entryPoint":2700,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036":{"entryPoint":2185,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1865,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8736:5","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:5","statements":[{"nodeType":"YulAssignment","src":"57:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:5"},"nodeType":"YulFunctionCall","src":"67:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:5","type":""}],"src":"7:75:5"},{"body":{"nodeType":"YulBlock","src":"177:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:5"},"nodeType":"YulFunctionCall","src":"187:12:5"},"nodeType":"YulExpressionStatement","src":"187:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:5"},{"body":{"nodeType":"YulBlock","src":"300:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:5"},"nodeType":"YulFunctionCall","src":"310:12:5"},"nodeType":"YulExpressionStatement","src":"310:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:5"},{"body":{"nodeType":"YulBlock","src":"379:32:5","statements":[{"nodeType":"YulAssignment","src":"389:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:5","type":""}],"src":"334:77:5"},{"body":{"nodeType":"YulBlock","src":"460:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:5"},"nodeType":"YulFunctionCall","src":"519:12:5"},"nodeType":"YulExpressionStatement","src":"519:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:5"},"nodeType":"YulFunctionCall","src":"490:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:5"},"nodeType":"YulFunctionCall","src":"480:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:5"},"nodeType":"YulFunctionCall","src":"473:43:5"},"nodeType":"YulIf","src":"470:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:5","type":""}],"src":"417:122:5"},{"body":{"nodeType":"YulBlock","src":"597:87:5","statements":[{"nodeType":"YulAssignment","src":"607:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:5"},"nodeType":"YulFunctionCall","src":"616:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:5"},"nodeType":"YulFunctionCall","src":"645:33:5"},"nodeType":"YulExpressionStatement","src":"645:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:5","type":""}],"src":"545:139:5"},{"body":{"nodeType":"YulBlock","src":"756:263:5","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:5"},"nodeType":"YulFunctionCall","src":"804:79:5"},"nodeType":"YulExpressionStatement","src":"804:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:5"},"nodeType":"YulFunctionCall","src":"773:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:5"},"nodeType":"YulFunctionCall","src":"769:32:5"},"nodeType":"YulIf","src":"766:119:5"},{"nodeType":"YulBlock","src":"895:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:5","type":""}]},{"nodeType":"YulAssignment","src":"939:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:5"},"nodeType":"YulFunctionCall","src":"970:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"949:20:5"},"nodeType":"YulFunctionCall","src":"949:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:5","type":""}],"src":"690:329:5"},{"body":{"nodeType":"YulBlock","src":"1053:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1070:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1073:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1063:6:5"},"nodeType":"YulFunctionCall","src":"1063:88:5"},"nodeType":"YulExpressionStatement","src":"1063:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1167:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1170:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1160:6:5"},"nodeType":"YulFunctionCall","src":"1160:15:5"},"nodeType":"YulExpressionStatement","src":"1160:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1191:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1194:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1184:6:5"},"nodeType":"YulFunctionCall","src":"1184:15:5"},"nodeType":"YulExpressionStatement","src":"1184:15:5"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1025:180:5"},{"body":{"nodeType":"YulBlock","src":"1254:190:5","statements":[{"nodeType":"YulAssignment","src":"1264:33:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1291:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1273:17:5"},"nodeType":"YulFunctionCall","src":"1273:24:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1264:5:5"}]},{"body":{"nodeType":"YulBlock","src":"1387:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1389:16:5"},"nodeType":"YulFunctionCall","src":"1389:18:5"},"nodeType":"YulExpressionStatement","src":"1389:18:5"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1312:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1319:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1309:2:5"},"nodeType":"YulFunctionCall","src":"1309:77:5"},"nodeType":"YulIf","src":"1306:103:5"},{"nodeType":"YulAssignment","src":"1418:20:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1429:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1436:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1425:3:5"},"nodeType":"YulFunctionCall","src":"1425:13:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1418:3:5"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1240:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1250:3:5","type":""}],"src":"1211:233:5"},{"body":{"nodeType":"YulBlock","src":"1478:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1495:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1498:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1488:6:5"},"nodeType":"YulFunctionCall","src":"1488:88:5"},"nodeType":"YulExpressionStatement","src":"1488:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1592:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:5","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1585:6:5"},"nodeType":"YulFunctionCall","src":"1585:15:5"},"nodeType":"YulExpressionStatement","src":"1585:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1616:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1619:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1609:6:5"},"nodeType":"YulFunctionCall","src":"1609:15:5"},"nodeType":"YulExpressionStatement","src":"1609:15:5"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"1450:180:5"},{"body":{"nodeType":"YulBlock","src":"1664:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1681:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1684:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1674:6:5"},"nodeType":"YulFunctionCall","src":"1674:88:5"},"nodeType":"YulExpressionStatement","src":"1674:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1778:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1771:6:5"},"nodeType":"YulFunctionCall","src":"1771:15:5"},"nodeType":"YulExpressionStatement","src":"1771:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1802:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1805:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1795:6:5"},"nodeType":"YulFunctionCall","src":"1795:15:5"},"nodeType":"YulExpressionStatement","src":"1795:15:5"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1636:180:5"},{"body":{"nodeType":"YulBlock","src":"1918:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1935:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"1940:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1928:6:5"},"nodeType":"YulFunctionCall","src":"1928:19:5"},"nodeType":"YulExpressionStatement","src":"1928:19:5"},{"nodeType":"YulAssignment","src":"1956:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1975:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1980:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1971:3:5"},"nodeType":"YulFunctionCall","src":"1971:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1956:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1890:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1895:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1906:11:5","type":""}],"src":"1822:169:5"},{"body":{"nodeType":"YulBlock","src":"2103:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2125:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2133:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2121:3:5"},"nodeType":"YulFunctionCall","src":"2121:14:5"},{"hexValue":"47616d65206973206e6f742070656e64696e67","kind":"string","nodeType":"YulLiteral","src":"2137:21:5","type":"","value":"Game is not pending"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2114:6:5"},"nodeType":"YulFunctionCall","src":"2114:45:5"},"nodeType":"YulExpressionStatement","src":"2114:45:5"}]},"name":"store_literal_in_memory_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2095:6:5","type":""}],"src":"1997:169:5"},{"body":{"nodeType":"YulBlock","src":"2318:220:5","statements":[{"nodeType":"YulAssignment","src":"2328:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2394:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2399:2:5","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2335:58:5"},"nodeType":"YulFunctionCall","src":"2335:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2328:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2500:3:5"}],"functionName":{"name":"store_literal_in_memory_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036","nodeType":"YulIdentifier","src":"2411:88:5"},"nodeType":"YulFunctionCall","src":"2411:93:5"},"nodeType":"YulExpressionStatement","src":"2411:93:5"},{"nodeType":"YulAssignment","src":"2513:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2524:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2529:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2520:3:5"},"nodeType":"YulFunctionCall","src":"2520:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2513:3:5"}]}]},"name":"abi_encode_t_stringliteral_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2306:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2314:3:5","type":""}],"src":"2172:366:5"},{"body":{"nodeType":"YulBlock","src":"2715:248:5","statements":[{"nodeType":"YulAssignment","src":"2725:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2737:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2748:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2733:3:5"},"nodeType":"YulFunctionCall","src":"2733:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2725:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2772:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2783:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2768:3:5"},"nodeType":"YulFunctionCall","src":"2768:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2791:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"2797:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2787:3:5"},"nodeType":"YulFunctionCall","src":"2787:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2761:6:5"},"nodeType":"YulFunctionCall","src":"2761:47:5"},"nodeType":"YulExpressionStatement","src":"2761:47:5"},{"nodeType":"YulAssignment","src":"2817:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2951:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2825:124:5"},"nodeType":"YulFunctionCall","src":"2825:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2817:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2695:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2710:4:5","type":""}],"src":"2544:419:5"},{"body":{"nodeType":"YulBlock","src":"3034:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3051:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3074:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3056:17:5"},"nodeType":"YulFunctionCall","src":"3056:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3044:6:5"},"nodeType":"YulFunctionCall","src":"3044:37:5"},"nodeType":"YulExpressionStatement","src":"3044:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3022:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3029:3:5","type":""}],"src":"2969:118:5"},{"body":{"nodeType":"YulBlock","src":"3151:40:5","statements":[{"nodeType":"YulAssignment","src":"3162:22:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3178:5:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3172:5:5"},"nodeType":"YulFunctionCall","src":"3172:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3162:6:5"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3134:5:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3144:6:5","type":""}],"src":"3093:98:5"},{"body":{"nodeType":"YulBlock","src":"3292:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3309:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"3314:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:5"},"nodeType":"YulFunctionCall","src":"3302:19:5"},"nodeType":"YulExpressionStatement","src":"3302:19:5"},{"nodeType":"YulAssignment","src":"3330:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3349:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3354:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3345:3:5"},"nodeType":"YulFunctionCall","src":"3345:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3330:11:5"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3264:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"3269:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3280:11:5","type":""}],"src":"3197:168:5"},{"body":{"nodeType":"YulBlock","src":"3420:258:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3430:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"3439:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3434:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"3499:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3524:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"3529:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3520:3:5"},"nodeType":"YulFunctionCall","src":"3520:11:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3543:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"3548:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3539:3:5"},"nodeType":"YulFunctionCall","src":"3539:11:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3533:5:5"},"nodeType":"YulFunctionCall","src":"3533:18:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3513:6:5"},"nodeType":"YulFunctionCall","src":"3513:39:5"},"nodeType":"YulExpressionStatement","src":"3513:39:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3460:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"3463:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3457:2:5"},"nodeType":"YulFunctionCall","src":"3457:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3471:19:5","statements":[{"nodeType":"YulAssignment","src":"3473:15:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3482:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"3485:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3478:3:5"},"nodeType":"YulFunctionCall","src":"3478:10:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3473:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"3453:3:5","statements":[]},"src":"3449:113:5"},{"body":{"nodeType":"YulBlock","src":"3596:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3646:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"3651:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3642:3:5"},"nodeType":"YulFunctionCall","src":"3642:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"3660:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3635:6:5"},"nodeType":"YulFunctionCall","src":"3635:27:5"},"nodeType":"YulExpressionStatement","src":"3635:27:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3577:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"3580:6:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3574:2:5"},"nodeType":"YulFunctionCall","src":"3574:13:5"},"nodeType":"YulIf","src":"3571:101:5"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3402:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3407:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"3412:6:5","type":""}],"src":"3371:307:5"},{"body":{"nodeType":"YulBlock","src":"3732:54:5","statements":[{"nodeType":"YulAssignment","src":"3742:38:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3760:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3767:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3756:3:5"},"nodeType":"YulFunctionCall","src":"3756:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3776:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3772:3:5"},"nodeType":"YulFunctionCall","src":"3772:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3752:3:5"},"nodeType":"YulFunctionCall","src":"3752:28:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3742:6:5"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3715:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3725:6:5","type":""}],"src":"3684:102:5"},{"body":{"nodeType":"YulBlock","src":"3882:270:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3892:52:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:5"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3906:31:5"},"nodeType":"YulFunctionCall","src":"3906:38:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3896:6:5","type":""}]},{"nodeType":"YulAssignment","src":"3953:77:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4018:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"4023:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3960:57:5"},"nodeType":"YulFunctionCall","src":"3960:70:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3953:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4065:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"4072:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4061:3:5"},"nodeType":"YulFunctionCall","src":"4061:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"4079:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"4084:6:5"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4039:21:5"},"nodeType":"YulFunctionCall","src":"4039:52:5"},"nodeType":"YulExpressionStatement","src":"4039:52:5"},{"nodeType":"YulAssignment","src":"4100:46:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4111:3:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4138:6:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4116:21:5"},"nodeType":"YulFunctionCall","src":"4116:29:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4107:3:5"},"nodeType":"YulFunctionCall","src":"4107:39:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4100:3:5"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3863:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3870:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3878:3:5","type":""}],"src":"3792:360:5"},{"body":{"nodeType":"YulBlock","src":"4302:275:5","statements":[{"nodeType":"YulAssignment","src":"4312:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4324:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4335:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4320:3:5"},"nodeType":"YulFunctionCall","src":"4320:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4312:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4392:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4405:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4416:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4401:3:5"},"nodeType":"YulFunctionCall","src":"4401:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4348:43:5"},"nodeType":"YulFunctionCall","src":"4348:71:5"},"nodeType":"YulExpressionStatement","src":"4348:71:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4440:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4451:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4436:3:5"},"nodeType":"YulFunctionCall","src":"4436:18:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4460:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"4466:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4456:3:5"},"nodeType":"YulFunctionCall","src":"4456:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4429:6:5"},"nodeType":"YulFunctionCall","src":"4429:48:5"},"nodeType":"YulExpressionStatement","src":"4429:48:5"},{"nodeType":"YulAssignment","src":"4486:84:5","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4556:6:5"},{"name":"tail","nodeType":"YulIdentifier","src":"4565:4:5"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4494:61:5"},"nodeType":"YulFunctionCall","src":"4494:76:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4486:4:5"}]}]},"name":"abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4266:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4278:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4286:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4297:4:5","type":""}],"src":"4158:419:5"},{"body":{"nodeType":"YulBlock","src":"4696:34:5","statements":[{"nodeType":"YulAssignment","src":"4706:18:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"4721:3:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4706:11:5"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4668:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"4673:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4684:11:5","type":""}],"src":"4583:147:5"},{"body":{"nodeType":"YulBlock","src":"4844:265:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4854:52:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4900:5:5"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4868:31:5"},"nodeType":"YulFunctionCall","src":"4868:38:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4858:6:5","type":""}]},{"nodeType":"YulAssignment","src":"4915:95:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4998:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"5003:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4922:75:5"},"nodeType":"YulFunctionCall","src":"4922:88:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4915:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5045:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5052:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5041:3:5"},"nodeType":"YulFunctionCall","src":"5041:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"5059:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"5064:6:5"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5019:21:5"},"nodeType":"YulFunctionCall","src":"5019:52:5"},"nodeType":"YulExpressionStatement","src":"5019:52:5"},{"nodeType":"YulAssignment","src":"5080:23:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5091:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"5096:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5087:3:5"},"nodeType":"YulFunctionCall","src":"5087:16:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5080:3:5"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4825:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4832:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4840:3:5","type":""}],"src":"4736:373:5"},{"body":{"nodeType":"YulBlock","src":"5249:137:5","statements":[{"nodeType":"YulAssignment","src":"5260:100:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5347:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"5356:3:5"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5267:79:5"},"nodeType":"YulFunctionCall","src":"5267:93:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5260:3:5"}]},{"nodeType":"YulAssignment","src":"5370:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"5377:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5370:3:5"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5228:3:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5234:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5245:3:5","type":""}],"src":"5115:271:5"},{"body":{"nodeType":"YulBlock","src":"5498:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5520:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5528:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5516:3:5"},"nodeType":"YulFunctionCall","src":"5516:14:5"},{"hexValue":"72616e646f6d42797465733a206661696c6564","kind":"string","nodeType":"YulLiteral","src":"5532:21:5","type":"","value":"randomBytes: failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5509:6:5"},"nodeType":"YulFunctionCall","src":"5509:45:5"},"nodeType":"YulExpressionStatement","src":"5509:45:5"}]},"name":"store_literal_in_memory_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5490:6:5","type":""}],"src":"5392:169:5"},{"body":{"nodeType":"YulBlock","src":"5713:220:5","statements":[{"nodeType":"YulAssignment","src":"5723:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5789:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5794:2:5","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5730:58:5"},"nodeType":"YulFunctionCall","src":"5730:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5723:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5895:3:5"}],"functionName":{"name":"store_literal_in_memory_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac","nodeType":"YulIdentifier","src":"5806:88:5"},"nodeType":"YulFunctionCall","src":"5806:93:5"},"nodeType":"YulExpressionStatement","src":"5806:93:5"},{"nodeType":"YulAssignment","src":"5908:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5919:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5924:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5915:3:5"},"nodeType":"YulFunctionCall","src":"5915:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5908:3:5"}]}]},"name":"abi_encode_t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5701:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5709:3:5","type":""}],"src":"5567:366:5"},{"body":{"nodeType":"YulBlock","src":"6110:248:5","statements":[{"nodeType":"YulAssignment","src":"6120:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6132:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6143:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6128:3:5"},"nodeType":"YulFunctionCall","src":"6128:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6120:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6167:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6178:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6163:3:5"},"nodeType":"YulFunctionCall","src":"6163:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6186:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"6192:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6182:3:5"},"nodeType":"YulFunctionCall","src":"6182:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6156:6:5"},"nodeType":"YulFunctionCall","src":"6156:47:5"},"nodeType":"YulExpressionStatement","src":"6156:47:5"},{"nodeType":"YulAssignment","src":"6212:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6346:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6220:124:5"},"nodeType":"YulFunctionCall","src":"6220:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6212:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6090:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6105:4:5","type":""}],"src":"5939:419:5"},{"body":{"nodeType":"YulBlock","src":"6470:71:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6492:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"6500:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6488:3:5"},"nodeType":"YulFunctionCall","src":"6488:14:5"},{"hexValue":"496e76616c69642072616e646f6d206279746573206c656e677468","kind":"string","nodeType":"YulLiteral","src":"6504:29:5","type":"","value":"Invalid random bytes length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6481:6:5"},"nodeType":"YulFunctionCall","src":"6481:53:5"},"nodeType":"YulExpressionStatement","src":"6481:53:5"}]},"name":"store_literal_in_memory_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6462:6:5","type":""}],"src":"6364:177:5"},{"body":{"nodeType":"YulBlock","src":"6693:220:5","statements":[{"nodeType":"YulAssignment","src":"6703:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6769:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"6774:2:5","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6710:58:5"},"nodeType":"YulFunctionCall","src":"6710:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6703:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6875:3:5"}],"functionName":{"name":"store_literal_in_memory_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd","nodeType":"YulIdentifier","src":"6786:88:5"},"nodeType":"YulFunctionCall","src":"6786:93:5"},"nodeType":"YulExpressionStatement","src":"6786:93:5"},{"nodeType":"YulAssignment","src":"6888:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6899:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"6904:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6895:3:5"},"nodeType":"YulFunctionCall","src":"6895:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6888:3:5"}]}]},"name":"abi_encode_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6681:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6689:3:5","type":""}],"src":"6547:366:5"},{"body":{"nodeType":"YulBlock","src":"7090:248:5","statements":[{"nodeType":"YulAssignment","src":"7100:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7112:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7123:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7108:3:5"},"nodeType":"YulFunctionCall","src":"7108:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7100:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7147:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7158:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7143:3:5"},"nodeType":"YulFunctionCall","src":"7143:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7166:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"7172:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7162:3:5"},"nodeType":"YulFunctionCall","src":"7162:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7136:6:5"},"nodeType":"YulFunctionCall","src":"7136:47:5"},"nodeType":"YulExpressionStatement","src":"7136:47:5"},{"nodeType":"YulAssignment","src":"7192:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7326:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7200:124:5"},"nodeType":"YulFunctionCall","src":"7200:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7192:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7070:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7085:4:5","type":""}],"src":"6919:419:5"},{"body":{"nodeType":"YulBlock","src":"7372:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7389:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7392:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:5"},"nodeType":"YulFunctionCall","src":"7382:88:5"},"nodeType":"YulExpressionStatement","src":"7382:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7486:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7489:4:5","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7479:6:5"},"nodeType":"YulFunctionCall","src":"7479:15:5"},"nodeType":"YulExpressionStatement","src":"7479:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7510:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7513:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7503:6:5"},"nodeType":"YulFunctionCall","src":"7503:15:5"},"nodeType":"YulExpressionStatement","src":"7503:15:5"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7344:180:5"},{"body":{"nodeType":"YulBlock","src":"7573:43:5","statements":[{"nodeType":"YulAssignment","src":"7583:27:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7598:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"7605:4:5","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7594:3:5"},"nodeType":"YulFunctionCall","src":"7594:16:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7583:7:5"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7555:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7565:7:5","type":""}],"src":"7530:86:5"},{"body":{"nodeType":"YulBlock","src":"7664:195:5","statements":[{"nodeType":"YulAssignment","src":"7674:23:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7695:1:5"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"7679:15:5"},"nodeType":"YulFunctionCall","src":"7679:18:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7674:1:5"}]},{"nodeType":"YulAssignment","src":"7706:23:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7727:1:5"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"7711:15:5"},"nodeType":"YulFunctionCall","src":"7711:18:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7706:1:5"}]},{"body":{"nodeType":"YulBlock","src":"7805:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7807:16:5"},"nodeType":"YulFunctionCall","src":"7807:18:5"},"nodeType":"YulExpressionStatement","src":"7807:18:5"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7788:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7795:4:5","type":"","value":"0xff"},{"name":"y","nodeType":"YulIdentifier","src":"7801:1:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7791:3:5"},"nodeType":"YulFunctionCall","src":"7791:12:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7785:2:5"},"nodeType":"YulFunctionCall","src":"7785:19:5"},"nodeType":"YulIf","src":"7782:45:5"},{"nodeType":"YulAssignment","src":"7837:16:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7848:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"7851:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7844:3:5"},"nodeType":"YulFunctionCall","src":"7844:9:5"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7837:3:5"}]}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7651:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"7654:1:5","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7660:3:5","type":""}],"src":"7622:237:5"},{"body":{"nodeType":"YulBlock","src":"7893:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7910:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7913:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7903:6:5"},"nodeType":"YulFunctionCall","src":"7903:88:5"},"nodeType":"YulExpressionStatement","src":"7903:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8007:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8010:4:5","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8000:6:5"},"nodeType":"YulFunctionCall","src":"8000:15:5"},"nodeType":"YulExpressionStatement","src":"8000:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8031:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8034:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8024:6:5"},"nodeType":"YulFunctionCall","src":"8024:15:5"},"nodeType":"YulExpressionStatement","src":"8024:15:5"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7865:180:5"},{"body":{"nodeType":"YulBlock","src":"8083:138:5","statements":[{"nodeType":"YulAssignment","src":"8093:23:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8114:1:5"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"8098:15:5"},"nodeType":"YulFunctionCall","src":"8098:18:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8093:1:5"}]},{"nodeType":"YulAssignment","src":"8125:23:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8146:1:5"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"8130:15:5"},"nodeType":"YulFunctionCall","src":"8130:18:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8125:1:5"}]},{"body":{"nodeType":"YulBlock","src":"8170:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"8172:16:5"},"nodeType":"YulFunctionCall","src":"8172:18:5"},"nodeType":"YulExpressionStatement","src":"8172:18:5"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8167:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8160:6:5"},"nodeType":"YulFunctionCall","src":"8160:9:5"},"nodeType":"YulIf","src":"8157:35:5"},{"nodeType":"YulAssignment","src":"8201:14:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8210:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"8213:1:5"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8206:3:5"},"nodeType":"YulFunctionCall","src":"8206:9:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8201:1:5"}]}]},"name":"mod_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8072:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"8075:1:5","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8081:1:5","type":""}],"src":"8051:170:5"},{"body":{"nodeType":"YulBlock","src":"8255:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8272:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8275:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8265:6:5"},"nodeType":"YulFunctionCall","src":"8265:88:5"},"nodeType":"YulExpressionStatement","src":"8265:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8369:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8372:4:5","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8362:6:5"},"nodeType":"YulFunctionCall","src":"8362:15:5"},"nodeType":"YulExpressionStatement","src":"8362:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8393:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8396:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8386:6:5"},"nodeType":"YulFunctionCall","src":"8386:15:5"},"nodeType":"YulExpressionStatement","src":"8386:15:5"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"8227:180:5"},{"body":{"nodeType":"YulBlock","src":"8464:269:5","statements":[{"nodeType":"YulAssignment","src":"8474:22:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8488:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"8494:1:5","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8484:3:5"},"nodeType":"YulFunctionCall","src":"8484:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8474:6:5"}]},{"nodeType":"YulVariableDeclaration","src":"8505:38:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8535:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"8541:1:5","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8531:3:5"},"nodeType":"YulFunctionCall","src":"8531:12:5"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8509:18:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"8582:51:5","statements":[{"nodeType":"YulAssignment","src":"8596:27:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8610:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8618:4:5","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8606:3:5"},"nodeType":"YulFunctionCall","src":"8606:17:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8596:6:5"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8562:18:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8555:6:5"},"nodeType":"YulFunctionCall","src":"8555:26:5"},"nodeType":"YulIf","src":"8552:81:5"},{"body":{"nodeType":"YulBlock","src":"8685:42:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8699:16:5"},"nodeType":"YulFunctionCall","src":"8699:18:5"},"nodeType":"YulExpressionStatement","src":"8699:18:5"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8649:18:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8672:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8680:2:5","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8669:2:5"},"nodeType":"YulFunctionCall","src":"8669:14:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8646:2:5"},"nodeType":"YulFunctionCall","src":"8646:38:5"},"nodeType":"YulIf","src":"8643:84:5"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8448:4:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8457:6:5","type":""}],"src":"8413:320:5"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game is not pending\")\n\n    }\n\n    function abi_encode_t_stringliteral_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9733eac1acb5267920f19bec67b795311041515059c30ef12b525d1d1c57036_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac(memPtr) {\n\n        mstore(add(memPtr, 0), \"randomBytes: failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid random bytes length\")\n\n    }\n\n    function abi_encode_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6aa8943688158b6eff7d200ee2ddef3b2ed57ccae185366526fb808e7b2c00cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint8(x, y) -> r {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c80637255d7291461003b578063efaa55a014610045575b600080fd5b610043610061565b005b61005f600480360381019061005a9190610775565b61010b565b005b610069610133565b6001600080600081548092919061007f906107d1565b91905055815260200190815260200160002060008201518160000160008201518160000190805190602001906100b69291906105c1565b50505060208201518160010190805190602001906100d5929190610647565b5060408201518160020160006101000a81548160ff021916908360028111156101015761010061081a565b5b0217905550905050565b61013033600160008481526020019081526020016000206101be90919063ffffffff16565b50565b61013b6106d1565b604051806060016040528061014e6102a1565b8152602001600067ffffffffffffffff81111561016e5761016d610849565b5b60405190808252806020026020018201604052801561019c5781602001602082028036833780820191505090505b508152602001600060028111156101b6576101b561081a565b5b815250905090565b81600060028111156101d3576101d261081a565b5b8160020160009054906101000a900460ff1660028111156101f7576101f661081a565b5b14610237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022e906108d5565b60405180910390fd5b82600101829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6102a961070a565b60006102c8603460ff16604051806020016040528060008152506102e7565b905060405180602001604052806102de836103d6565b81525091505090565b606060008073010000000000000000000000000000000000000173ffffffffffffffffffffffffffffffffffffffff16858560405160200161032a92919061099d565b6040516020818303038152906040526040516103469190610a09565b600060405180830381855afa9150503d8060008114610381576040519150601f19603f3d011682016040523d82523d6000602084013e610386565b606091505b5091509150816103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c290610a6c565b60405180910390fd5b809250505092915050565b6060603460ff1682511461041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610ad8565b60405180910390fd5b6000603460ff1667ffffffffffffffff81111561043f5761043e610849565b5b6040519080825280601f01601f1916602001820160405280156104715781602001600182028036833780820191505090505b509050600080600090505b84518110156105b957600085828151811061049a57610499610af8565b5b602001015160f81c60f81b60f81c90505b6001156105615760008060d01b8260ff16600160001b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1916901b851679ffffffffffffffffffffffffffffffffffffffffffffffffffff19161415905080156105295760346001836105189190610b34565b6105229190610b9a565b915061055b565b8160ff16600160001b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1916901b8417935050610561565b506104ab565b8060f81b84838151811061057857610577610af8565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535050806105b2906107d1565b905061047c565b505050919050565b8280546105cd90610bfa565b90600052602060002090601f0160209004810192826105ef5760008555610636565b82601f1061060857805160ff1916838001178555610636565b82800160010185558215610636579182015b8281111561063557825182559160200191906001019061061a565b5b509050610643919061071d565b5090565b8280548282559060005260206000209081019282156106c0579160200282015b828111156106bf5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610667565b5b5090506106cd919061071d565b5090565b60405180606001604052806106e461070a565b815260200160608152602001600060028111156107045761070361081a565b5b81525090565b6040518060200160405280606081525090565b5b8082111561073657600081600090555060010161071e565b5090565b600080fd5b6000819050919050565b6107528161073f565b811461075d57600080fd5b50565b60008135905061076f81610749565b92915050565b60006020828403121561078b5761078a61073a565b5b600061079984828501610760565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107dc8261073f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561080f5761080e6107a2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f47616d65206973206e6f742070656e64696e6700000000000000000000000000600082015250565b60006108bf601383610878565b91506108ca82610889565b602082019050919050565b600060208201905081810360008301526108ee816108b2565b9050919050565b6108fe8161073f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561093e578082015181840152602081019050610923565b8381111561094d576000848401525b50505050565b6000601f19601f8301169050919050565b600061096f82610904565b610979818561090f565b9350610989818560208601610920565b61099281610953565b840191505092915050565b60006040820190506109b260008301856108f5565b81810360208301526109c48184610964565b90509392505050565b600081905092915050565b60006109e382610904565b6109ed81856109cd565b93506109fd818560208601610920565b80840191505092915050565b6000610a1582846109d8565b915081905092915050565b7f72616e646f6d42797465733a206661696c656400000000000000000000000000600082015250565b6000610a56601383610878565b9150610a6182610a20565b602082019050919050565b60006020820190508181036000830152610a8581610a49565b9050919050565b7f496e76616c69642072616e646f6d206279746573206c656e6774680000000000600082015250565b6000610ac2601b83610878565b9150610acd82610a8c565b602082019050919050565b60006020820190508181036000830152610af181610ab5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b6000610b3f82610b27565b9150610b4a83610b27565b92508260ff03821115610b6057610b5f6107a2565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ba582610b27565b9150610bb083610b27565b925082610bc057610bbf610b6b565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c1257607f821691505b60208210811415610c2657610c25610bcb565b5b5091905056fea264697066735822122009bf4507d58f36ca9b249accb971a0b03629c50444feea6388df4a4e6a06fce464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7255D729 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEFAA55A0 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x10B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7F SWAP1 PUSH2 0x7D1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xB6 SWAP3 SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xD5 SWAP3 SWAP2 SWAP1 PUSH2 0x647 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x101 JUMPI PUSH2 0x100 PUSH2 0x81A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP JUMP JUMPDEST PUSH2 0x130 CALLER PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13B PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x14E PUSH2 0x2A1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E JUMPI PUSH2 0x16D PUSH2 0x849 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x1B5 PUSH2 0x81A JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D3 JUMPI PUSH2 0x1D2 PUSH2 0x81A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F7 JUMPI PUSH2 0x1F6 PUSH2 0x81A JUMP JUMPDEST JUMPDEST EQ PUSH2 0x237 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22E SWAP1 PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8 PUSH1 0x34 PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2DE DUP4 PUSH2 0x3D6 JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH20 0x100000000000000000000000000000000000001 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x32A SWAP3 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x381 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x386 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x34 PUSH1 0xFF AND DUP3 MLOAD EQ PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x849 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x471 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0xAF8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 PUSH1 0xD0 SHL DUP3 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x0 SHL PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL DUP6 AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x34 PUSH1 0x1 DUP4 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x522 SWAP2 SWAP1 PUSH2 0xB9A JUMP JUMPDEST SWAP2 POP PUSH2 0x55B JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0x0 SHL PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHL DUP5 OR SWAP4 POP POP PUSH2 0x561 JUMP JUMPDEST POP PUSH2 0x4AB JUMP JUMPDEST DUP1 PUSH1 0xF8 SHL DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x578 JUMPI PUSH2 0x577 PUSH2 0xAF8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP POP DUP1 PUSH2 0x5B2 SWAP1 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x47C JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x5CD SWAP1 PUSH2 0xBFA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x5EF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x636 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x608 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x636 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x636 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x635 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x61A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x6C0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x6BF JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x667 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x6E4 PUSH2 0x70A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x704 JUMPI PUSH2 0x703 PUSH2 0x81A JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x736 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x71E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x752 DUP2 PUSH2 0x73F JUMP JUMPDEST DUP2 EQ PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x76F DUP2 PUSH2 0x749 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78B JUMPI PUSH2 0x78A PUSH2 0x73A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x799 DUP5 DUP3 DUP6 ADD PUSH2 0x760 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7DC DUP3 PUSH2 0x73F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x80F JUMPI PUSH2 0x80E PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D65206973206E6F742070656E64696E6700000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BF PUSH1 0x13 DUP4 PUSH2 0x878 JUMP JUMPDEST SWAP2 POP PUSH2 0x8CA DUP3 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8EE DUP2 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FE DUP2 PUSH2 0x73F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x93E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x923 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96F DUP3 PUSH2 0x904 JUMP JUMPDEST PUSH2 0x979 DUP2 DUP6 PUSH2 0x90F JUMP JUMPDEST SWAP4 POP PUSH2 0x989 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x920 JUMP JUMPDEST PUSH2 0x992 DUP2 PUSH2 0x953 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9B2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8F5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x9C4 DUP2 DUP5 PUSH2 0x964 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E3 DUP3 PUSH2 0x904 JUMP JUMPDEST PUSH2 0x9ED DUP2 DUP6 PUSH2 0x9CD JUMP JUMPDEST SWAP4 POP PUSH2 0x9FD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x920 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA15 DUP3 DUP5 PUSH2 0x9D8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x72616E646F6D42797465733A206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 PUSH1 0x13 DUP4 PUSH2 0x878 JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP3 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA85 DUP2 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072616E646F6D206279746573206C656E6774680000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 PUSH1 0x1B DUP4 PUSH2 0x878 JUMP JUMPDEST SWAP2 POP PUSH2 0xACD DUP3 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAF1 DUP2 PUSH2 0xAB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3F DUP3 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xB4A DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0xB60 JUMPI PUSH2 0xB5F PUSH2 0x7A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBA5 DUP3 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB0 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xBC0 JUMPI PUSH2 0xBBF PUSH2 0xB6B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC26 JUMPI PUSH2 0xC25 PUSH2 0xBCB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xBF GASLIMIT SMOD 0xD5 DUP16 CALLDATASIZE 0xCA SWAP12 0x24 SWAP11 0xCC 0xB9 PUSH18 0xA0B03629C50444FEEA6388DF4A4E6A06FCE4 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"128:318:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;252:93;;;:::i;:::-;;351:92;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;252:93;320:18;:16;:18::i;:::-;293:10;:24;304:10;;:12;;;;;;;;;:::i;:::-;;;;;293:24;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;252:93::o;351:92::-;401:35;425:10;401;:18;412:6;401:18;;;;;;;;;;;:23;;:35;;;;:::i;:::-;351:92;:::o;1420:211:3:-;1461:11;;:::i;:::-;1491:133;;;;;;;;1516:18;:16;:18::i;:::-;1491:133;;;;1571:1;1557:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1491:133;;;;1595:18;1491:133;;;;;;;;:::i;:::-;;;;;1484:140;;1420:211;:::o;1637:118::-;1707:4;1354:18;1339:33;;;;;;;;:::i;:::-;;:4;:11;;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;1331:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1723:4:::1;:12;;1741:6;1723:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:118:::0;;;:::o;207:171::-;248:11;;:::i;:::-;271:17;291:32;75:2:2;291:32:3;;;;;;;;;;;;;;:20;:32::i;:::-;271:52;;340:31;;;;;;;;345:25;365:4;345:19;:25::i;:::-;340:31;;;333:38;;;207:171;:::o;5994:325:0:-;6099:12;6128;6142:20;1237:42;6166:23;;6214:8;6224:4;6203:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6166:73;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6127:112;;;;6257:7;6249:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;6305:7;6298:14;;;;5994:325;;;;:::o;384:733:3:-;460:12;75:2:2;492:28:3;;:11;:18;:28;484:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;562:20;75:2:2;585:17:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:40;;612:18;645:6;652:1;645:8;;640:471;657:11;:18;655:1;:20;640:471;;;696:13;718:11;730:1;718:14;;;;;;;;:::i;:::-;;;;;;;;;;712:21;;696:37;;747:312;754:4;747:312;;;778:13;833:1;794:40;;820:7;810:17;;45:1:2;32:16;;810:17:3;;;;;795:11;:33;794:40;;;;;778:56;;856:8;852:193;;;75:2:2;909:1:3;899:7;:11;;;;:::i;:::-;898:22;;;;:::i;:::-;888:32;;852:193;;;992:7;982:17;;45:1:2;32:16;;982:17:3;;;;;967:32;;;;1021:5;;;852:193;760:299;747:312;;;1092:7;1085:15;;1072:7;1080:1;1072:10;;;;;;;;:::i;:::-;;;;;:28;;;;;;;;;;;682:429;677:3;;;;:::i;:::-;;;640:471;;;;474:643;;384:733;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:180::-;1073:77;1070:1;1063:88;1170:4;1167:1;1160:15;1194:4;1191:1;1184:15;1211:233;1250:3;1273:24;1291:5;1273:24;:::i;:::-;1264:33;;1319:66;1312:5;1309:77;1306:103;;;1389:18;;:::i;:::-;1306:103;1436:1;1429:5;1425:13;1418:20;;1211:233;;;:::o;1450:180::-;1498:77;1495:1;1488:88;1595:4;1592:1;1585:15;1619:4;1616:1;1609:15;1636:180;1684:77;1681:1;1674:88;1781:4;1778:1;1771:15;1805:4;1802:1;1795:15;1822:169;1906:11;1940:6;1935:3;1928:19;1980:4;1975:3;1971:14;1956:29;;1822:169;;;;:::o;1997:::-;2137:21;2133:1;2125:6;2121:14;2114:45;1997:169;:::o;2172:366::-;2314:3;2335:67;2399:2;2394:3;2335:67;:::i;:::-;2328:74;;2411:93;2500:3;2411:93;:::i;:::-;2529:2;2524:3;2520:12;2513:19;;2172:366;;;:::o;2544:419::-;2710:4;2748:2;2737:9;2733:18;2725:26;;2797:9;2791:4;2787:20;2783:1;2772:9;2768:17;2761:47;2825:131;2951:4;2825:131;:::i;:::-;2817:139;;2544:419;;;:::o;2969:118::-;3056:24;3074:5;3056:24;:::i;:::-;3051:3;3044:37;2969:118;;:::o;3093:98::-;3144:6;3178:5;3172:12;3162:22;;3093:98;;;:::o;3197:168::-;3280:11;3314:6;3309:3;3302:19;3354:4;3349:3;3345:14;3330:29;;3197:168;;;;:::o;3371:307::-;3439:1;3449:113;3463:6;3460:1;3457:13;3449:113;;;3548:1;3543:3;3539:11;3533:18;3529:1;3524:3;3520:11;3513:39;3485:2;3482:1;3478:10;3473:15;;3449:113;;;3580:6;3577:1;3574:13;3571:101;;;3660:1;3651:6;3646:3;3642:16;3635:27;3571:101;3420:258;3371:307;;;:::o;3684:102::-;3725:6;3776:2;3772:7;3767:2;3760:5;3756:14;3752:28;3742:38;;3684:102;;;:::o;3792:360::-;3878:3;3906:38;3938:5;3906:38;:::i;:::-;3960:70;4023:6;4018:3;3960:70;:::i;:::-;3953:77;;4039:52;4084:6;4079:3;4072:4;4065:5;4061:16;4039:52;:::i;:::-;4116:29;4138:6;4116:29;:::i;:::-;4111:3;4107:39;4100:46;;3882:270;3792:360;;;;:::o;4158:419::-;4297:4;4335:2;4324:9;4320:18;4312:26;;4348:71;4416:1;4405:9;4401:17;4392:6;4348:71;:::i;:::-;4466:9;4460:4;4456:20;4451:2;4440:9;4436:18;4429:48;4494:76;4565:4;4556:6;4494:76;:::i;:::-;4486:84;;4158:419;;;;;:::o;4583:147::-;4684:11;4721:3;4706:18;;4583:147;;;;:::o;4736:373::-;4840:3;4868:38;4900:5;4868:38;:::i;:::-;4922:88;5003:6;4998:3;4922:88;:::i;:::-;4915:95;;5019:52;5064:6;5059:3;5052:4;5045:5;5041:16;5019:52;:::i;:::-;5096:6;5091:3;5087:16;5080:23;;4844:265;4736:373;;;;:::o;5115:271::-;5245:3;5267:93;5356:3;5347:6;5267:93;:::i;:::-;5260:100;;5377:3;5370:10;;5115:271;;;;:::o;5392:169::-;5532:21;5528:1;5520:6;5516:14;5509:45;5392:169;:::o;5567:366::-;5709:3;5730:67;5794:2;5789:3;5730:67;:::i;:::-;5723:74;;5806:93;5895:3;5806:93;:::i;:::-;5924:2;5919:3;5915:12;5908:19;;5567:366;;;:::o;5939:419::-;6105:4;6143:2;6132:9;6128:18;6120:26;;6192:9;6186:4;6182:20;6178:1;6167:9;6163:17;6156:47;6220:131;6346:4;6220:131;:::i;:::-;6212:139;;5939:419;;;:::o;6364:177::-;6504:29;6500:1;6492:6;6488:14;6481:53;6364:177;:::o;6547:366::-;6689:3;6710:67;6774:2;6769:3;6710:67;:::i;:::-;6703:74;;6786:93;6875:3;6786:93;:::i;:::-;6904:2;6899:3;6895:12;6888:19;;6547:366;;;:::o;6919:419::-;7085:4;7123:2;7112:9;7108:18;7100:26;;7172:9;7166:4;7162:20;7158:1;7147:9;7143:17;7136:47;7200:131;7326:4;7200:131;:::i;:::-;7192:139;;6919:419;;;:::o;7344:180::-;7392:77;7389:1;7382:88;7489:4;7486:1;7479:15;7513:4;7510:1;7503:15;7530:86;7565:7;7605:4;7598:5;7594:16;7583:27;;7530:86;;;:::o;7622:237::-;7660:3;7679:18;7695:1;7679:18;:::i;:::-;7674:23;;7711:18;7727:1;7711:18;:::i;:::-;7706:23;;7801:1;7795:4;7791:12;7788:1;7785:19;7782:45;;;7807:18;;:::i;:::-;7782:45;7851:1;7848;7844:9;7837:16;;7622:237;;;;:::o;7865:180::-;7913:77;7910:1;7903:88;8010:4;8007:1;8000:15;8034:4;8031:1;8024:15;8051:170;8081:1;8098:18;8114:1;8098:18;:::i;:::-;8093:23;;8130:18;8146:1;8130:18;:::i;:::-;8125:23;;8167:1;8157:35;;8172:18;;:::i;:::-;8157:35;8213:1;8210;8206:9;8201:14;;8051:170;;;;:::o;8227:180::-;8275:77;8272:1;8265:88;8372:4;8369:1;8362:15;8396:4;8393:1;8386:15;8413:320;8457:6;8494:1;8488:4;8484:12;8474:22;;8541:1;8535:4;8531:12;8562:18;8552:81;;8618:4;8610:6;8606:17;8596:27;;8552:81;8680:2;8672:6;8669:14;8649:18;8646:38;8643:84;;;8699:18;;:::i;:::-;8643:84;8464:269;8413:320;;;:::o"},"methodIdentifiers":{"createGame()":"7255d729","joinGame(uint256)":"efaa55a0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"joinGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Poker.sol\":\"Poker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x81a0aa5766f7c48ea799114f44e902b2eb11f21808db23d56b6ca9edd48b8f59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94bd0c5263e98788d38bf7b6c24781dac3df4d5cb14045f70d14e208719c292\",\"dweb:/ipfs/QmZKEwnG9a9uPbgWCPVcbW7WGTy53Su6P1DTV95goPs4yU\"]},\"contracts/Cards.sol\":{\"keccak256\":\"0xf863e0444d04cc8b7e162a1a80fab317fed8602603cad84e93d77a6f541f09d0\",\"urls\":[\"bzz-raw://6d4b77aa41c4e392f1b29d2cfb00558fdf085f442b1dd94a241103495c16588d\",\"dweb:/ipfs/QmYExZC82peCofUQXZGVoP3EDcQJU6MEfRKpfcy3en4EKy\"]},\"contracts/Constants.sol\":{\"keccak256\":\"0x31f6cd9c223f4b06b59ed4e7d1235225de5bf8f8c7f66a9431b6990aeaa9e34a\",\"urls\":[\"bzz-raw://c468367e97df1e542ff35e38ba1c394ccf6ebb385c1d058e28dbb6da767025b2\",\"dweb:/ipfs/QmevR2ZNdgLFwvVd4Fci3xDsbfjjjLz9RwnhjssJyenVoF\"]},\"contracts/Game.sol\":{\"keccak256\":\"0x20284433c6f871e38eb5d7d6a0aafad3947945a62fa8148d6f3d5f80ac683f29\",\"urls\":[\"bzz-raw://0fbd55bb9868623ac1279a0d5dbafce971214a9ec62f9556a744ad7b0d532d32\",\"dweb:/ipfs/QmSUJCBV2peNVsCJL89HaeFggqeKPtfciejh17iVRuWJpY\"]},\"contracts/Poker.sol\":{\"keccak256\":\"0x0ef23798dede7eed92cad89264c6f899140ee1eb64273417cac183b851ecad20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://630dccafd2f4ba490ea515c41568c5f00e2b33a0a43d233ffc2ebfdf83f9905c\",\"dweb:/ipfs/QmVgsjrmk9LJkmm7MZcvTcDzzJfda1fJQrTepbZoWqfA3z\"]}},\"version\":1}"}}}}}