/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DeckUtils, DeckUtilsInterface } from "../../Game.sol/DeckUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "randomBytes",
        type: "bytes",
      },
    ],
    name: "seedIntoCardIndices",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610904610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063b153b56e1461003a575b600080fd5b610054600480360381019061004f9190610544565b61006a565b6040516100619190610615565b60405180910390f35b60606100768251610268565b61007f82610301565b603460ff168251146100c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bd90610694565b60405180910390fd5b6000603460ff1667ffffffffffffffff8111156100e6576100e5610419565b5b6040519080825280601f01601f1916602001820160405280156101185781602001600182028036833780820191505090505b509050600080600090505b8451811015610260576000858281518110610141576101406106b4565b5b602001015160f81c60f81b60f81c90505b6001156102085760008060d01b8260ff16600160001b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1916901b851679ffffffffffffffffffffffffffffffffffffffffffffffffffff19161415905080156101d05760346001836101bf919061071f565b6101c99190610785565b9150610202565b8160ff16600160001b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1916901b8417935050610208565b50610152565b8060f81b84838151811061021f5761021e6106b4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505080610259906107c0565b9050610123565b505050919050565b6102fe8160405160240161027c9190610818565b6040516020818303038152906040527ff82c50f1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061039a565b50565b61039781604051602401610315919061087d565b6040516020818303038152906040527f0be77f56000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061039a565b50565b6103b1816103a96103b46103d5565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6103e0819050919050565b6103e861089f565b565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61045182610408565b810181811067ffffffffffffffff821117156104705761046f610419565b5b80604052505050565b60006104836103ea565b905061048f8282610448565b919050565b600067ffffffffffffffff8211156104af576104ae610419565b5b6104b882610408565b9050602081019050919050565b82818337600083830152505050565b60006104e76104e284610494565b610479565b90508281526020810184848401111561050357610502610403565b5b61050e8482856104c5565b509392505050565b600082601f83011261052b5761052a6103fe565b5b813561053b8482602086016104d4565b91505092915050565b60006020828403121561055a576105596103f4565b5b600082013567ffffffffffffffff811115610578576105776103f9565b5b61058484828501610516565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105c75780820151818401526020810190506105ac565b838111156105d6576000848401525b50505050565b60006105e78261058d565b6105f18185610598565b93506106018185602086016105a9565b61060a81610408565b840191505092915050565b6000602082019050818103600083015261062f81846105dc565b905092915050565b600082825260208201905092915050565b7f496e76616c69642072616e646f6d206279746573206c656e6774680000000000600082015250565b600061067e601b83610637565b915061068982610648565b602082019050919050565b600060208201905081810360008301526106ad81610671565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061072a826106e3565b9150610735836106e3565b92508260ff0382111561074b5761074a6106f0565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610790826106e3565b915061079b836106e3565b9250826107ab576107aa610756565b5b828206905092915050565b6000819050919050565b60006107cb826107b6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156107fe576107fd6106f0565b5b600182019050919050565b610812816107b6565b82525050565b600060208201905061082d6000830184610809565b92915050565b600082825260208201905092915050565b600061084f8261058d565b6108598185610833565b93506108698185602086016105a9565b61087281610408565b840191505092915050565b600060208201905081810360008301526108978184610844565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220e325673ff4b121248dfe541501190793f3be2224df7e30caf5090846992c6ad964736f6c63430008090033";

type DeckUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeckUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeckUtils__factory extends ContractFactory {
  constructor(...args: DeckUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DeckUtils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DeckUtils__factory {
    return super.connect(runner) as DeckUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeckUtilsInterface {
    return new Interface(_abi) as DeckUtilsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DeckUtils {
    return new Contract(address, _abi, runner) as unknown as DeckUtils;
  }
}
